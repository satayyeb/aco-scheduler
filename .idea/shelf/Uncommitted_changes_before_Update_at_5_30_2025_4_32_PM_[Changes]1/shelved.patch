Index: config.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class Config:\r\n    CHUNK_SIZE = 1200\r\n\r\n    class SimulatorConfig:\r\n        SIMULATION_DURATION = 1200\r\n        TIMEOUT_TIME = 2\r\n\r\n    class CloudConfig:\r\n        DEFAULT_X = 2200\r\n        DEFAULT_Y = 2200\r\n        DEFAULT_RADIUS = 2500\r\n\r\n        MAX_TASK_QUEUE_LEN = 2000\r\n        DEFAULT_COMPUTATION_POWER = 1000\r\n        POWER_LIMIT = 0.99\r\n\r\n    class FixedFogNodeConfig:\r\n        MAX_TASK_QUEUE_LEN = 400\r\n        DEFAULT_COMPUTATION_POWER = 500\r\n        POWER_LIMIT = 0.9\r\n\r\n    class MobileFogNodeConfig:\r\n        DEFAULT_RADIUS = 150\r\n        MAX_TASK_QUEUE_LEN = 150\r\n        DEFAULT_COMPUTATION_POWER = 200\r\n        POWER_LIMIT = 0.6\r\n\r\n    class UserNodeConfig:\r\n        MAX_TASK_QUEUE_LEN = 10\r\n        DEFAULT_COMPUTATION_POWER = 20\r\n        LOCAL_OFFLOAD_POWER_OVERHEAD = 1.1\r\n        LOCAL_EXECUTE_TIME_OVERHEAD = 1.1\r\n        POWER_LIMIT = 0.4\r\n\r\n    class ZoneManagerConfig:\r\n        ALGORITHM_RANDOM = \"Random\"\r\n        ALGORITHM_HEURISTIC = \"Heuristic\"\r\n        ALGORITHM_HRL = \"HRL\"\r\n        ALGORITHM_ONLY_CLOUD = \"Only Cloud\"\r\n        ALGORITHM_ONLY_FOG = \"Only Fog\"\r\n        ALGORITHM_DEEP_RL = \"DeepRL\"\r\n        ALGORITHM_HEURISTIC2 = \"Heuristic2\"\r\n\r\n        DEFAULT_ALGORITHM = ALGORITHM_DEEP_RL\r\n\r\n    class NoiseMethod:\r\n        PROPOSED_METHOD = \"Proposed Method\"\r\n        PROPOSED_METHOD2 = \"Proposed Method2\"\r\n        FIRST_CHOICE = \"First Choice\"\r\n        RANDOM_CHOICE = \"Random Choice\"\r\n        MIN_DISTANCE = \"Min Distance\"\r\n\r\n        DEFAULT_METHOD = PROPOSED_METHOD\r\n\r\n    class RandomZoneManagerConfig:\r\n        OFFLOAD_CHANCE: float = 0.5\r\n\r\n    class TaskConfig:\r\n        # note: PACKET_COST_PER_METER = 0.001\r\n        PACKET_COST_PER_METER = 0.001\r\n        # PACKET_COST_PER_METER = 0.005\r\n\r\n        # note: TASK_COST_PER_METER = 0.005\r\n        # TASK_COST_PER_METER = 0.01\r\n        TASK_COST_PER_METER = 0.005\r\n\r\n        MIGRATION_OVERHEAD = 0.01\r\n        CLOUD_PROCESSING_OVERHEAD = 0.5\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config.py b/config.py
--- a/config.py	
+++ b/config.py	
@@ -3,7 +3,6 @@
 
     class SimulatorConfig:
         SIMULATION_DURATION = 1200
-        TIMEOUT_TIME = 2
 
     class CloudConfig:
         DEFAULT_X = 2200
@@ -39,18 +38,15 @@
         ALGORITHM_ONLY_CLOUD = "Only Cloud"
         ALGORITHM_ONLY_FOG = "Only Fog"
         ALGORITHM_DEEP_RL = "DeepRL"
-        ALGORITHM_HEURISTIC2 = "Heuristic2"
 
-        DEFAULT_ALGORITHM = ALGORITHM_DEEP_RL
+        DEFAULT_ALGORITHM = ALGORITHM_HEURISTIC
 
-    class NoiseMethod:
-        PROPOSED_METHOD = "Proposed Method"
-        PROPOSED_METHOD2 = "Proposed Method2"
+    class FinalDeciderMethod:
         FIRST_CHOICE = "First Choice"
         RANDOM_CHOICE = "Random Choice"
         MIN_DISTANCE = "Min Distance"
 
-        DEFAULT_METHOD = PROPOSED_METHOD
+        DEFAULT_METHOD = FIRST_CHOICE
 
     class RandomZoneManagerConfig:
         OFFLOAD_CHANCE: float = 0.5
Index: task_and_user_generator.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import csv\r\nimport os\r\nimport random\r\nimport xml.etree.ElementTree as Et\r\nfrom collections import defaultdict\r\nfrom dataclasses import dataclass\r\nfrom xml.dom import minidom\r\n\r\nimport matplotlib.pyplot as plt\r\n\r\n\r\nclass Config:\r\n    CHUNK_SIZE = 1200  # Chunk size in seconds\r\n\r\n    class TaskConfig:\r\n        MIN_EXEC_TIME: float = 12.5  # Slightly increased execution times\r\n        MAX_EXEC_TIME: float = 25.0  # Tasks take longer to complete\r\n        MIN_POWER_CONSUMPTION: float = 1.0  # Higher power consumption than before\r\n        MAX_POWER_CONSUMPTION: float = 3.5\r\n        DEADLINE_MIN_FREE_TIME: float = 3.0  # Less deadline flexibility # note : next time make it a little bit more\r\n        DEADLINE_MAX_FREE_TIME: float = 15.0\r\n\r\n    class VehicleConfig:\r\n        TASK_GENERATION_RATE: float = 0.35  # More frequent task generation\r\n        FUCKED_UP_TASK_GENERATION_RATE: float = 0.55\r\n        TRAFFIC_MIN_SPEED_THRESHOLD: float = 10  # Lowered speed, causing occasional congestion\r\n        LANE_TRAFFIC_THRESHOLD: int = 15  # More vehicles per lane (moderate traffic)\r\n        MAX_COMPUTATION_POWER: float = 7.0  # note : change it in feature change !\r\n        MIN_COMPUTATION_POWER: float = 3.5\r\n        COMPUTATION_POWER_ROUND_DIGIT: int = 2\r\n        LOW_TRANSMISSION_POWER = 20  # todo : it's homogeneous right now and it's good to make it heterogeneous\r\n        # MEDIUM_TRANSMISSION_POWER = 10\r\n        HIGH_TRANSMISSION_POWER = 5\r\n        # TRANSMISSION_LIST = [LOW_TRANSMISSION_POWER, MEDIUM_TRANSMISSION_POWER, HIGH_TRANSMISSION_POWER]\r\n\r\n    class MobileFogConfig:\r\n        MAX_COMPUTATION_POWER: float = 12.0  # Slightly reduced power in fog nodes\r\n        MIN_COMPUTATION_POWER: float = 7.0\r\n        COMPUTATION_POWER_ROUND_DIGIT: int = 2\r\n\r\n\r\n@dataclass\r\nclass Vehicle:\r\n    \"\"\"Represents a mobile fog node in the network with a unique identifier and spatial coordinates.\"\"\"\r\n\r\n    id: str\r\n    x: float\r\n    y: float\r\n    angle: float\r\n    speed: float\r\n    power: float\r\n    type: str\r\n    lane: str\r\n\r\n\r\n@dataclass\r\nclass Task:\r\n    id: str\r\n    deadline: float\r\n    exec_time: float  # The amount of time that this task required to execute.\r\n    power: float  # The amount of power unit that this tasks consumes while executing.\r\n    creator: str  # Thd id of the node who created the task.\r\n\r\n\r\nclass Generator:\r\n    def __init__(self):\r\n        self.current_chunk = 0\r\n        self.current_vehicles = []\r\n        self.current_tasks = []\r\n        self.tasks_count_per_step = defaultdict(int)\r\n        self.average_speed_per_step = defaultdict(float)\r\n        self.total_task_power_per_step = defaultdict(float)\r\n\r\n        # Create output directories\r\n        os.makedirs(\"./data/vehicles\", exist_ok=True)\r\n        os.makedirs(\"./data/tasks\", exist_ok=True)\r\n\r\n    @staticmethod\r\n    def get_chunk_number(step: int) -> int:\r\n        return step // Config.CHUNK_SIZE\r\n\r\n    def save_current_chunk(self, step: int):\r\n        chunk_num = self.get_chunk_number(step)\r\n        if chunk_num > self.current_chunk and (self.current_vehicles or self.current_tasks):\r\n            self._save_vehicles_chunk()\r\n            self._save_tasks_chunk()\r\n            self.current_vehicles = []\r\n            self.current_tasks = []\r\n            self.current_chunk = chunk_num\r\n\r\n    def _save_vehicles_chunk(self):\r\n        root = Et.Element('fcd-export')\r\n        root.set(\"version\", \"1.0\")\r\n\r\n        for time_data in self.current_vehicles:\r\n            time_elem = Et.SubElement(root, 'timestep')\r\n            time_elem.set('time', f\"{time_data['step']}\")\r\n            for vehicle in time_data['vehicles']:\r\n                v_elem = Et.SubElement(time_elem, 'vehicle')\r\n                v_elem.set('id', vehicle.id)\r\n                v_elem.set('x', f\"{vehicle.x:.2f}\")\r\n                v_elem.set('y', f\"{vehicle.y:.2f}\")\r\n                v_elem.set('angle', f\"{vehicle.angle:.2f}\")\r\n                v_elem.set('speed', f\"{vehicle.speed:.2f}\")\r\n                v_elem.set('lane', vehicle.lane)\r\n                v_elem.set('type', vehicle.type)\r\n                v_elem.set('power', f\"{vehicle.power:.2f}\")\r\n\r\n        xml_str = minidom.parseString(Et.tostring(root)).toprettyxml(indent=\"    \")\r\n        with open(f\"./data/vehicles/chunk_{self.current_chunk}.xml\", 'w', encoding='utf-8') as f:\r\n            f.write(xml_str)\r\n\r\n    def _save_tasks_chunk(self):\r\n        root = Et.Element('fcd-export')\r\n        root.set(\"version\", \"1.0\")\r\n\r\n        for time_data in self.current_tasks:\r\n            time_elem = Et.SubElement(root, 'timestep')\r\n            time_elem.set('time', f\"{time_data['step']}\")\r\n            for task in time_data['tasks']:\r\n                t_elem = Et.SubElement(time_elem, 'task')\r\n                t_elem.set('id', task.id)\r\n                t_elem.set('deadline', f\"{task.deadline:.2f}\")\r\n                t_elem.set('exec_time', f\"{task.exec_time:.2f}\")\r\n                t_elem.set('power', f\"{task.power:.2f}\")\r\n                t_elem.set('creator', task.creator)\r\n\r\n        xml_str = minidom.parseString(Et.tostring(root)).toprettyxml(indent=\"    \")\r\n        with open(f\"./data/tasks/chunk_{self.current_chunk}.xml\", 'w', encoding='utf-8') as f:\r\n            f.write(xml_str)\r\n\r\n    def calculate_metrics(self, step: float, vehicles: list[Vehicle], tasks: list[Task]):\r\n        \"\"\"Calculate metrics for the current timestep.\"\"\"\r\n        # Count tasks for this step\r\n        self.tasks_count_per_step[step] = len(tasks)\r\n\r\n        # Calculate average speed of user nodes (PKW_special type)\r\n        if vehicles:\r\n            avg_speed = sum(v.speed for v in vehicles) / len(vehicles)\r\n            self.average_speed_per_step[step] = round(avg_speed, 2)\r\n        else:\r\n            self.average_speed_per_step[step] = 0.0\r\n\r\n        # Calculate total power of tasks for this step\r\n        self.total_task_power_per_step[step] = round(sum(task.power for task in tasks), 2)\r\n\r\n    @staticmethod\r\n    def generate_one_step_task(step, vehicle, lane_counter):\r\n        \"\"\"Generate tasks for each mobile fog node.\"\"\"\r\n        exec_time = round(\r\n            random.uniform(\r\n                Config.TaskConfig.MIN_EXEC_TIME,\r\n                Config.TaskConfig.MAX_EXEC_TIME,\r\n            ),\r\n            2\r\n        )\r\n        deadline_free = round(\r\n            random.uniform(\r\n                Config.TaskConfig.DEADLINE_MIN_FREE_TIME,\r\n                Config.TaskConfig.DEADLINE_MAX_FREE_TIME,\r\n            ),\r\n            2\r\n        )\r\n        deadline = round(exec_time + deadline_free) + step\r\n        power = round(\r\n            random.uniform(\r\n                Config.TaskConfig.MIN_POWER_CONSUMPTION,\r\n                Config.TaskConfig.MAX_POWER_CONSUMPTION\r\n            ),\r\n            2\r\n        )\r\n        chance = random.random()\r\n        threshold = Config.VehicleConfig.TASK_GENERATION_RATE\r\n        if (\r\n                lane_counter > Config.VehicleConfig.LANE_TRAFFIC_THRESHOLD or\r\n                vehicle.speed < Config.VehicleConfig.TRAFFIC_MIN_SPEED_THRESHOLD\r\n        ):\r\n            threshold = Config.VehicleConfig.FUCKED_UP_TASK_GENERATION_RATE\r\n        if chance > threshold:\r\n            return None\r\n        return Task(\r\n            id=f\"{vehicle.id}_{step}\",\r\n            deadline=deadline,\r\n            exec_time=exec_time,\r\n            power=power,\r\n            creator=vehicle.id\r\n        )\r\n\r\n    def generate_one_step(self, step, time_data, seen_ids_power):\r\n        \"\"\"Generate vehicles for each mobile fog node.\"\"\"\r\n        current_vehicles = []\r\n        current_tasks = []\r\n        lane_counter = defaultdict(int)\r\n\r\n        for vehicle in time_data.findall('vehicle'):\r\n            v_id = vehicle.get('id')\r\n            data = dict(\r\n                id=v_id,\r\n                x=float(vehicle.get('x')),\r\n                y=float(vehicle.get('y')),\r\n                angle=90 - float(vehicle.get('angle')),\r\n                speed=float(vehicle.get('speed')),\r\n                lane=vehicle.get('lane'),\r\n                type=vehicle.get('type')\r\n            )\r\n\r\n            if v_id in seen_ids_power:\r\n                power = seen_ids_power[v_id]\r\n            elif vehicle.get('type') == \"LKW_special\":\r\n                power = round(\r\n                    random.uniform(\r\n                        Config.MobileFogConfig.MIN_COMPUTATION_POWER,\r\n                        Config.MobileFogConfig.MAX_COMPUTATION_POWER\r\n                    ),\r\n                    Config.MobileFogConfig.COMPUTATION_POWER_ROUND_DIGIT\r\n                )\r\n            elif vehicle.get('type') == \"PKW_special\":\r\n                power = round(\r\n                    random.uniform(\r\n                        Config.VehicleConfig.MIN_COMPUTATION_POWER,\r\n                        Config.VehicleConfig.MAX_COMPUTATION_POWER\r\n                    ),\r\n                    Config.MobileFogConfig.COMPUTATION_POWER_ROUND_DIGIT\r\n                )\r\n            else:\r\n                continue\r\n\r\n            seen_ids_power[v_id] = power\r\n            data[\"power\"] = power\r\n            vehicle_obj = Vehicle(**data)\r\n            current_vehicles.append(vehicle_obj)\r\n            lane_counter[vehicle_obj.lane] += 1\r\n\r\n            if task := self.generate_one_step_task(step, vehicle_obj, lane_counter[vehicle_obj.lane]):\r\n                current_tasks.append(task)\r\n\r\n        # Calculate metrics before saving the chunk\r\n        self.calculate_metrics(step, current_vehicles, current_tasks)\r\n\r\n        # Add current timestep data to the chunk\r\n        self.current_vehicles.append({\"step\": step, \"vehicles\": current_vehicles})\r\n        self.current_tasks.append({\"step\": step, \"tasks\": current_tasks})\r\n\r\n        # Check if we need to save the current chunk\r\n        self.save_current_chunk(step)\r\n\r\n        return seen_ids_power\r\n\r\n    def generate_data(self, path: str):\r\n        \"\"\"Parse the time data from the given content.\"\"\"\r\n        with open(path, 'rb') as f:\r\n            root = Et.parse(f).getroot()\r\n        seen_ids_power = {}\r\n        for time in root.findall('.//timestep'):\r\n            step = round(float(time.get('time')))\r\n            seen_ids_power = self.generate_one_step(step, time, seen_ids_power)\r\n\r\n        # Save the last chunk if there's any data left\r\n        if self.current_vehicles or self.current_tasks:\r\n            self._save_vehicles_chunk()\r\n            self._save_tasks_chunk()\r\n\r\n    def save_metrics_to_csv(self, metrics_file: str):\r\n        \"\"\"Save the collected metrics to a CSV file.\"\"\"\r\n        all_steps = sorted(set(self.tasks_count_per_step.keys()) |\r\n                           set(self.average_speed_per_step.keys()) |\r\n                           set(self.total_task_power_per_step.keys()))\r\n\r\n        with open(metrics_file, 'w', newline='') as f:\r\n            writer = csv.writer(f)\r\n            writer.writerow(['timestep', 'task_count', 'average_speed', 'total_task_power'])\r\n            for step in all_steps:\r\n                writer.writerow([\r\n                    f\"{step:.2f}\",\r\n                    self.tasks_count_per_step[step],\r\n                    self.average_speed_per_step[step],\r\n                    self.total_task_power_per_step[step]\r\n                ])\r\n\r\n    def plot_metrics(self, output_file: str):\r\n        \"\"\"Create a visualization of the metrics.\"\"\"\r\n        steps = sorted(set(self.tasks_count_per_step.keys()) |\r\n                       set(self.average_speed_per_step.keys()) |\r\n                       set(self.total_task_power_per_step.keys()))\r\n        task_counts = [self.tasks_count_per_step[step] for step in steps]\r\n        avg_speeds = [self.average_speed_per_step[step] for step in steps]\r\n        total_powers = [self.total_task_power_per_step[step] for step in steps]\r\n\r\n        fig, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=(12, 12))\r\n\r\n        ax1.plot(steps, task_counts, 'b-', label='Tasks per Step')\r\n        ax1.set_xlabel('Time Step')\r\n        ax1.set_ylabel('Number of Tasks')\r\n        ax1.set_title('Tasks Generated per Time Step')\r\n        ax1.grid(True)\r\n        ax1.legend()\r\n\r\n        ax2.plot(steps, avg_speeds, 'r-', label='Average Speed')\r\n        ax2.set_xlabel('Time Step')\r\n        ax2.set_ylabel('Speed')\r\n        ax2.set_title('Average Speed of User Nodes per Time Step')\r\n        ax2.grid(True)\r\n        ax2.legend()\r\n\r\n        ax3.plot(steps, total_powers, 'g-', label='Total Task Power')\r\n        ax3.set_xlabel('Time Step')\r\n        ax3.set_ylabel('Power Units')\r\n        ax3.set_title('Total Power of Tasks per Time Step')\r\n        ax3.grid(True)\r\n        ax3.legend()\r\n\r\n        plt.tight_layout()\r\n        plt.savefig(output_file)\r\n        plt.close()\r\n\r\n\r\ndef main(path: str):\r\n    \"\"\"Main function to run the task generator.\"\"\"\r\n    generator = Generator()\r\n    generator.generate_data(path)\r\n    generator.save_metrics_to_csv(\"./data/metrics.csv\")\r\n    generator.plot_metrics(\"./data/metrics_visualization.png\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    main(\"./simulation.out.xml\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/task_and_user_generator.py b/task_and_user_generator.py
--- a/task_and_user_generator.py	
+++ b/task_and_user_generator.py	
@@ -241,7 +241,6 @@
         self.current_vehicles.append({"step": step, "vehicles": current_vehicles})
         self.current_tasks.append({"step": step, "tasks": current_tasks})
 
-        # Check if we need to save the current chunk
         self.save_current_chunk(step)
 
         return seen_ids_power
Index: controllers/zone_managers/deepRL/deep_rl_env.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import csv\r\nimport math\r\n\r\nimport numpy as np\r\nimport gym\r\nfrom gym import spaces\r\nfrom config import Config\r\nfrom controllers.metric import MetricsController\r\nfrom models.node.base import findExecTimeInEachKindOfNode\r\nfrom models.node.cloud import CloudNode\r\nfrom models.node.fog import FixedFogNode, MobileFogNode\r\nfrom models.node.user import UserNode\r\nfrom models.task import Task\r\n\r\n\r\ndef red_bg(text):\r\n    return f\"\\033[41m{text}\\033[0m\"\r\n\r\n\r\ndef get_vehicle_position(csv_file, target_id):\r\n    with open(csv_file, mode='r', newline='') as file:\r\n        reader = csv.DictReader(file)\r\n        for row in reader:\r\n            if row['vehicle_id'] == target_id:\r\n                x = float(row['x'])\r\n                y = float(row['y'])\r\n                return x, y\r\n    return None, None\r\n\r\n\r\ndef checkMigration(executor, task, finishTime):\r\n    finishTime = math.floor(finishTime)\r\n    if finishTime > 1200:\r\n        return False\r\n    fileName = f\"E:\\pythonProject\\VANET\\SumoDividedByTime\\Outputs2\\dataInTime{int(finishTime)}.csv\"\r\n    creatorX, creatorY = get_vehicle_position(fileName, task.creator_id)\r\n    if (creatorX is None) or (creatorY is None):\r\n        return True\r\n    if executor.radius > np.sqrt((creatorX - executor.x) ** 2 + (creatorY - executor.y) ** 2):\r\n        return False\r\n    return True\r\n\r\n\r\ndef isDeadlineMissHappening(task, executor):\r\n    task.real_exec_time_base = findExecTimeInEachKindOfNode(task, executor)\r\n\r\n    distance = task.get_creator_and_executor_distance(executor)\r\n\r\n    real_exec_time = task.real_exec_time_base + \\\r\n                     distance * 2 * Config.TaskConfig.PACKET_COST_PER_METER + \\\r\n                     distance * Config.TaskConfig.TASK_COST_PER_METER\r\n    # print(red_bg(f\"---------------------------------------{task}\"))\r\n    if (task.release_time + real_exec_time) > task.deadline:\r\n        print(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@\")\r\n    # print(red_bg(f\"---------------------------------------{task.id} : {task.deadline}, {task.release_time}, {real_exec_time}\"))\r\n    if executor == task.creator:\r\n        return ((task.release_time + real_exec_time) > task.deadline), (\r\n                    task.deadline - (task.release_time + real_exec_time))\r\n    elif isinstance(executor, (FixedFogNode, MobileFogNode)):\r\n        if checkMigration(executor, task, (task.release_time + real_exec_time)):\r\n            real_exec_time += Config.TaskConfig.MIGRATION_OVERHEAD * distance\r\n        return ((task.release_time + real_exec_time) > task.deadline), (\r\n                    task.deadline - (task.release_time + real_exec_time))\r\n    else:\r\n        real_exec_time += Config.TaskConfig.CLOUD_PROCESSING_OVERHEAD\r\n        return ((task.release_time + real_exec_time) > task.deadline), (\r\n                    task.deadline - (task.release_time + real_exec_time))\r\n\r\n\r\nclass DeepRLEnvironment(gym.Env):\r\n    \"\"\"\r\n    Custom environment for RL-based task offloading.\r\n    \"\"\"\r\n\r\n    def __init__(self, simulator):\r\n        # print(f\"test2:{simulator}\")\r\n        super(DeepRLEnvironment, self).__init__()\r\n        # print(f\"test3:{simulator}\")\r\n\r\n        self.simulator = simulator  # Reference to the existing simulation\r\n        self.metrics = simulator.metrics  # Track performance\r\n\r\n        # Define action space: (Where to offload the task?)\r\n        self.action_space = spaces.Discrete(3)  # 0: Local, 1: Fog, 2: Cloud\r\n\r\n        # Define state space: (What information do we use to make decisions?)\r\n        self.observation_space = spaces.Box(\r\n            low=0, high=1, shape=(6,), dtype=np.float32\r\n        )\r\n\r\n    def reset(self):\r\n        \"\"\"Reset the environment to start a new episode.\"\"\"\r\n        # print(f\"test4:{self.simulator}\")\r\n        self.simulator.init_simulation()\r\n        return self._get_state()\r\n\r\n    def step(self, action):\r\n        \"\"\"Execute an action and return the next state, reward, and done flag.\"\"\"\r\n        task = self.simulator.get_next_task()  # Get the next task to process\r\n\r\n        if task is None:\r\n            # print(red_bg(\"++++++++++++++++++++++++++++\"))\r\n            self.simulator.update_graph()\r\n            done = self.simulator.clock.get_current_time() >= \\\r\n                   Config.SimulatorConfig.SIMULATION_DURATION\r\n            return self._get_state(), 0, done, {}  # No task left, episode ends\r\n\r\n        reward = self._execute_action(task, action)  # Execute offloading\r\n        print(red_bg(f\"reward: {reward}\"))\r\n        next_state = self._get_state()\r\n        done = self.simulator.clock.get_current_time() >= Config.SimulatorConfig.SIMULATION_DURATION\r\n\r\n        return next_state, reward, done, {}\r\n\r\n    def _execute_action(self, task, action):\r\n        \"\"\"Perform the task offloading based on the action and return the reward.\"\"\"\r\n        if action == 0:\r\n            candidate_executor = task.creator  # Local execution\r\n        elif action == 1:\r\n            candidate_executor = self._get_best_fog_node(task)  # Offload to fog\r\n        else:\r\n            candidate_executor = self.simulator.cloud_node  # Offload to cloud\r\n\r\n        if candidate_executor and candidate_executor.can_offload_task(task):\r\n            # executor.assign_task(task, self.simulator.clock.get_current_time())  # note : i have removed this line to have multi agent algorithm\r\n            reward = self._compute_reward(task, candidate_executor)\r\n        else:\r\n            reward = -1  # Task couldn't be offloaded\r\n\r\n        return reward\r\n\r\n    def _get_best_fog_node(self, task):\r\n        \"\"\"Find a suitable fog node for task execution.\"\"\"\r\n        fog_nodes = list(self.simulator.mobile_fog_nodes.values()) + list(self.simulator.fixed_fog_nodes.values())\r\n        fog_nodes = [node for node in fog_nodes if node.can_offload_task(task)]\r\n        return max(fog_nodes, key=lambda n: n.remaining_power, default=None)\r\n\r\n    def _compute_reward(self, task, executor):\r\n        \"\"\"Compute the reward based on execution success, latency, and power efficiency.\"\"\"\r\n        if executor == task.creator:\r\n            return 1.0  # Local execution is preferred (low cost)\r\n        elif isinstance(executor, (FixedFogNode, MobileFogNode)):\r\n            return 2.0  # Fog execution is better than cloud\r\n        else:\r\n            return 0.5  # Cloud execution has higher cost\r\n\r\n    def _compute_reward2(self, task, executor):\r\n        \"\"\"Compute the reward based on latency.\"\"\"\r\n        # todo: should add execTime and check deadline\r\n\r\n        \"\"\"\r\n        Reward function based on task completion timing.\r\n        If task is late (lateness < 0): reward = -2 + lateness\r\n        If task is on-time or early: reward = lateness\r\n        \"\"\"\r\n        reward = 0\r\n        isDeadlineMiss, lateness = isDeadlineMissHappening(task, executor)\r\n        if isDeadlineMiss:\r\n            print(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\")\r\n            reward = -100 + lateness\r\n            # print(red_bg(f\"{reward}, {lateness}\"))\r\n        else:\r\n            reward = lateness\r\n            # print(red_bg(f\"{reward}, {lateness}\"))\r\n        if executor == task.creator:\r\n            return reward, 0\r\n        elif isinstance(executor, (FixedFogNode, MobileFogNode)):\r\n            return reward, 1\r\n        else:\r\n            return reward, 2\r\n\r\n    def _calculate_avg_fog_power(self, vehicle):\r\n        \"\"\"\r\n        Calculates the average remaining power of all fog nodes\r\n        within 300 meters of the given vehicle.\r\n        \"\"\"\r\n        fog_nodes = list(self.simulator.mobile_fog_nodes.values()) + list(self.simulator.fixed_fog_nodes.values())\r\n\r\n        # Filter fog nodes within 300 meters of the vehicle\r\n        nearby_fogs = []\r\n        for fog in fog_nodes:\r\n            distance = np.sqrt((fog.x - vehicle.x) ** 2 + (fog.y - vehicle.y) ** 2)\r\n            if distance <= 300:\r\n                nearby_fogs.append(fog)\r\n\r\n        if len(nearby_fogs) == 0:\r\n            return 0.0\r\n\r\n        avg_power = sum(node.remaining_power for node in nearby_fogs) / len(nearby_fogs)\r\n        return avg_power\r\n\r\n    def _get_state(self, task=None):\r\n        \"\"\"\r\n        Extract the state vector for the RL agent.\r\n        State format:\r\n        [remainingVehiclePower, taskPower, timeToExecute, avg_fog_available_power, vehicleSpeed, cloud_available_power]\r\n        \"\"\"\r\n        if task is not None:\r\n            remaining_power = task.creator.remaining_power if task.creator else 0.0\r\n            task_power = task.power\r\n            vehicle_speed = task.creator.speed if hasattr(task.creator, 'speed') else 0.0\r\n            time_to_execute = task.exec_time  # in normal mode\r\n            # note: maybe it's needed to add /2 for fog and cloud, but how?? (i think it's okay now and it's considered in reward)\r\n\r\n        else:\r\n            remaining_power = 0.0\r\n            task_power = 0.0\r\n            time_to_execute = 0.0\r\n            vehicle_speed = 0.0\r\n\r\n        # exec time ratio\r\n        maxExecTime = 25.0\r\n        execTimeRatio = time_to_execute / maxExecTime\r\n\r\n        # task power ratio\r\n        maxTaskPower = 3.5\r\n        taskPowerRatio = task_power / maxTaskPower\r\n\r\n        # vehicle speed ratio\r\n        maxSpeedOfaVehicle = 13.89\r\n        vehicle_speed_ratio = vehicle_speed / maxSpeedOfaVehicle\r\n\r\n        # vehicle remaining power ratio\r\n        maxVehiclePower = task.creator.power\r\n        VehiclePowerRatio = remaining_power / maxVehiclePower\r\n\r\n        # fog power ratio\r\n        avg_fog_power = self._calculate_avg_fog_power(task.creator)\r\n        max_fog_power = 19.79\r\n        avg_fog_remaining_power_ratio = avg_fog_power / max_fog_power\r\n\r\n        # cloud power ratio\r\n        cloud_remaining_power = self.simulator.cloud_node.remaining_power if self.simulator.cloud_node else 0.0\r\n        cloud_power = self.simulator.cloud_node.power if self.simulator.cloud_node else 1.0\r\n        cloud_power_ratio = cloud_remaining_power / cloud_power\r\n\r\n        return np.array([\r\n            VehiclePowerRatio,\r\n            taskPowerRatio,\r\n            execTimeRatio,\r\n            avg_fog_remaining_power_ratio,\r\n            vehicle_speed_ratio,\r\n            cloud_power_ratio\r\n        ], dtype=np.float32)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/zone_managers/deepRL/deep_rl_env.py b/controllers/zone_managers/deepRL/deep_rl_env.py
--- a/controllers/zone_managers/deepRL/deep_rl_env.py	
+++ b/controllers/zone_managers/deepRL/deep_rl_env.py	
@@ -49,10 +49,7 @@
     real_exec_time = task.real_exec_time_base + \
                      distance * 2 * Config.TaskConfig.PACKET_COST_PER_METER + \
                      distance * Config.TaskConfig.TASK_COST_PER_METER
-    # print(red_bg(f"---------------------------------------{task}"))
-    if (task.release_time + real_exec_time) > task.deadline:
-        print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@")
-    # print(red_bg(f"---------------------------------------{task.id} : {task.deadline}, {task.release_time}, {real_exec_time}"))
+
     if executor == task.creator:
         return ((task.release_time + real_exec_time) > task.deadline), (
                     task.deadline - (task.release_time + real_exec_time))
@@ -66,7 +63,6 @@
         return ((task.release_time + real_exec_time) > task.deadline), (
                     task.deadline - (task.release_time + real_exec_time))
 
-
 class DeepRLEnvironment(gym.Env):
     """
     Custom environment for RL-based task offloading.
@@ -155,13 +151,12 @@
         """
         reward = 0
         isDeadlineMiss, lateness = isDeadlineMissHappening(task, executor)
+
         if isDeadlineMiss:
-            print("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")
             reward = -100 + lateness
-            # print(red_bg(f"{reward}, {lateness}"))
         else:
             reward = lateness
-            # print(red_bg(f"{reward}, {lateness}"))
+
         if executor == task.creator:
             return reward, 0
         elif isinstance(executor, (FixedFogNode, MobileFogNode)):
Index: NoiseConfigs/NoUse/generated_partitions44.py
===================================================================
diff --git a/NoiseConfigs/NoUse/generated_partitions44.py b/NoiseConfigs/NoUse/generated_partitions44.py
deleted file mode 100644
--- a/NoiseConfigs/NoUse/generated_partitions44.py	
+++ /dev/null	
@@ -1,166 +0,0 @@
-
-from typing import Optional
-
-from NoiseConfigs.noiseConfig import NoiseConfig
-
-
-class Partitions:
-    startX: int
-    startY: int
-    endX: int
-    endY: int
-    rainStatus: Optional[NoiseConfig.RainNoiseConfig]
-    trafficStatus: Optional[NoiseConfig.TrafficNoiseConfig]
-    urbanStatus: Optional[NoiseConfig.UrbanNoiseConfig]
-
-    def __init__(self, startX, startY, endX, endY, rainStatus, trafficStatus, urbanStatus):
-        self.startX = startX
-        self.startY = startY
-        self.endX = endX
-        self.endY = endY
-        self.rainStatus = rainStatus
-        self.trafficStatus = trafficStatus
-        self.urbanStatus = urbanStatus
-
-class Partition11(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-
-    def __init__(self):
-        super().__init__(0, 0, 410, 322, Partition11.rainStatus, Partition11.trafficStatus, Partition11.urbanStatus)
-
-
-class Partition12(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-
-    def __init__(self):
-        super().__init__(410, 0, 820, 322, Partition12.rainStatus, Partition12.trafficStatus, Partition12.urbanStatus)
-
-
-class Partition13(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-
-    def __init__(self):
-        super().__init__(820, 0, 1230, 322, Partition13.rainStatus, Partition13.trafficStatus, Partition13.urbanStatus)
-
-
-class Partition14(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-
-    def __init__(self):
-        super().__init__(1230, 0, 1640, 322, Partition14.rainStatus, Partition14.trafficStatus, Partition14.urbanStatus)
-
-
-class Partition21(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-
-    def __init__(self):
-        super().__init__(0, 322, 410, 644, Partition21.rainStatus, Partition21.trafficStatus, Partition21.urbanStatus)
-
-
-class Partition22(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-
-    def __init__(self):
-        super().__init__(410, 322, 820, 644, Partition22.rainStatus, Partition22.trafficStatus, Partition22.urbanStatus)
-
-
-class Partition23(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-
-    def __init__(self):
-        super().__init__(820, 322, 1230, 644, Partition23.rainStatus, Partition23.trafficStatus, Partition23.urbanStatus)
-
-
-class Partition24(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-
-    def __init__(self):
-        super().__init__(1230, 322, 1640, 644, Partition24.rainStatus, Partition24.trafficStatus, Partition24.urbanStatus)
-
-
-class Partition31(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-
-    def __init__(self):
-        super().__init__(0, 644, 410, 966, Partition31.rainStatus, Partition31.trafficStatus, Partition31.urbanStatus)
-
-
-class Partition32(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-
-    def __init__(self):
-        super().__init__(410, 644, 820, 966, Partition32.rainStatus, Partition32.trafficStatus, Partition32.urbanStatus)
-
-
-class Partition33(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-
-    def __init__(self):
-        super().__init__(820, 644, 1230, 966, Partition33.rainStatus, Partition33.trafficStatus, Partition33.urbanStatus)
-
-
-class Partition34(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-
-    def __init__(self):
-        super().__init__(1230, 644, 1640, 966, Partition34.rainStatus, Partition34.trafficStatus, Partition34.urbanStatus)
-
-
-class Partition41(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-
-    def __init__(self):
-        super().__init__(0, 966, 410, 1288, Partition41.rainStatus, Partition41.trafficStatus, Partition41.urbanStatus)
-
-
-class Partition42(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-
-    def __init__(self):
-        super().__init__(410, 966, 820, 1288, Partition42.rainStatus, Partition42.trafficStatus, Partition42.urbanStatus)
-
-
-class Partition43(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-
-    def __init__(self):
-        super().__init__(820, 966, 1230, 1288, Partition43.rainStatus, Partition43.trafficStatus, Partition43.urbanStatus)
-
-
-class Partition44(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-
-    def __init__(self):
-        super().__init__(1230, 966, 1640, 1288, Partition44.rainStatus, Partition44.trafficStatus, Partition44.urbanStatus)
Index: NoiseConfigs/NoUse/generated_hex_partitionsWithFactory.py
===================================================================
diff --git a/NoiseConfigs/NoUse/generated_hex_partitionsWithFactory.py b/NoiseConfigs/NoUse/generated_hex_partitionsWithFactory.py
deleted file mode 100644
--- a/NoiseConfigs/NoUse/generated_hex_partitionsWithFactory.py	
+++ /dev/null	
@@ -1,3706 +0,0 @@
-
-#this file has been generated by HexPartitionGeneratorWithFactory.py
-
-from NoiseConfigs.noiseConfigGeneralAttribute import NoiseConfigGeneralAttribute
-from noiseConfig import NoiseConfig
-from typing import Optional, Dict
-from utilsFunctions import UtilsFunc
-import random
-
-
-class Partitions:
-    centerX: float
-    centerY: float
-    radius: float
-    rainStatus: Optional[NoiseConfig.RainNoiseConfig]
-    trafficStatus: Optional[NoiseConfig.TrafficNoiseConfig]
-    urbanStatus: Optional[NoiseConfig.UrbanNoiseConfig]
-    is_factory: bool
-
-    def __init__(self, centerX, centerY, radius, rainStatus, trafficStatus, urbanStatus, is_factory):
-        self.centerX = centerX
-        self.centerY = centerY
-        self.radius = radius
-        self.rainStatus = rainStatus
-        self.trafficStatus = trafficStatus
-        self.urbanStatus = urbanStatus
-        self.is_factory = is_factory
-
-    def change_rainStatus(self):
-        # todo: maybe need to change this to have a more reasonable environment
-        self.rainStatus = random.choice(NoiseConfigGeneralAttribute.Rain_options)
-
-    def update_traffic_status(self, traffic_statuses: Dict["Partitions", NoiseConfig.TrafficNoiseConfig]):
-        if self in traffic_statuses:
-            self.trafficStatus = traffic_statuses[self]
-
-class Partition1(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = True
-    center_x = 0.0
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition1.center_x, Partition1.center_y, 150, Partition1.rainStatus, Partition1.trafficStatus, Partition1.urbanStatus, Partition1.is_factory)
-
-
-class Partition2(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = True
-    center_x = 259.8076211353316
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition2.center_x, Partition2.center_y, 150, Partition2.rainStatus, Partition2.trafficStatus, Partition2.urbanStatus, Partition2.is_factory)
-
-
-class Partition3(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = True
-    center_x = 519.6152422706632
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition3.center_x, Partition3.center_y, 150, Partition3.rainStatus, Partition3.trafficStatus, Partition3.urbanStatus, Partition3.is_factory)
-
-
-class Partition4(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = True
-    center_x = 779.4228634059948
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition4.center_x, Partition4.center_y, 150, Partition4.rainStatus, Partition4.trafficStatus, Partition4.urbanStatus, Partition4.is_factory)
-
-
-class Partition5(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = True
-    center_x = 1039.2304845413264
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition5.center_x, Partition5.center_y, 150, Partition5.rainStatus, Partition5.trafficStatus, Partition5.urbanStatus, Partition5.is_factory)
-
-
-class Partition6(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = True
-    center_x = 1299.038105676658
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition6.center_x, Partition6.center_y, 150, Partition6.rainStatus, Partition6.trafficStatus, Partition6.urbanStatus, Partition6.is_factory)
-
-
-class Partition7(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = True
-    center_x = 1558.8457268119896
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition7.center_x, Partition7.center_y, 150, Partition7.rainStatus, Partition7.trafficStatus, Partition7.urbanStatus, Partition7.is_factory)
-
-
-class Partition8(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = True
-    center_x = 1818.6533479473212
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition8.center_x, Partition8.center_y, 150, Partition8.rainStatus, Partition8.trafficStatus, Partition8.urbanStatus, Partition8.is_factory)
-
-
-class Partition9(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = True
-    center_x = 2078.460969082653
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition9.center_x, Partition9.center_y, 150, Partition9.rainStatus, Partition9.trafficStatus, Partition9.urbanStatus, Partition9.is_factory)
-
-
-class Partition10(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = True
-    center_x = 2338.2685902179846
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition10.center_x, Partition10.center_y, 150, Partition10.rainStatus, Partition10.trafficStatus, Partition10.urbanStatus, Partition10.is_factory)
-
-
-class Partition11(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2598.076211353316
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition11.center_x, Partition11.center_y, 150, Partition11.rainStatus, Partition11.trafficStatus, Partition11.urbanStatus, Partition11.is_factory)
-
-
-class Partition12(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2857.8838324886474
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition12.center_x, Partition12.center_y, 150, Partition12.rainStatus, Partition12.trafficStatus, Partition12.urbanStatus, Partition12.is_factory)
-
-
-class Partition13(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3117.691453623979
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition13.center_x, Partition13.center_y, 150, Partition13.rainStatus, Partition13.trafficStatus, Partition13.urbanStatus, Partition13.is_factory)
-
-
-class Partition14(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3377.499074759311
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition14.center_x, Partition14.center_y, 150, Partition14.rainStatus, Partition14.trafficStatus, Partition14.urbanStatus, Partition14.is_factory)
-
-
-class Partition15(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3637.3066958946424
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition15.center_x, Partition15.center_y, 150, Partition15.rainStatus, Partition15.trafficStatus, Partition15.urbanStatus, Partition15.is_factory)
-
-
-class Partition16(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3897.114317029974
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition16.center_x, Partition16.center_y, 150, Partition16.rainStatus, Partition16.trafficStatus, Partition16.urbanStatus, Partition16.is_factory)
-
-
-class Partition17(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4156.921938165306
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition17.center_x, Partition17.center_y, 150, Partition17.rainStatus, Partition17.trafficStatus, Partition17.urbanStatus, Partition17.is_factory)
-
-
-class Partition18(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 4416.729559300637
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition18.center_x, Partition18.center_y, 150, Partition18.rainStatus, Partition18.trafficStatus, Partition18.urbanStatus, Partition18.is_factory)
-
-
-class Partition19(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 129.9038105676658
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition19.center_x, Partition19.center_y, 150, Partition19.rainStatus, Partition19.trafficStatus, Partition19.urbanStatus, Partition19.is_factory)
-
-
-class Partition20(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 389.7114317029974
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition20.center_x, Partition20.center_y, 150, Partition20.rainStatus, Partition20.trafficStatus, Partition20.urbanStatus, Partition20.is_factory)
-
-
-class Partition21(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 649.519052838329
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition21.center_x, Partition21.center_y, 150, Partition21.rainStatus, Partition21.trafficStatus, Partition21.urbanStatus, Partition21.is_factory)
-
-
-class Partition22(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 909.3266739736606
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition22.center_x, Partition22.center_y, 150, Partition22.rainStatus, Partition22.trafficStatus, Partition22.urbanStatus, Partition22.is_factory)
-
-
-class Partition23(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1169.1342951089923
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition23.center_x, Partition23.center_y, 150, Partition23.rainStatus, Partition23.trafficStatus, Partition23.urbanStatus, Partition23.is_factory)
-
-
-class Partition24(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1428.9419162443237
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition24.center_x, Partition24.center_y, 150, Partition24.rainStatus, Partition24.trafficStatus, Partition24.urbanStatus, Partition24.is_factory)
-
-
-class Partition25(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1688.7495373796555
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition25.center_x, Partition25.center_y, 150, Partition25.rainStatus, Partition25.trafficStatus, Partition25.urbanStatus, Partition25.is_factory)
-
-
-class Partition26(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1948.557158514987
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition26.center_x, Partition26.center_y, 150, Partition26.rainStatus, Partition26.trafficStatus, Partition26.urbanStatus, Partition26.is_factory)
-
-
-class Partition27(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2208.3647796503187
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition27.center_x, Partition27.center_y, 150, Partition27.rainStatus, Partition27.trafficStatus, Partition27.urbanStatus, Partition27.is_factory)
-
-
-class Partition28(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2468.1724007856506
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition28.center_x, Partition28.center_y, 150, Partition28.rainStatus, Partition28.trafficStatus, Partition28.urbanStatus, Partition28.is_factory)
-
-
-class Partition29(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2727.980021920982
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition29.center_x, Partition29.center_y, 150, Partition29.rainStatus, Partition29.trafficStatus, Partition29.urbanStatus, Partition29.is_factory)
-
-
-class Partition30(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2987.7876430563133
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition30.center_x, Partition30.center_y, 150, Partition30.rainStatus, Partition30.trafficStatus, Partition30.urbanStatus, Partition30.is_factory)
-
-
-class Partition31(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3247.595264191645
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition31.center_x, Partition31.center_y, 150, Partition31.rainStatus, Partition31.trafficStatus, Partition31.urbanStatus, Partition31.is_factory)
-
-
-class Partition32(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3507.402885326977
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition32.center_x, Partition32.center_y, 150, Partition32.rainStatus, Partition32.trafficStatus, Partition32.urbanStatus, Partition32.is_factory)
-
-
-class Partition33(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3767.2105064623083
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition33.center_x, Partition33.center_y, 150, Partition33.rainStatus, Partition33.trafficStatus, Partition33.urbanStatus, Partition33.is_factory)
-
-
-class Partition34(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4027.0181275976397
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition34.center_x, Partition34.center_y, 150, Partition34.rainStatus, Partition34.trafficStatus, Partition34.urbanStatus, Partition34.is_factory)
-
-
-class Partition35(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4286.825748732971
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition35.center_x, Partition35.center_y, 150, Partition35.rainStatus, Partition35.trafficStatus, Partition35.urbanStatus, Partition35.is_factory)
-
-
-class Partition36(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4546.633369868303
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition36.center_x, Partition36.center_y, 150, Partition36.rainStatus, Partition36.trafficStatus, Partition36.urbanStatus, Partition36.is_factory)
-
-
-class Partition37(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 0.0
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition37.center_x, Partition37.center_y, 150, Partition37.rainStatus, Partition37.trafficStatus, Partition37.urbanStatus, Partition37.is_factory)
-
-
-class Partition38(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 259.8076211353316
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition38.center_x, Partition38.center_y, 150, Partition38.rainStatus, Partition38.trafficStatus, Partition38.urbanStatus, Partition38.is_factory)
-
-
-class Partition39(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 519.6152422706632
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition39.center_x, Partition39.center_y, 150, Partition39.rainStatus, Partition39.trafficStatus, Partition39.urbanStatus, Partition39.is_factory)
-
-
-class Partition40(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 779.4228634059948
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition40.center_x, Partition40.center_y, 150, Partition40.rainStatus, Partition40.trafficStatus, Partition40.urbanStatus, Partition40.is_factory)
-
-
-class Partition41(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1039.2304845413264
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition41.center_x, Partition41.center_y, 150, Partition41.rainStatus, Partition41.trafficStatus, Partition41.urbanStatus, Partition41.is_factory)
-
-
-class Partition42(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1299.038105676658
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition42.center_x, Partition42.center_y, 150, Partition42.rainStatus, Partition42.trafficStatus, Partition42.urbanStatus, Partition42.is_factory)
-
-
-class Partition43(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1558.8457268119896
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition43.center_x, Partition43.center_y, 150, Partition43.rainStatus, Partition43.trafficStatus, Partition43.urbanStatus, Partition43.is_factory)
-
-
-class Partition44(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1818.6533479473212
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition44.center_x, Partition44.center_y, 150, Partition44.rainStatus, Partition44.trafficStatus, Partition44.urbanStatus, Partition44.is_factory)
-
-
-class Partition45(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2078.460969082653
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition45.center_x, Partition45.center_y, 150, Partition45.rainStatus, Partition45.trafficStatus, Partition45.urbanStatus, Partition45.is_factory)
-
-
-class Partition46(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2338.2685902179846
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition46.center_x, Partition46.center_y, 150, Partition46.rainStatus, Partition46.trafficStatus, Partition46.urbanStatus, Partition46.is_factory)
-
-
-class Partition47(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2598.076211353316
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition47.center_x, Partition47.center_y, 150, Partition47.rainStatus, Partition47.trafficStatus, Partition47.urbanStatus, Partition47.is_factory)
-
-
-class Partition48(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2857.8838324886474
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition48.center_x, Partition48.center_y, 150, Partition48.rainStatus, Partition48.trafficStatus, Partition48.urbanStatus, Partition48.is_factory)
-
-
-class Partition49(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3117.691453623979
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition49.center_x, Partition49.center_y, 150, Partition49.rainStatus, Partition49.trafficStatus, Partition49.urbanStatus, Partition49.is_factory)
-
-
-class Partition50(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3377.499074759311
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition50.center_x, Partition50.center_y, 150, Partition50.rainStatus, Partition50.trafficStatus, Partition50.urbanStatus, Partition50.is_factory)
-
-
-class Partition51(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3637.3066958946424
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition51.center_x, Partition51.center_y, 150, Partition51.rainStatus, Partition51.trafficStatus, Partition51.urbanStatus, Partition51.is_factory)
-
-
-class Partition52(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3897.114317029974
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition52.center_x, Partition52.center_y, 150, Partition52.rainStatus, Partition52.trafficStatus, Partition52.urbanStatus, Partition52.is_factory)
-
-
-class Partition53(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 4156.921938165306
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition53.center_x, Partition53.center_y, 150, Partition53.rainStatus, Partition53.trafficStatus, Partition53.urbanStatus, Partition53.is_factory)
-
-
-class Partition54(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4416.729559300637
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition54.center_x, Partition54.center_y, 150, Partition54.rainStatus, Partition54.trafficStatus, Partition54.urbanStatus, Partition54.is_factory)
-
-
-class Partition55(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 129.9038105676658
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition55.center_x, Partition55.center_y, 150, Partition55.rainStatus, Partition55.trafficStatus, Partition55.urbanStatus, Partition55.is_factory)
-
-
-class Partition56(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 389.7114317029974
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition56.center_x, Partition56.center_y, 150, Partition56.rainStatus, Partition56.trafficStatus, Partition56.urbanStatus, Partition56.is_factory)
-
-
-class Partition57(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 649.519052838329
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition57.center_x, Partition57.center_y, 150, Partition57.rainStatus, Partition57.trafficStatus, Partition57.urbanStatus, Partition57.is_factory)
-
-
-class Partition58(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 909.3266739736606
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition58.center_x, Partition58.center_y, 150, Partition58.rainStatus, Partition58.trafficStatus, Partition58.urbanStatus, Partition58.is_factory)
-
-
-class Partition59(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1169.1342951089923
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition59.center_x, Partition59.center_y, 150, Partition59.rainStatus, Partition59.trafficStatus, Partition59.urbanStatus, Partition59.is_factory)
-
-
-class Partition60(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1428.9419162443237
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition60.center_x, Partition60.center_y, 150, Partition60.rainStatus, Partition60.trafficStatus, Partition60.urbanStatus, Partition60.is_factory)
-
-
-class Partition61(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1688.7495373796555
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition61.center_x, Partition61.center_y, 150, Partition61.rainStatus, Partition61.trafficStatus, Partition61.urbanStatus, Partition61.is_factory)
-
-
-class Partition62(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1948.557158514987
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition62.center_x, Partition62.center_y, 150, Partition62.rainStatus, Partition62.trafficStatus, Partition62.urbanStatus, Partition62.is_factory)
-
-
-class Partition63(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2208.3647796503187
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition63.center_x, Partition63.center_y, 150, Partition63.rainStatus, Partition63.trafficStatus, Partition63.urbanStatus, Partition63.is_factory)
-
-
-class Partition64(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2468.1724007856506
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition64.center_x, Partition64.center_y, 150, Partition64.rainStatus, Partition64.trafficStatus, Partition64.urbanStatus, Partition64.is_factory)
-
-
-class Partition65(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2727.980021920982
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition65.center_x, Partition65.center_y, 150, Partition65.rainStatus, Partition65.trafficStatus, Partition65.urbanStatus, Partition65.is_factory)
-
-
-class Partition66(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2987.7876430563133
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition66.center_x, Partition66.center_y, 150, Partition66.rainStatus, Partition66.trafficStatus, Partition66.urbanStatus, Partition66.is_factory)
-
-
-class Partition67(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3247.595264191645
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition67.center_x, Partition67.center_y, 150, Partition67.rainStatus, Partition67.trafficStatus, Partition67.urbanStatus, Partition67.is_factory)
-
-
-class Partition68(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3507.402885326977
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition68.center_x, Partition68.center_y, 150, Partition68.rainStatus, Partition68.trafficStatus, Partition68.urbanStatus, Partition68.is_factory)
-
-
-class Partition69(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3767.2105064623083
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition69.center_x, Partition69.center_y, 150, Partition69.rainStatus, Partition69.trafficStatus, Partition69.urbanStatus, Partition69.is_factory)
-
-
-class Partition70(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 4027.0181275976397
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition70.center_x, Partition70.center_y, 150, Partition70.rainStatus, Partition70.trafficStatus, Partition70.urbanStatus, Partition70.is_factory)
-
-
-class Partition71(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4286.825748732971
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition71.center_x, Partition71.center_y, 150, Partition71.rainStatus, Partition71.trafficStatus, Partition71.urbanStatus, Partition71.is_factory)
-
-
-class Partition72(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4546.633369868303
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition72.center_x, Partition72.center_y, 150, Partition72.rainStatus, Partition72.trafficStatus, Partition72.urbanStatus, Partition72.is_factory)
-
-
-class Partition73(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 0.0
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition73.center_x, Partition73.center_y, 150, Partition73.rainStatus, Partition73.trafficStatus, Partition73.urbanStatus, Partition73.is_factory)
-
-
-class Partition74(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 259.8076211353316
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition74.center_x, Partition74.center_y, 150, Partition74.rainStatus, Partition74.trafficStatus, Partition74.urbanStatus, Partition74.is_factory)
-
-
-class Partition75(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 519.6152422706632
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition75.center_x, Partition75.center_y, 150, Partition75.rainStatus, Partition75.trafficStatus, Partition75.urbanStatus, Partition75.is_factory)
-
-
-class Partition76(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 779.4228634059948
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition76.center_x, Partition76.center_y, 150, Partition76.rainStatus, Partition76.trafficStatus, Partition76.urbanStatus, Partition76.is_factory)
-
-
-class Partition77(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1039.2304845413264
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition77.center_x, Partition77.center_y, 150, Partition77.rainStatus, Partition77.trafficStatus, Partition77.urbanStatus, Partition77.is_factory)
-
-
-class Partition78(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1299.038105676658
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition78.center_x, Partition78.center_y, 150, Partition78.rainStatus, Partition78.trafficStatus, Partition78.urbanStatus, Partition78.is_factory)
-
-
-class Partition79(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1558.8457268119896
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition79.center_x, Partition79.center_y, 150, Partition79.rainStatus, Partition79.trafficStatus, Partition79.urbanStatus, Partition79.is_factory)
-
-
-class Partition80(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1818.6533479473212
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition80.center_x, Partition80.center_y, 150, Partition80.rainStatus, Partition80.trafficStatus, Partition80.urbanStatus, Partition80.is_factory)
-
-
-class Partition81(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2078.460969082653
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition81.center_x, Partition81.center_y, 150, Partition81.rainStatus, Partition81.trafficStatus, Partition81.urbanStatus, Partition81.is_factory)
-
-
-class Partition82(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2338.2685902179846
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition82.center_x, Partition82.center_y, 150, Partition82.rainStatus, Partition82.trafficStatus, Partition82.urbanStatus, Partition82.is_factory)
-
-
-class Partition83(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2598.076211353316
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition83.center_x, Partition83.center_y, 150, Partition83.rainStatus, Partition83.trafficStatus, Partition83.urbanStatus, Partition83.is_factory)
-
-
-class Partition84(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2857.8838324886474
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition84.center_x, Partition84.center_y, 150, Partition84.rainStatus, Partition84.trafficStatus, Partition84.urbanStatus, Partition84.is_factory)
-
-
-class Partition85(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3117.691453623979
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition85.center_x, Partition85.center_y, 150, Partition85.rainStatus, Partition85.trafficStatus, Partition85.urbanStatus, Partition85.is_factory)
-
-
-class Partition86(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3377.499074759311
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition86.center_x, Partition86.center_y, 150, Partition86.rainStatus, Partition86.trafficStatus, Partition86.urbanStatus, Partition86.is_factory)
-
-
-class Partition87(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3637.3066958946424
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition87.center_x, Partition87.center_y, 150, Partition87.rainStatus, Partition87.trafficStatus, Partition87.urbanStatus, Partition87.is_factory)
-
-
-class Partition88(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3897.114317029974
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition88.center_x, Partition88.center_y, 150, Partition88.rainStatus, Partition88.trafficStatus, Partition88.urbanStatus, Partition88.is_factory)
-
-
-class Partition89(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 4156.921938165306
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition89.center_x, Partition89.center_y, 150, Partition89.rainStatus, Partition89.trafficStatus, Partition89.urbanStatus, Partition89.is_factory)
-
-
-class Partition90(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 4416.729559300637
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition90.center_x, Partition90.center_y, 150, Partition90.rainStatus, Partition90.trafficStatus, Partition90.urbanStatus, Partition90.is_factory)
-
-
-class Partition91(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 129.9038105676658
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition91.center_x, Partition91.center_y, 150, Partition91.rainStatus, Partition91.trafficStatus, Partition91.urbanStatus, Partition91.is_factory)
-
-
-class Partition92(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 389.7114317029974
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition92.center_x, Partition92.center_y, 150, Partition92.rainStatus, Partition92.trafficStatus, Partition92.urbanStatus, Partition92.is_factory)
-
-
-class Partition93(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 649.519052838329
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition93.center_x, Partition93.center_y, 150, Partition93.rainStatus, Partition93.trafficStatus, Partition93.urbanStatus, Partition93.is_factory)
-
-
-class Partition94(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 909.3266739736606
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition94.center_x, Partition94.center_y, 150, Partition94.rainStatus, Partition94.trafficStatus, Partition94.urbanStatus, Partition94.is_factory)
-
-
-class Partition95(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1169.1342951089923
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition95.center_x, Partition95.center_y, 150, Partition95.rainStatus, Partition95.trafficStatus, Partition95.urbanStatus, Partition95.is_factory)
-
-
-class Partition96(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1428.9419162443237
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition96.center_x, Partition96.center_y, 150, Partition96.rainStatus, Partition96.trafficStatus, Partition96.urbanStatus, Partition96.is_factory)
-
-
-class Partition97(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1688.7495373796555
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition97.center_x, Partition97.center_y, 150, Partition97.rainStatus, Partition97.trafficStatus, Partition97.urbanStatus, Partition97.is_factory)
-
-
-class Partition98(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1948.557158514987
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition98.center_x, Partition98.center_y, 150, Partition98.rainStatus, Partition98.trafficStatus, Partition98.urbanStatus, Partition98.is_factory)
-
-
-class Partition99(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2208.3647796503187
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition99.center_x, Partition99.center_y, 150, Partition99.rainStatus, Partition99.trafficStatus, Partition99.urbanStatus, Partition99.is_factory)
-
-
-class Partition100(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2468.1724007856506
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition100.center_x, Partition100.center_y, 150, Partition100.rainStatus, Partition100.trafficStatus, Partition100.urbanStatus, Partition100.is_factory)
-
-
-class Partition101(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2727.980021920982
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition101.center_x, Partition101.center_y, 150, Partition101.rainStatus, Partition101.trafficStatus, Partition101.urbanStatus, Partition101.is_factory)
-
-
-class Partition102(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2987.7876430563133
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition102.center_x, Partition102.center_y, 150, Partition102.rainStatus, Partition102.trafficStatus, Partition102.urbanStatus, Partition102.is_factory)
-
-
-class Partition103(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3247.595264191645
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition103.center_x, Partition103.center_y, 150, Partition103.rainStatus, Partition103.trafficStatus, Partition103.urbanStatus, Partition103.is_factory)
-
-
-class Partition104(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3507.402885326977
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition104.center_x, Partition104.center_y, 150, Partition104.rainStatus, Partition104.trafficStatus, Partition104.urbanStatus, Partition104.is_factory)
-
-
-class Partition105(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3767.2105064623083
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition105.center_x, Partition105.center_y, 150, Partition105.rainStatus, Partition105.trafficStatus, Partition105.urbanStatus, Partition105.is_factory)
-
-
-class Partition106(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4027.0181275976397
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition106.center_x, Partition106.center_y, 150, Partition106.rainStatus, Partition106.trafficStatus, Partition106.urbanStatus, Partition106.is_factory)
-
-
-class Partition107(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 4286.825748732971
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition107.center_x, Partition107.center_y, 150, Partition107.rainStatus, Partition107.trafficStatus, Partition107.urbanStatus, Partition107.is_factory)
-
-
-class Partition108(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 4546.633369868303
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition108.center_x, Partition108.center_y, 150, Partition108.rainStatus, Partition108.trafficStatus, Partition108.urbanStatus, Partition108.is_factory)
-
-
-class Partition109(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 0.0
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition109.center_x, Partition109.center_y, 150, Partition109.rainStatus, Partition109.trafficStatus, Partition109.urbanStatus, Partition109.is_factory)
-
-
-class Partition110(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 259.8076211353316
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition110.center_x, Partition110.center_y, 150, Partition110.rainStatus, Partition110.trafficStatus, Partition110.urbanStatus, Partition110.is_factory)
-
-
-class Partition111(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 519.6152422706632
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition111.center_x, Partition111.center_y, 150, Partition111.rainStatus, Partition111.trafficStatus, Partition111.urbanStatus, Partition111.is_factory)
-
-
-class Partition112(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 779.4228634059948
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition112.center_x, Partition112.center_y, 150, Partition112.rainStatus, Partition112.trafficStatus, Partition112.urbanStatus, Partition112.is_factory)
-
-
-class Partition113(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1039.2304845413264
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition113.center_x, Partition113.center_y, 150, Partition113.rainStatus, Partition113.trafficStatus, Partition113.urbanStatus, Partition113.is_factory)
-
-
-class Partition114(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1299.038105676658
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition114.center_x, Partition114.center_y, 150, Partition114.rainStatus, Partition114.trafficStatus, Partition114.urbanStatus, Partition114.is_factory)
-
-
-class Partition115(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1558.8457268119896
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition115.center_x, Partition115.center_y, 150, Partition115.rainStatus, Partition115.trafficStatus, Partition115.urbanStatus, Partition115.is_factory)
-
-
-class Partition116(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1818.6533479473212
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition116.center_x, Partition116.center_y, 150, Partition116.rainStatus, Partition116.trafficStatus, Partition116.urbanStatus, Partition116.is_factory)
-
-
-class Partition117(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2078.460969082653
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition117.center_x, Partition117.center_y, 150, Partition117.rainStatus, Partition117.trafficStatus, Partition117.urbanStatus, Partition117.is_factory)
-
-
-class Partition118(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2338.2685902179846
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition118.center_x, Partition118.center_y, 150, Partition118.rainStatus, Partition118.trafficStatus, Partition118.urbanStatus, Partition118.is_factory)
-
-
-class Partition119(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2598.076211353316
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition119.center_x, Partition119.center_y, 150, Partition119.rainStatus, Partition119.trafficStatus, Partition119.urbanStatus, Partition119.is_factory)
-
-
-class Partition120(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2857.8838324886474
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition120.center_x, Partition120.center_y, 150, Partition120.rainStatus, Partition120.trafficStatus, Partition120.urbanStatus, Partition120.is_factory)
-
-
-class Partition121(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3117.691453623979
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition121.center_x, Partition121.center_y, 150, Partition121.rainStatus, Partition121.trafficStatus, Partition121.urbanStatus, Partition121.is_factory)
-
-
-class Partition122(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3377.499074759311
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition122.center_x, Partition122.center_y, 150, Partition122.rainStatus, Partition122.trafficStatus, Partition122.urbanStatus, Partition122.is_factory)
-
-
-class Partition123(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3637.3066958946424
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition123.center_x, Partition123.center_y, 150, Partition123.rainStatus, Partition123.trafficStatus, Partition123.urbanStatus, Partition123.is_factory)
-
-
-class Partition124(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3897.114317029974
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition124.center_x, Partition124.center_y, 150, Partition124.rainStatus, Partition124.trafficStatus, Partition124.urbanStatus, Partition124.is_factory)
-
-
-class Partition125(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 4156.921938165306
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition125.center_x, Partition125.center_y, 150, Partition125.rainStatus, Partition125.trafficStatus, Partition125.urbanStatus, Partition125.is_factory)
-
-
-class Partition126(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 4416.729559300637
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition126.center_x, Partition126.center_y, 150, Partition126.rainStatus, Partition126.trafficStatus, Partition126.urbanStatus, Partition126.is_factory)
-
-
-class Partition127(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 129.9038105676658
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition127.center_x, Partition127.center_y, 150, Partition127.rainStatus, Partition127.trafficStatus, Partition127.urbanStatus, Partition127.is_factory)
-
-
-class Partition128(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 389.7114317029974
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition128.center_x, Partition128.center_y, 150, Partition128.rainStatus, Partition128.trafficStatus, Partition128.urbanStatus, Partition128.is_factory)
-
-
-class Partition129(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 649.519052838329
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition129.center_x, Partition129.center_y, 150, Partition129.rainStatus, Partition129.trafficStatus, Partition129.urbanStatus, Partition129.is_factory)
-
-
-class Partition130(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 909.3266739736606
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition130.center_x, Partition130.center_y, 150, Partition130.rainStatus, Partition130.trafficStatus, Partition130.urbanStatus, Partition130.is_factory)
-
-
-class Partition131(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1169.1342951089923
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition131.center_x, Partition131.center_y, 150, Partition131.rainStatus, Partition131.trafficStatus, Partition131.urbanStatus, Partition131.is_factory)
-
-
-class Partition132(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1428.9419162443237
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition132.center_x, Partition132.center_y, 150, Partition132.rainStatus, Partition132.trafficStatus, Partition132.urbanStatus, Partition132.is_factory)
-
-
-class Partition133(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1688.7495373796555
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition133.center_x, Partition133.center_y, 150, Partition133.rainStatus, Partition133.trafficStatus, Partition133.urbanStatus, Partition133.is_factory)
-
-
-class Partition134(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1948.557158514987
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition134.center_x, Partition134.center_y, 150, Partition134.rainStatus, Partition134.trafficStatus, Partition134.urbanStatus, Partition134.is_factory)
-
-
-class Partition135(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2208.3647796503187
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition135.center_x, Partition135.center_y, 150, Partition135.rainStatus, Partition135.trafficStatus, Partition135.urbanStatus, Partition135.is_factory)
-
-
-class Partition136(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2468.1724007856506
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition136.center_x, Partition136.center_y, 150, Partition136.rainStatus, Partition136.trafficStatus, Partition136.urbanStatus, Partition136.is_factory)
-
-
-class Partition137(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2727.980021920982
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition137.center_x, Partition137.center_y, 150, Partition137.rainStatus, Partition137.trafficStatus, Partition137.urbanStatus, Partition137.is_factory)
-
-
-class Partition138(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2987.7876430563133
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition138.center_x, Partition138.center_y, 150, Partition138.rainStatus, Partition138.trafficStatus, Partition138.urbanStatus, Partition138.is_factory)
-
-
-class Partition139(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3247.595264191645
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition139.center_x, Partition139.center_y, 150, Partition139.rainStatus, Partition139.trafficStatus, Partition139.urbanStatus, Partition139.is_factory)
-
-
-class Partition140(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3507.402885326977
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition140.center_x, Partition140.center_y, 150, Partition140.rainStatus, Partition140.trafficStatus, Partition140.urbanStatus, Partition140.is_factory)
-
-
-class Partition141(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3767.2105064623083
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition141.center_x, Partition141.center_y, 150, Partition141.rainStatus, Partition141.trafficStatus, Partition141.urbanStatus, Partition141.is_factory)
-
-
-class Partition142(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 4027.0181275976397
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition142.center_x, Partition142.center_y, 150, Partition142.rainStatus, Partition142.trafficStatus, Partition142.urbanStatus, Partition142.is_factory)
-
-
-class Partition143(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4286.825748732971
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition143.center_x, Partition143.center_y, 150, Partition143.rainStatus, Partition143.trafficStatus, Partition143.urbanStatus, Partition143.is_factory)
-
-
-class Partition144(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 4546.633369868303
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition144.center_x, Partition144.center_y, 150, Partition144.rainStatus, Partition144.trafficStatus, Partition144.urbanStatus, Partition144.is_factory)
-
-
-class Partition145(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 0.0
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition145.center_x, Partition145.center_y, 150, Partition145.rainStatus, Partition145.trafficStatus, Partition145.urbanStatus, Partition145.is_factory)
-
-
-class Partition146(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 259.8076211353316
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition146.center_x, Partition146.center_y, 150, Partition146.rainStatus, Partition146.trafficStatus, Partition146.urbanStatus, Partition146.is_factory)
-
-
-class Partition147(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 519.6152422706632
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition147.center_x, Partition147.center_y, 150, Partition147.rainStatus, Partition147.trafficStatus, Partition147.urbanStatus, Partition147.is_factory)
-
-
-class Partition148(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 779.4228634059948
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition148.center_x, Partition148.center_y, 150, Partition148.rainStatus, Partition148.trafficStatus, Partition148.urbanStatus, Partition148.is_factory)
-
-
-class Partition149(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1039.2304845413264
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition149.center_x, Partition149.center_y, 150, Partition149.rainStatus, Partition149.trafficStatus, Partition149.urbanStatus, Partition149.is_factory)
-
-
-class Partition150(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1299.038105676658
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition150.center_x, Partition150.center_y, 150, Partition150.rainStatus, Partition150.trafficStatus, Partition150.urbanStatus, Partition150.is_factory)
-
-
-class Partition151(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1558.8457268119896
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition151.center_x, Partition151.center_y, 150, Partition151.rainStatus, Partition151.trafficStatus, Partition151.urbanStatus, Partition151.is_factory)
-
-
-class Partition152(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1818.6533479473212
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition152.center_x, Partition152.center_y, 150, Partition152.rainStatus, Partition152.trafficStatus, Partition152.urbanStatus, Partition152.is_factory)
-
-
-class Partition153(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2078.460969082653
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition153.center_x, Partition153.center_y, 150, Partition153.rainStatus, Partition153.trafficStatus, Partition153.urbanStatus, Partition153.is_factory)
-
-
-class Partition154(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2338.2685902179846
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition154.center_x, Partition154.center_y, 150, Partition154.rainStatus, Partition154.trafficStatus, Partition154.urbanStatus, Partition154.is_factory)
-
-
-class Partition155(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2598.076211353316
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition155.center_x, Partition155.center_y, 150, Partition155.rainStatus, Partition155.trafficStatus, Partition155.urbanStatus, Partition155.is_factory)
-
-
-class Partition156(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2857.8838324886474
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition156.center_x, Partition156.center_y, 150, Partition156.rainStatus, Partition156.trafficStatus, Partition156.urbanStatus, Partition156.is_factory)
-
-
-class Partition157(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3117.691453623979
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition157.center_x, Partition157.center_y, 150, Partition157.rainStatus, Partition157.trafficStatus, Partition157.urbanStatus, Partition157.is_factory)
-
-
-class Partition158(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3377.499074759311
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition158.center_x, Partition158.center_y, 150, Partition158.rainStatus, Partition158.trafficStatus, Partition158.urbanStatus, Partition158.is_factory)
-
-
-class Partition159(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3637.3066958946424
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition159.center_x, Partition159.center_y, 150, Partition159.rainStatus, Partition159.trafficStatus, Partition159.urbanStatus, Partition159.is_factory)
-
-
-class Partition160(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3897.114317029974
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition160.center_x, Partition160.center_y, 150, Partition160.rainStatus, Partition160.trafficStatus, Partition160.urbanStatus, Partition160.is_factory)
-
-
-class Partition161(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 4156.921938165306
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition161.center_x, Partition161.center_y, 150, Partition161.rainStatus, Partition161.trafficStatus, Partition161.urbanStatus, Partition161.is_factory)
-
-
-class Partition162(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4416.729559300637
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition162.center_x, Partition162.center_y, 150, Partition162.rainStatus, Partition162.trafficStatus, Partition162.urbanStatus, Partition162.is_factory)
-
-
-class Partition163(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 129.9038105676658
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition163.center_x, Partition163.center_y, 150, Partition163.rainStatus, Partition163.trafficStatus, Partition163.urbanStatus, Partition163.is_factory)
-
-
-class Partition164(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 389.7114317029974
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition164.center_x, Partition164.center_y, 150, Partition164.rainStatus, Partition164.trafficStatus, Partition164.urbanStatus, Partition164.is_factory)
-
-
-class Partition165(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 649.519052838329
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition165.center_x, Partition165.center_y, 150, Partition165.rainStatus, Partition165.trafficStatus, Partition165.urbanStatus, Partition165.is_factory)
-
-
-class Partition166(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 909.3266739736606
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition166.center_x, Partition166.center_y, 150, Partition166.rainStatus, Partition166.trafficStatus, Partition166.urbanStatus, Partition166.is_factory)
-
-
-class Partition167(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1169.1342951089923
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition167.center_x, Partition167.center_y, 150, Partition167.rainStatus, Partition167.trafficStatus, Partition167.urbanStatus, Partition167.is_factory)
-
-
-class Partition168(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1428.9419162443237
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition168.center_x, Partition168.center_y, 150, Partition168.rainStatus, Partition168.trafficStatus, Partition168.urbanStatus, Partition168.is_factory)
-
-
-class Partition169(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1688.7495373796555
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition169.center_x, Partition169.center_y, 150, Partition169.rainStatus, Partition169.trafficStatus, Partition169.urbanStatus, Partition169.is_factory)
-
-
-class Partition170(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1948.557158514987
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition170.center_x, Partition170.center_y, 150, Partition170.rainStatus, Partition170.trafficStatus, Partition170.urbanStatus, Partition170.is_factory)
-
-
-class Partition171(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2208.3647796503187
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition171.center_x, Partition171.center_y, 150, Partition171.rainStatus, Partition171.trafficStatus, Partition171.urbanStatus, Partition171.is_factory)
-
-
-class Partition172(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2468.1724007856506
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition172.center_x, Partition172.center_y, 150, Partition172.rainStatus, Partition172.trafficStatus, Partition172.urbanStatus, Partition172.is_factory)
-
-
-class Partition173(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2727.980021920982
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition173.center_x, Partition173.center_y, 150, Partition173.rainStatus, Partition173.trafficStatus, Partition173.urbanStatus, Partition173.is_factory)
-
-
-class Partition174(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2987.7876430563133
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition174.center_x, Partition174.center_y, 150, Partition174.rainStatus, Partition174.trafficStatus, Partition174.urbanStatus, Partition174.is_factory)
-
-
-class Partition175(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3247.595264191645
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition175.center_x, Partition175.center_y, 150, Partition175.rainStatus, Partition175.trafficStatus, Partition175.urbanStatus, Partition175.is_factory)
-
-
-class Partition176(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3507.402885326977
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition176.center_x, Partition176.center_y, 150, Partition176.rainStatus, Partition176.trafficStatus, Partition176.urbanStatus, Partition176.is_factory)
-
-
-class Partition177(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3767.2105064623083
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition177.center_x, Partition177.center_y, 150, Partition177.rainStatus, Partition177.trafficStatus, Partition177.urbanStatus, Partition177.is_factory)
-
-
-class Partition178(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4027.0181275976397
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition178.center_x, Partition178.center_y, 150, Partition178.rainStatus, Partition178.trafficStatus, Partition178.urbanStatus, Partition178.is_factory)
-
-
-class Partition179(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 4286.825748732971
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition179.center_x, Partition179.center_y, 150, Partition179.rainStatus, Partition179.trafficStatus, Partition179.urbanStatus, Partition179.is_factory)
-
-
-class Partition180(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 4546.633369868303
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition180.center_x, Partition180.center_y, 150, Partition180.rainStatus, Partition180.trafficStatus, Partition180.urbanStatus, Partition180.is_factory)
-
-
-class Partition181(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 0.0
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition181.center_x, Partition181.center_y, 150, Partition181.rainStatus, Partition181.trafficStatus, Partition181.urbanStatus, Partition181.is_factory)
-
-
-class Partition182(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 259.8076211353316
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition182.center_x, Partition182.center_y, 150, Partition182.rainStatus, Partition182.trafficStatus, Partition182.urbanStatus, Partition182.is_factory)
-
-
-class Partition183(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 519.6152422706632
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition183.center_x, Partition183.center_y, 150, Partition183.rainStatus, Partition183.trafficStatus, Partition183.urbanStatus, Partition183.is_factory)
-
-
-class Partition184(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 779.4228634059948
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition184.center_x, Partition184.center_y, 150, Partition184.rainStatus, Partition184.trafficStatus, Partition184.urbanStatus, Partition184.is_factory)
-
-
-class Partition185(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1039.2304845413264
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition185.center_x, Partition185.center_y, 150, Partition185.rainStatus, Partition185.trafficStatus, Partition185.urbanStatus, Partition185.is_factory)
-
-
-class Partition186(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1299.038105676658
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition186.center_x, Partition186.center_y, 150, Partition186.rainStatus, Partition186.trafficStatus, Partition186.urbanStatus, Partition186.is_factory)
-
-
-class Partition187(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1558.8457268119896
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition187.center_x, Partition187.center_y, 150, Partition187.rainStatus, Partition187.trafficStatus, Partition187.urbanStatus, Partition187.is_factory)
-
-
-class Partition188(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1818.6533479473212
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition188.center_x, Partition188.center_y, 150, Partition188.rainStatus, Partition188.trafficStatus, Partition188.urbanStatus, Partition188.is_factory)
-
-
-class Partition189(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2078.460969082653
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition189.center_x, Partition189.center_y, 150, Partition189.rainStatus, Partition189.trafficStatus, Partition189.urbanStatus, Partition189.is_factory)
-
-
-class Partition190(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2338.2685902179846
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition190.center_x, Partition190.center_y, 150, Partition190.rainStatus, Partition190.trafficStatus, Partition190.urbanStatus, Partition190.is_factory)
-
-
-class Partition191(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2598.076211353316
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition191.center_x, Partition191.center_y, 150, Partition191.rainStatus, Partition191.trafficStatus, Partition191.urbanStatus, Partition191.is_factory)
-
-
-class Partition192(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2857.8838324886474
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition192.center_x, Partition192.center_y, 150, Partition192.rainStatus, Partition192.trafficStatus, Partition192.urbanStatus, Partition192.is_factory)
-
-
-class Partition193(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3117.691453623979
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition193.center_x, Partition193.center_y, 150, Partition193.rainStatus, Partition193.trafficStatus, Partition193.urbanStatus, Partition193.is_factory)
-
-
-class Partition194(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3377.499074759311
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition194.center_x, Partition194.center_y, 150, Partition194.rainStatus, Partition194.trafficStatus, Partition194.urbanStatus, Partition194.is_factory)
-
-
-class Partition195(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3637.3066958946424
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition195.center_x, Partition195.center_y, 150, Partition195.rainStatus, Partition195.trafficStatus, Partition195.urbanStatus, Partition195.is_factory)
-
-
-class Partition196(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3897.114317029974
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition196.center_x, Partition196.center_y, 150, Partition196.rainStatus, Partition196.trafficStatus, Partition196.urbanStatus, Partition196.is_factory)
-
-
-class Partition197(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4156.921938165306
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition197.center_x, Partition197.center_y, 150, Partition197.rainStatus, Partition197.trafficStatus, Partition197.urbanStatus, Partition197.is_factory)
-
-
-class Partition198(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 4416.729559300637
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition198.center_x, Partition198.center_y, 150, Partition198.rainStatus, Partition198.trafficStatus, Partition198.urbanStatus, Partition198.is_factory)
-
-
-class Partition199(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 129.9038105676658
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition199.center_x, Partition199.center_y, 150, Partition199.rainStatus, Partition199.trafficStatus, Partition199.urbanStatus, Partition199.is_factory)
-
-
-class Partition200(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 389.7114317029974
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition200.center_x, Partition200.center_y, 150, Partition200.rainStatus, Partition200.trafficStatus, Partition200.urbanStatus, Partition200.is_factory)
-
-
-class Partition201(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 649.519052838329
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition201.center_x, Partition201.center_y, 150, Partition201.rainStatus, Partition201.trafficStatus, Partition201.urbanStatus, Partition201.is_factory)
-
-
-class Partition202(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 909.3266739736606
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition202.center_x, Partition202.center_y, 150, Partition202.rainStatus, Partition202.trafficStatus, Partition202.urbanStatus, Partition202.is_factory)
-
-
-class Partition203(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1169.1342951089923
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition203.center_x, Partition203.center_y, 150, Partition203.rainStatus, Partition203.trafficStatus, Partition203.urbanStatus, Partition203.is_factory)
-
-
-class Partition204(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1428.9419162443237
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition204.center_x, Partition204.center_y, 150, Partition204.rainStatus, Partition204.trafficStatus, Partition204.urbanStatus, Partition204.is_factory)
-
-
-class Partition205(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1688.7495373796555
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition205.center_x, Partition205.center_y, 150, Partition205.rainStatus, Partition205.trafficStatus, Partition205.urbanStatus, Partition205.is_factory)
-
-
-class Partition206(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1948.557158514987
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition206.center_x, Partition206.center_y, 150, Partition206.rainStatus, Partition206.trafficStatus, Partition206.urbanStatus, Partition206.is_factory)
-
-
-class Partition207(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2208.3647796503187
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition207.center_x, Partition207.center_y, 150, Partition207.rainStatus, Partition207.trafficStatus, Partition207.urbanStatus, Partition207.is_factory)
-
-
-class Partition208(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2468.1724007856506
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition208.center_x, Partition208.center_y, 150, Partition208.rainStatus, Partition208.trafficStatus, Partition208.urbanStatus, Partition208.is_factory)
-
-
-class Partition209(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2727.980021920982
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition209.center_x, Partition209.center_y, 150, Partition209.rainStatus, Partition209.trafficStatus, Partition209.urbanStatus, Partition209.is_factory)
-
-
-class Partition210(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2987.7876430563133
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition210.center_x, Partition210.center_y, 150, Partition210.rainStatus, Partition210.trafficStatus, Partition210.urbanStatus, Partition210.is_factory)
-
-
-class Partition211(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3247.595264191645
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition211.center_x, Partition211.center_y, 150, Partition211.rainStatus, Partition211.trafficStatus, Partition211.urbanStatus, Partition211.is_factory)
-
-
-class Partition212(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3507.402885326977
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition212.center_x, Partition212.center_y, 150, Partition212.rainStatus, Partition212.trafficStatus, Partition212.urbanStatus, Partition212.is_factory)
-
-
-class Partition213(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3767.2105064623083
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition213.center_x, Partition213.center_y, 150, Partition213.rainStatus, Partition213.trafficStatus, Partition213.urbanStatus, Partition213.is_factory)
-
-
-class Partition214(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4027.0181275976397
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition214.center_x, Partition214.center_y, 150, Partition214.rainStatus, Partition214.trafficStatus, Partition214.urbanStatus, Partition214.is_factory)
-
-
-class Partition215(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 4286.825748732971
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition215.center_x, Partition215.center_y, 150, Partition215.rainStatus, Partition215.trafficStatus, Partition215.urbanStatus, Partition215.is_factory)
-
-
-class Partition216(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 4546.633369868303
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition216.center_x, Partition216.center_y, 150, Partition216.rainStatus, Partition216.trafficStatus, Partition216.urbanStatus, Partition216.is_factory)
-
-
-class Partition217(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 0.0
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition217.center_x, Partition217.center_y, 150, Partition217.rainStatus, Partition217.trafficStatus, Partition217.urbanStatus, Partition217.is_factory)
-
-
-class Partition218(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 259.8076211353316
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition218.center_x, Partition218.center_y, 150, Partition218.rainStatus, Partition218.trafficStatus, Partition218.urbanStatus, Partition218.is_factory)
-
-
-class Partition219(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 519.6152422706632
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition219.center_x, Partition219.center_y, 150, Partition219.rainStatus, Partition219.trafficStatus, Partition219.urbanStatus, Partition219.is_factory)
-
-
-class Partition220(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 779.4228634059948
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition220.center_x, Partition220.center_y, 150, Partition220.rainStatus, Partition220.trafficStatus, Partition220.urbanStatus, Partition220.is_factory)
-
-
-class Partition221(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1039.2304845413264
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition221.center_x, Partition221.center_y, 150, Partition221.rainStatus, Partition221.trafficStatus, Partition221.urbanStatus, Partition221.is_factory)
-
-
-class Partition222(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1299.038105676658
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition222.center_x, Partition222.center_y, 150, Partition222.rainStatus, Partition222.trafficStatus, Partition222.urbanStatus, Partition222.is_factory)
-
-
-class Partition223(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1558.8457268119896
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition223.center_x, Partition223.center_y, 150, Partition223.rainStatus, Partition223.trafficStatus, Partition223.urbanStatus, Partition223.is_factory)
-
-
-class Partition224(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1818.6533479473212
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition224.center_x, Partition224.center_y, 150, Partition224.rainStatus, Partition224.trafficStatus, Partition224.urbanStatus, Partition224.is_factory)
-
-
-class Partition225(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2078.460969082653
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition225.center_x, Partition225.center_y, 150, Partition225.rainStatus, Partition225.trafficStatus, Partition225.urbanStatus, Partition225.is_factory)
-
-
-class Partition226(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2338.2685902179846
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition226.center_x, Partition226.center_y, 150, Partition226.rainStatus, Partition226.trafficStatus, Partition226.urbanStatus, Partition226.is_factory)
-
-
-class Partition227(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2598.076211353316
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition227.center_x, Partition227.center_y, 150, Partition227.rainStatus, Partition227.trafficStatus, Partition227.urbanStatus, Partition227.is_factory)
-
-
-class Partition228(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2857.8838324886474
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition228.center_x, Partition228.center_y, 150, Partition228.rainStatus, Partition228.trafficStatus, Partition228.urbanStatus, Partition228.is_factory)
-
-
-class Partition229(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3117.691453623979
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition229.center_x, Partition229.center_y, 150, Partition229.rainStatus, Partition229.trafficStatus, Partition229.urbanStatus, Partition229.is_factory)
-
-
-class Partition230(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3377.499074759311
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition230.center_x, Partition230.center_y, 150, Partition230.rainStatus, Partition230.trafficStatus, Partition230.urbanStatus, Partition230.is_factory)
-
-
-class Partition231(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3637.3066958946424
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition231.center_x, Partition231.center_y, 150, Partition231.rainStatus, Partition231.trafficStatus, Partition231.urbanStatus, Partition231.is_factory)
-
-
-class Partition232(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3897.114317029974
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition232.center_x, Partition232.center_y, 150, Partition232.rainStatus, Partition232.trafficStatus, Partition232.urbanStatus, Partition232.is_factory)
-
-
-class Partition233(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4156.921938165306
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition233.center_x, Partition233.center_y, 150, Partition233.rainStatus, Partition233.trafficStatus, Partition233.urbanStatus, Partition233.is_factory)
-
-
-class Partition234(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 4416.729559300637
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition234.center_x, Partition234.center_y, 150, Partition234.rainStatus, Partition234.trafficStatus, Partition234.urbanStatus, Partition234.is_factory)
-
-
-class Partition235(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 129.9038105676658
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition235.center_x, Partition235.center_y, 150, Partition235.rainStatus, Partition235.trafficStatus, Partition235.urbanStatus, Partition235.is_factory)
-
-
-class Partition236(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 389.7114317029974
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition236.center_x, Partition236.center_y, 150, Partition236.rainStatus, Partition236.trafficStatus, Partition236.urbanStatus, Partition236.is_factory)
-
-
-class Partition237(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 649.519052838329
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition237.center_x, Partition237.center_y, 150, Partition237.rainStatus, Partition237.trafficStatus, Partition237.urbanStatus, Partition237.is_factory)
-
-
-class Partition238(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 909.3266739736606
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition238.center_x, Partition238.center_y, 150, Partition238.rainStatus, Partition238.trafficStatus, Partition238.urbanStatus, Partition238.is_factory)
-
-
-class Partition239(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1169.1342951089923
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition239.center_x, Partition239.center_y, 150, Partition239.rainStatus, Partition239.trafficStatus, Partition239.urbanStatus, Partition239.is_factory)
-
-
-class Partition240(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1428.9419162443237
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition240.center_x, Partition240.center_y, 150, Partition240.rainStatus, Partition240.trafficStatus, Partition240.urbanStatus, Partition240.is_factory)
-
-
-class Partition241(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1688.7495373796555
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition241.center_x, Partition241.center_y, 150, Partition241.rainStatus, Partition241.trafficStatus, Partition241.urbanStatus, Partition241.is_factory)
-
-
-class Partition242(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1948.557158514987
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition242.center_x, Partition242.center_y, 150, Partition242.rainStatus, Partition242.trafficStatus, Partition242.urbanStatus, Partition242.is_factory)
-
-
-class Partition243(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2208.3647796503187
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition243.center_x, Partition243.center_y, 150, Partition243.rainStatus, Partition243.trafficStatus, Partition243.urbanStatus, Partition243.is_factory)
-
-
-class Partition244(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2468.1724007856506
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition244.center_x, Partition244.center_y, 150, Partition244.rainStatus, Partition244.trafficStatus, Partition244.urbanStatus, Partition244.is_factory)
-
-
-class Partition245(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2727.980021920982
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition245.center_x, Partition245.center_y, 150, Partition245.rainStatus, Partition245.trafficStatus, Partition245.urbanStatus, Partition245.is_factory)
-
-
-class Partition246(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2987.7876430563133
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition246.center_x, Partition246.center_y, 150, Partition246.rainStatus, Partition246.trafficStatus, Partition246.urbanStatus, Partition246.is_factory)
-
-
-class Partition247(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3247.595264191645
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition247.center_x, Partition247.center_y, 150, Partition247.rainStatus, Partition247.trafficStatus, Partition247.urbanStatus, Partition247.is_factory)
-
-
-class Partition248(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3507.402885326977
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition248.center_x, Partition248.center_y, 150, Partition248.rainStatus, Partition248.trafficStatus, Partition248.urbanStatus, Partition248.is_factory)
-
-
-class Partition249(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3767.2105064623083
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition249.center_x, Partition249.center_y, 150, Partition249.rainStatus, Partition249.trafficStatus, Partition249.urbanStatus, Partition249.is_factory)
-
-
-class Partition250(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4027.0181275976397
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition250.center_x, Partition250.center_y, 150, Partition250.rainStatus, Partition250.trafficStatus, Partition250.urbanStatus, Partition250.is_factory)
-
-
-class Partition251(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 4286.825748732971
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition251.center_x, Partition251.center_y, 150, Partition251.rainStatus, Partition251.trafficStatus, Partition251.urbanStatus, Partition251.is_factory)
-
-
-class Partition252(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 4546.633369868303
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition252.center_x, Partition252.center_y, 150, Partition252.rainStatus, Partition252.trafficStatus, Partition252.urbanStatus, Partition252.is_factory)
-
-
-class Partition253(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 0.0
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition253.center_x, Partition253.center_y, 150, Partition253.rainStatus, Partition253.trafficStatus, Partition253.urbanStatus, Partition253.is_factory)
-
-
-class Partition254(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 259.8076211353316
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition254.center_x, Partition254.center_y, 150, Partition254.rainStatus, Partition254.trafficStatus, Partition254.urbanStatus, Partition254.is_factory)
-
-
-class Partition255(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 519.6152422706632
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition255.center_x, Partition255.center_y, 150, Partition255.rainStatus, Partition255.trafficStatus, Partition255.urbanStatus, Partition255.is_factory)
-
-
-class Partition256(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 779.4228634059948
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition256.center_x, Partition256.center_y, 150, Partition256.rainStatus, Partition256.trafficStatus, Partition256.urbanStatus, Partition256.is_factory)
-
-
-class Partition257(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1039.2304845413264
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition257.center_x, Partition257.center_y, 150, Partition257.rainStatus, Partition257.trafficStatus, Partition257.urbanStatus, Partition257.is_factory)
-
-
-class Partition258(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 1299.038105676658
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition258.center_x, Partition258.center_y, 150, Partition258.rainStatus, Partition258.trafficStatus, Partition258.urbanStatus, Partition258.is_factory)
-
-
-class Partition259(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1558.8457268119896
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition259.center_x, Partition259.center_y, 150, Partition259.rainStatus, Partition259.trafficStatus, Partition259.urbanStatus, Partition259.is_factory)
-
-
-class Partition260(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1818.6533479473212
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition260.center_x, Partition260.center_y, 150, Partition260.rainStatus, Partition260.trafficStatus, Partition260.urbanStatus, Partition260.is_factory)
-
-
-class Partition261(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2078.460969082653
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition261.center_x, Partition261.center_y, 150, Partition261.rainStatus, Partition261.trafficStatus, Partition261.urbanStatus, Partition261.is_factory)
-
-
-class Partition262(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2338.2685902179846
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition262.center_x, Partition262.center_y, 150, Partition262.rainStatus, Partition262.trafficStatus, Partition262.urbanStatus, Partition262.is_factory)
-
-
-class Partition263(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2598.076211353316
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition263.center_x, Partition263.center_y, 150, Partition263.rainStatus, Partition263.trafficStatus, Partition263.urbanStatus, Partition263.is_factory)
-
-
-class Partition264(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2857.8838324886474
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition264.center_x, Partition264.center_y, 150, Partition264.rainStatus, Partition264.trafficStatus, Partition264.urbanStatus, Partition264.is_factory)
-
-
-class Partition265(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3117.691453623979
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition265.center_x, Partition265.center_y, 150, Partition265.rainStatus, Partition265.trafficStatus, Partition265.urbanStatus, Partition265.is_factory)
-
-
-class Partition266(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3377.499074759311
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition266.center_x, Partition266.center_y, 150, Partition266.rainStatus, Partition266.trafficStatus, Partition266.urbanStatus, Partition266.is_factory)
-
-
-class Partition267(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3637.3066958946424
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition267.center_x, Partition267.center_y, 150, Partition267.rainStatus, Partition267.trafficStatus, Partition267.urbanStatus, Partition267.is_factory)
-
-
-class Partition268(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 3897.114317029974
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition268.center_x, Partition268.center_y, 150, Partition268.rainStatus, Partition268.trafficStatus, Partition268.urbanStatus, Partition268.is_factory)
-
-
-class Partition269(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 4156.921938165306
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition269.center_x, Partition269.center_y, 150, Partition269.rainStatus, Partition269.trafficStatus, Partition269.urbanStatus, Partition269.is_factory)
-
-
-class Partition270(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 4416.729559300637
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition270.center_x, Partition270.center_y, 150, Partition270.rainStatus, Partition270.trafficStatus, Partition270.urbanStatus, Partition270.is_factory)
-
-
-class Partition271(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 129.9038105676658
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition271.center_x, Partition271.center_y, 150, Partition271.rainStatus, Partition271.trafficStatus, Partition271.urbanStatus, Partition271.is_factory)
-
-
-class Partition272(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 389.7114317029974
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition272.center_x, Partition272.center_y, 150, Partition272.rainStatus, Partition272.trafficStatus, Partition272.urbanStatus, Partition272.is_factory)
-
-
-class Partition273(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 649.519052838329
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition273.center_x, Partition273.center_y, 150, Partition273.rainStatus, Partition273.trafficStatus, Partition273.urbanStatus, Partition273.is_factory)
-
-
-class Partition274(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 909.3266739736606
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition274.center_x, Partition274.center_y, 150, Partition274.rainStatus, Partition274.trafficStatus, Partition274.urbanStatus, Partition274.is_factory)
-
-
-class Partition275(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1169.1342951089923
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition275.center_x, Partition275.center_y, 150, Partition275.rainStatus, Partition275.trafficStatus, Partition275.urbanStatus, Partition275.is_factory)
-
-
-class Partition276(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 1428.9419162443237
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition276.center_x, Partition276.center_y, 150, Partition276.rainStatus, Partition276.trafficStatus, Partition276.urbanStatus, Partition276.is_factory)
-
-
-class Partition277(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1688.7495373796555
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition277.center_x, Partition277.center_y, 150, Partition277.rainStatus, Partition277.trafficStatus, Partition277.urbanStatus, Partition277.is_factory)
-
-
-class Partition278(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1948.557158514987
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition278.center_x, Partition278.center_y, 150, Partition278.rainStatus, Partition278.trafficStatus, Partition278.urbanStatus, Partition278.is_factory)
-
-
-class Partition279(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 2208.3647796503187
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition279.center_x, Partition279.center_y, 150, Partition279.rainStatus, Partition279.trafficStatus, Partition279.urbanStatus, Partition279.is_factory)
-
-
-class Partition280(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2468.1724007856506
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition280.center_x, Partition280.center_y, 150, Partition280.rainStatus, Partition280.trafficStatus, Partition280.urbanStatus, Partition280.is_factory)
-
-
-class Partition281(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 2727.980021920982
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition281.center_x, Partition281.center_y, 150, Partition281.rainStatus, Partition281.trafficStatus, Partition281.urbanStatus, Partition281.is_factory)
-
-
-class Partition282(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2987.7876430563133
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition282.center_x, Partition282.center_y, 150, Partition282.rainStatus, Partition282.trafficStatus, Partition282.urbanStatus, Partition282.is_factory)
-
-
-class Partition283(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3247.595264191645
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition283.center_x, Partition283.center_y, 150, Partition283.rainStatus, Partition283.trafficStatus, Partition283.urbanStatus, Partition283.is_factory)
-
-
-class Partition284(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3507.402885326977
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition284.center_x, Partition284.center_y, 150, Partition284.rainStatus, Partition284.trafficStatus, Partition284.urbanStatus, Partition284.is_factory)
-
-
-class Partition285(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 3767.2105064623083
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition285.center_x, Partition285.center_y, 150, Partition285.rainStatus, Partition285.trafficStatus, Partition285.urbanStatus, Partition285.is_factory)
-
-
-class Partition286(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 4027.0181275976397
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition286.center_x, Partition286.center_y, 150, Partition286.rainStatus, Partition286.trafficStatus, Partition286.urbanStatus, Partition286.is_factory)
-
-
-class Partition287(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4286.825748732971
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition287.center_x, Partition287.center_y, 150, Partition287.rainStatus, Partition287.trafficStatus, Partition287.urbanStatus, Partition287.is_factory)
-
-
-class Partition288(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4546.633369868303
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition288.center_x, Partition288.center_y, 150, Partition288.rainStatus, Partition288.trafficStatus, Partition288.urbanStatus, Partition288.is_factory)
-
-
-class Partition289(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    is_factory = False
-    center_x = 0.0
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition289.center_x, Partition289.center_y, 150, Partition289.rainStatus, Partition289.trafficStatus, Partition289.urbanStatus, Partition289.is_factory)
-
-
-class Partition290(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 259.8076211353316
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition290.center_x, Partition290.center_y, 150, Partition290.rainStatus, Partition290.trafficStatus, Partition290.urbanStatus, Partition290.is_factory)
-
-
-class Partition291(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 519.6152422706632
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition291.center_x, Partition291.center_y, 150, Partition291.rainStatus, Partition291.trafficStatus, Partition291.urbanStatus, Partition291.is_factory)
-
-
-class Partition292(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 779.4228634059948
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition292.center_x, Partition292.center_y, 150, Partition292.rainStatus, Partition292.trafficStatus, Partition292.urbanStatus, Partition292.is_factory)
-
-
-class Partition293(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 1039.2304845413264
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition293.center_x, Partition293.center_y, 150, Partition293.rainStatus, Partition293.trafficStatus, Partition293.urbanStatus, Partition293.is_factory)
-
-
-class Partition294(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1299.038105676658
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition294.center_x, Partition294.center_y, 150, Partition294.rainStatus, Partition294.trafficStatus, Partition294.urbanStatus, Partition294.is_factory)
-
-
-class Partition295(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1558.8457268119896
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition295.center_x, Partition295.center_y, 150, Partition295.rainStatus, Partition295.trafficStatus, Partition295.urbanStatus, Partition295.is_factory)
-
-
-class Partition296(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 1818.6533479473212
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition296.center_x, Partition296.center_y, 150, Partition296.rainStatus, Partition296.trafficStatus, Partition296.urbanStatus, Partition296.is_factory)
-
-
-class Partition297(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 2078.460969082653
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition297.center_x, Partition297.center_y, 150, Partition297.rainStatus, Partition297.trafficStatus, Partition297.urbanStatus, Partition297.is_factory)
-
-
-class Partition298(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2338.2685902179846
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition298.center_x, Partition298.center_y, 150, Partition298.rainStatus, Partition298.trafficStatus, Partition298.urbanStatus, Partition298.is_factory)
-
-
-class Partition299(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2598.076211353316
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition299.center_x, Partition299.center_y, 150, Partition299.rainStatus, Partition299.trafficStatus, Partition299.urbanStatus, Partition299.is_factory)
-
-
-class Partition300(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 2857.8838324886474
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition300.center_x, Partition300.center_y, 150, Partition300.rainStatus, Partition300.trafficStatus, Partition300.urbanStatus, Partition300.is_factory)
-
-
-class Partition301(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    is_factory = False
-    center_x = 3117.691453623979
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition301.center_x, Partition301.center_y, 150, Partition301.rainStatus, Partition301.trafficStatus, Partition301.urbanStatus, Partition301.is_factory)
-
-
-class Partition302(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3377.499074759311
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition302.center_x, Partition302.center_y, 150, Partition302.rainStatus, Partition302.trafficStatus, Partition302.urbanStatus, Partition302.is_factory)
-
-
-class Partition303(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3637.3066958946424
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition303.center_x, Partition303.center_y, 150, Partition303.rainStatus, Partition303.trafficStatus, Partition303.urbanStatus, Partition303.is_factory)
-
-
-class Partition304(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 3897.114317029974
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition304.center_x, Partition304.center_y, 150, Partition304.rainStatus, Partition304.trafficStatus, Partition304.urbanStatus, Partition304.is_factory)
-
-
-class Partition305(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    is_factory = False
-    center_x = 4156.921938165306
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition305.center_x, Partition305.center_y, 150, Partition305.rainStatus, Partition305.trafficStatus, Partition305.urbanStatus, Partition305.is_factory)
-
-
-class Partition306(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    is_factory = False
-    center_x = 4416.729559300637
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition306.center_x, Partition306.center_y, 150, Partition306.rainStatus, Partition306.trafficStatus, Partition306.urbanStatus, Partition306.is_factory)
Index: controllers/finalChoiceByAttenuationNoise.py
===================================================================
diff --git a/controllers/finalChoiceByAttenuationNoise.py b/controllers/finalChoiceByAttenuationNoise.py
deleted file mode 100644
--- a/controllers/finalChoiceByAttenuationNoise.py	
+++ /dev/null	
@@ -1,217 +0,0 @@
-import math
-import random
-
-import numpy as np
-from scipy.special import erfc
-
-from NoiseConfigs.utilsFunctions import UtilsFunc
-from config import Config
-from task_and_user_generator import Config as Cnf
-
-
-def red_bg(text):
-    return f"\033[41m{text}\033[0m"
-
-
-class FinalChoiceByAttenuationNoise:
-    # THERESHOLD = 0.0001
-    THERESHOLD = 50
-    def makeFinalChoice(self, attenuationList, task, partitions, method):
-        if len(attenuationList) > 0:
-
-            if method == Config.NoiseMethod.PROPOSED_METHOD:
-                # check if all values are 0 offload it locally
-                if self.areAttenuationsZero(attenuationList):
-                    return attenuationList[0], 0
-                choiceByCheckingNoise = self.checkThreshold(attenuationList, task, partitions, considerDistance=False)
-                # if choiceByCheckingNoise[0]:
-                #     print(red_bg(f"choiceByCheckingNoise: {choiceByCheckingNoise[0][1].id, choiceByCheckingNoise[1]}"))
-                # else:
-                #     print(red_bg(f"choiceByCheckingNoise: {choiceByCheckingNoise[0], choiceByCheckingNoise[1]}"))
-                return choiceByCheckingNoise
-
-            elif method == Config.NoiseMethod.PROPOSED_METHOD2:
-                if self.areAttenuationsZero(attenuationList):
-                    return attenuationList[0], 0
-                choiceByCheckingNoise = self.checkThreshold(attenuationList, task, partitions, considerDistance=True)
-                # print(red_bg(self.checkThreshold(attenuationList, task, partitions)))
-                return choiceByCheckingNoise
-
-            elif method == Config.NoiseMethod.RANDOM_CHOICE:
-                return self.randomMethod(attenuationList, task, partitions)
-
-            elif method == Config.NoiseMethod.FIRST_CHOICE:
-                return self.firstChoiceMethod(attenuationList, task, partitions)
-
-            elif method == Config.NoiseMethod.MIN_DISTANCE:
-                return self.minDistanceMethod(attenuationList, task, partitions)
-
-    def firstChoiceMethod(self, attenuationList, task, partitions):
-        if attenuationList[0][2] != 0:
-            plr_result = self.calcPlr(attenuationList, attenuationList[0][2], task, partitions)
-            return attenuationList[0], plr_result
-        else:
-            return attenuationList[0], 0
-
-    def areAttenuationsZero(self, attenuationList):
-        isThereAnyNonZero = False
-        for i in range(0, len(attenuationList)):
-            if attenuationList[i][1] != 0:
-                isThereAnyNonZero = True
-
-        return not isThereAnyNonZero
-
-    def randomMethod(self, attenuationList, task, partitions):
-        valid_entries = self.calcValidEntries(attenuationList, task, partitions)
-        # print(f"valid_entries:{valid_entries}")
-        return random.choice(valid_entries)
-
-    def calcValidEntries(self, attenuationList, task, partitions):
-        valid_entries = []
-
-        for i in range(0, len(attenuationList)):
-            if attenuationList[i][2] != 0:
-                plr_result = self.calcPlr(attenuationList, attenuationList[i][2], task, partitions)
-
-                valid_entries.append((attenuationList[i], plr_result))
-            else:
-                valid_entries.append((attenuationList[i], 0))
-
-        return valid_entries
-
-    def calcSNR(self, attenuationList, attenuation, task, partitions):
-        Pr = Cnf().VehicleConfig().HIGH_TRANSMISSION_POWER - attenuation
-        avgNoise = FinalChoiceByAttenuationNoise().calcAvgNoise(attenuationList, task, partitions)
-
-        SNR = Pr - avgNoise
-        # print(red_bg(f"Pr: {Pr}, avgNoise: {avgNoise}, SNR: {SNR}"))
-
-        return SNR
-
-    def calcPlr(self, attenuationList, attenuation, task, partitions):
-
-        SNR = self.calcSNR(attenuationList, attenuation, task, partitions)
-        ber_result = FinalChoiceByAttenuationNoise().calculate_ber_bpsk(SNR)
-        plr_result = FinalChoiceByAttenuationNoise().calculate_packet_loss(ber_result, 100)
-
-        return plr_result
-
-    def checkThreshold(self, attenuationList, task, partitions, considerDistance):
-        valid_entries = []
-        not_valids = []
-
-        # print(red_bg(attenuationList))
-        for i in range(0, len(attenuationList)):
-            if attenuationList[i][2] != 0:
-                # todo : add transmit power check !
-                # TRANSMISSION_LIST = Cnf.VehicleConfig.TRANSMISSION_LIST
-                # for j in range(0, len(TRANSMISSION_LIST)):
-                plr_result = self.calcPlr(attenuationList, attenuationList[i][2], task, partitions)
-
-                # print(red_bg(f"Pr:{Pr}, attenuation: {attenuationList[i][2]}, avgNoise:{avgNoise}, SNR:{SNR}, ber_result:{ber_result}, plr_result:{plr_result}"))
-                if plr_result < FinalChoiceByAttenuationNoise().THERESHOLD:
-                    valid_entries.append((attenuationList[i], plr_result))
-                    # break
-                else:
-                    not_valids.append((attenuationList[i], plr_result))
-
-        if valid_entries:
-            if considerDistance:
-                # print("teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeestttttttttttttttttttttttttttttttttt")
-                return self.findMinValidEntries(valid_entries)
-
-            else:
-                best_entry = min(valid_entries, key=lambda x: x[1])
-                # print(f"best_entry: {best_entry}")
-                return best_entry
-        else:
-            for i in range(0, len(attenuationList)):
-                if attenuationList[i][2] == 0:
-                    return attenuationList[i], 0
-            # print(red_bg(f"not_valids : {not_valids}"))
-            return None, None
-
-    def calculate_ber_bpsk(self, snr_db):
-        """
-        Calculate the Bit Error Rate (BER) for BPSK modulation given a single SNR in dB.
-
-        Parameters:
-        snr_db (float): Signal-to-Noise Ratio (SNR) in dB.
-
-        Returns:
-        float: BER value.
-        """
-        snr_linear = 10 ** (snr_db / 10)  # Convert SNR from dB to linear scale
-        ber = 0.5 * erfc(np.sqrt(2 * snr_linear))  # BER formula for BPSK
-        return ber
-
-    def calculate_packet_loss(self, ber, packet_size):
-        """Calculate packet loss probability given BER and packet size (in bits)."""
-        plr = 1 - (1 - ber) ** packet_size  # Formula for Packet Loss Rate
-        return plr * 100
-
-    def calcAvgNoise(self, attenuationList, task, partitions) -> float:
-        noises = []
-        for i in range(0, len(attenuationList)):
-            intersections = UtilsFunc().find_line_intersections(
-                (task.creator.x, task.creator.y),
-                (attenuationList[i][1].x, attenuationList[i][1].y), partitions)
-
-            for k in range(0, len(intersections)):
-                noises.append(intersections[k].trafficStatus.random_noise())
-
-        finalNoise = 0
-        for j in range(0, len(noises)):
-            finalNoise += noises[j]
-        finalNoise = finalNoise / len(noises)
-
-        return finalNoise
-
-    def minDistanceMethod(self, attenuationList, task, partitions):
-        x = self.minDistanceItem(attenuationList)
-        data = x[0]
-        distance = x[1]
-
-        # print(f"data : {data}, distance : {distance}")
-        if data[2] != 0:
-            plr_result = self.calcPlr(attenuationList, data[2], task, partitions)
-            return data, plr_result
-        else:
-            return data, 0
-
-    def calcMinDistance(self, zone, offloadedDevice):
-        zoneX = zone.x
-        zoneY = zone.y
-        offloadedDeviceX = offloadedDevice.x
-        offloadedDeviceY = offloadedDevice.y
-        # print(red_bg(f"zoneX: {zoneX}, zoneY: {zoneY}, offloadedDeviceX: {offloadedDeviceX}, offloadedDeviceY: {offloadedDeviceY}"))
-        distance = math.sqrt((offloadedDeviceX - zoneX) ** 2 + (offloadedDeviceY - zoneY) ** 2)
-        return distance
-
-    def minDistanceItem(self, attenuationList):
-        distances = []
-        for i in range(0, len(attenuationList)):
-            distances.append(
-                (attenuationList[i], self.calcMinDistance(attenuationList[i][0].zone, attenuationList[i][1])))
-        min_distance = min(distances, key=lambda x: x[1])
-        return min_distance
-
-    def findMinValidEntries(self, valid_entries):
-        distances = []
-        for i in range(0, len(valid_entries)):
-            distances.append(
-                (valid_entries[i], self.calcMinDistance(valid_entries[i][0][0].zone, valid_entries[i][0][1])))
-            # print(red_bg(f"distances : {distances[i][1]}"))
-
-        min_distance = min(distances, key=lambda x: x[1])
-        return min_distance[0]
-
-
-if __name__ == "__main__":
-    # Example usage:
-    snr_input = float(input("Enter SNR (in dB): "))  # User inputs SNR value
-    ber_result = FinalChoiceByAttenuationNoise().calculate_ber_bpsk(snr_input)
-    plr_result = FinalChoiceByAttenuationNoise().calculate_packet_loss(ber_result, 1000)
-
-    print(f"SNR = {snr_input} dB → BER = {ber_result:.16f}")
-    print(f"PLR = {plr_result:.16f}%")
Index: requirements.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/requirements.txt b/requirements.txt
deleted file mode 100644
--- a/requirements.txt	
+++ /dev/null	
@@ -1,32 +0,0 @@
-numpy==1.26.4
-matplotlib==3.9.2
-torch==2.0.1
-
-ipython~=8.31.0
-Pillow~=9.5.0
-pip~=22.3.1
-tornado~=6.4.2
-Jinja2~=3.1.3
-setuptools~=65.5.0
-pytz~=2024.2
-sympy~=1.13.1
-mpmath~=1.3.0
-decorator~=5.1.1
-tqdm~=4.66.5
-scipy~=1.15.1
-torchvision~=0.20.1+cu118
-psutil~=6.1.1
-urllib3~=2.2.1
-MarkupSafe~=2.1.5
-six~=1.16.0
-python-dateutil~=2.8.2
-networkx~=3.2.1
-pandas~=2.2.3
-contourpy~=1.0.7
-fonttools~=4.40.0
-packaging~=23.1
-pyparsing~=3.0.9
-cycler~=0.11.0
-ipykernel~=6.29.5
-kiwisolver~=1.4.4
-traci~=1.21.0
\ No newline at end of file
Index: controllers/finalCheck2.py
===================================================================
diff --git a/controllers/finalCheck2.py b/controllers/finalCheck2.py
deleted file mode 100644
--- a/controllers/finalCheck2.py	
+++ /dev/null	
@@ -1,225 +0,0 @@
-import math
-import random
-
-import numpy as np
-from scipy.special import erfc
-
-from NoiseConfigs.utilsFunctions import UtilsFunc
-from config import Config
-from task_and_user_generator import Config as Cnf
-
-
-def red_bg(text):
-    return f"\033[41m{text}\033[0m"
-
-
-class FinalChoiceByAttenuationNoise:
-    # THERESHOLD = 0.0001
-    THERESHOLD = 20
-
-    def makeFinalChoice(self, attenuationList, task, partitions, method):
-        if len(attenuationList) > 0:
-
-            if method == Config.NoiseMethod.PROPOSED_METHOD:
-                # check if all values are 0 offload it locally
-                if self.areAttenuationsZero(attenuationList):
-                    return attenuationList[0], 0
-                choiceByCheckingNoise = self.checkThreshold(attenuationList, task, partitions, considerDistance=False)
-                # print(red_bg(self.checkThreshold(attenuationList, task, partitions)))
-                return choiceByCheckingNoise
-
-            elif method == Config.NoiseMethod.PROPOSED_METHOD2:
-                if self.areAttenuationsZero(attenuationList):
-                    return attenuationList[0], 0
-                choiceByCheckingNoise = self.checkThreshold(attenuationList, task, partitions, considerDistance=True)
-                # print(red_bg(self.checkThreshold(attenuationList, task, partitions)))
-                return choiceByCheckingNoise
-
-            elif method == Config.NoiseMethod.RANDOM_CHOICE:
-                return self.randomMethod(attenuationList, task, partitions)
-
-            elif method == Config.NoiseMethod.FIRST_CHOICE:
-                return self.firstChoiceMethod(attenuationList, task, partitions)
-
-            elif method == Config.NoiseMethod.MIN_DISTANCE:
-                return self.minDistanceMethod(attenuationList, task, partitions)
-
-    def firstChoiceMethod(self, attenuationList, task, partitions):
-        if attenuationList[0][2] != 0:
-            plr_result = self.calcPlr(attenuationList, attenuationList[0][2], task, partitions)
-            return attenuationList[0], plr_result
-        else:
-            return attenuationList[0], 0
-
-    def areAttenuationsZero(self, attenuationList):
-        isThereAnyNonZero = False
-        for i in range(0, len(attenuationList)):
-            if attenuationList[i][1] != 0:
-                isThereAnyNonZero = True
-
-        return not isThereAnyNonZero
-
-    def randomMethod(self, attenuationList, task, partitions):
-        valid_entries = self.calcValidEntries(attenuationList, task, partitions)
-        # print(f"valid_entries:{valid_entries}")
-        return random.choice(valid_entries)
-
-    def calcValidEntries(self, attenuationList, task, partitions):
-        valid_entries = []
-
-        for i in range(0, len(attenuationList)):
-            if attenuationList[i][2] != 0:
-                plr_result = self.calcPlr(attenuationList, attenuationList[i][2], task, partitions)
-
-                valid_entries.append((attenuationList[i], plr_result))
-            else:
-                valid_entries.append((attenuationList[i], 0))
-
-        return valid_entries
-
-    def calcSNR(self, attenuationList, attenuation, task, partitions):
-        transmissionPower = Cnf.VehicleConfig.HIGH_TRANSMISSION_POWER
-
-        # note : removed! it will be use in another project
-        # if TransmissionType == Cnf.VehicleConfig.HIGH_TRANSMISSION_POWER:
-        #     transmissionPower = Cnf.VehicleConfig.HIGH_TRANSMISSION_POWER
-        # elif TransmissionType == Cnf.VehicleConfig.MEDIUM_TRANSMISSION_POWER:
-        #     transmissionPower = Cnf.VehicleConfig.MEDIUM_TRANSMISSION_POWER
-        # elif TransmissionType == Cnf.VehicleConfig.LOW_TRANSMISSION_POWER:
-        #     transmissionPower = Cnf.VehicleConfig.LOW_TRANSMISSION_POWER
-
-        Pr = transmissionPower - attenuation
-        avgNoise = FinalChoiceByAttenuationNoise().calcAvgNoise(attenuationList, task, partitions)
-
-        SNR = Pr - avgNoise
-        print(red_bg(f"Pr: {Pr}, avgNoise: {avgNoise}, SNR: {SNR}"))
-        return SNR
-
-    def calcPlr(self, attenuationList, attenuation, task, partitions):
-
-        SNR = self.calcSNR(attenuationList, attenuation, task, partitions)
-        ber_result = FinalChoiceByAttenuationNoise().calculate_ber_bpsk(SNR)
-        plr_result = FinalChoiceByAttenuationNoise().calculate_packet_loss(ber_result, 100)
-
-        return plr_result
-
-    def checkThreshold(self, attenuationList, task, partitions, considerDistance):
-        valid_entries = []
-
-        for i in range(0, len(attenuationList)):
-            if attenuationList[i][2] != 0:
-                # todo : add transmit power check ! note: removed!
-                # TRANSMISSION_LIST = Cnf.VehicleConfig.TRANSMISSION_LIST
-                # for j in range(0, len(TRANSMISSION_LIST)):
-                #     plr_result = self.calcPlr(attenuationList, attenuationList[i][2], task, partitions, TRANSMISSION_LIST[i])
-                #
-                #     # print(red_bg(f"Pr:{Pr}, attenuation: {attenuationList[i][2]}, avgNoise:{avgNoise}, SNR:{SNR}, ber_result:{ber_result}, plr_result:{plr_result}"))
-                #     if plr_result < FinalChoiceByAttenuationNoise().THERESHOLD:
-                #         valid_entries.append((attenuationList[i], plr_result))
-                #         break
-
-                plr_result = self.calcPlr(attenuationList, attenuationList[i][2], task, partitions)
-                # print(red_bg(f"Pr:{Pr}, attenuation: {attenuationList[i][2]}, avgNoise:{avgNoise}, SNR:{SNR}, ber_result:{ber_result}, plr_result:{plr_result}"))
-                if plr_result < FinalChoiceByAttenuationNoise().THERESHOLD:
-                    valid_entries.append((attenuationList[i], plr_result))
-
-        if valid_entries:
-            if considerDistance:
-                print("teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeestttttttttttttttttttttttttttttttttt")
-                return self.findMinValidEntries(valid_entries)
-
-
-            else:
-                best_entry = min(valid_entries, key=lambda x: x[1])
-                # print(f"best_entry: {best_entry}")
-                return best_entry
-        else:
-            for i in range(0, len(attenuationList)):
-                if attenuationList[i][2] == 0:
-                    return attenuationList[i], 0
-            return None, None
-
-    def calculate_ber_bpsk(self, snr_db):
-        """
-        Calculate the Bit Error Rate (BER) for BPSK modulation given a single SNR in dB.
-
-        Parameters:
-        snr_db (float): Signal-to-Noise Ratio (SNR) in dB.
-
-        Returns:
-        float: BER value.
-        """
-        snr_linear = 10 ** (snr_db / 10)  # Convert SNR from dB to linear scale
-        ber = 0.5 * erfc(np.sqrt(2 * snr_linear))  # BER formula for BPSK
-        return ber
-
-    def calculate_packet_loss(self, ber, packet_size):
-        """Calculate packet loss probability given BER and packet size (in bits)."""
-        plr = 1 - (1 - ber) ** packet_size  # Formula for Packet Loss Rate
-        return plr * 100
-
-    def calcAvgNoise(self, attenuationList, task, partitions) -> float:
-        noises = []
-        for i in range(0, len(attenuationList)):
-            intersections = UtilsFunc().find_line_intersections(
-                (task.creator.x, task.creator.y),
-                (attenuationList[i][1].x, attenuationList[i][1].y), partitions)
-
-            for k in range(0, len(intersections)):
-                noises.append(intersections[k].trafficStatus.random_noise())
-
-        finalNoise = 0
-        for j in range(0, len(noises)):
-            finalNoise += noises[j]
-        finalNoise = finalNoise / len(noises)
-
-        return finalNoise
-
-    def minDistanceMethod(self, attenuationList, task, partitions):
-        x = self.minDistanceItem(attenuationList)
-        data = x[0]
-        distance = x[1]
-
-        # print(f"data : {data}, distance : {distance}")
-        if data[2] != 0:
-            plr_result = self.calcPlr(attenuationList, data[2], task, partitions)
-            return data, plr_result
-        else:
-            return data, 0
-
-    def calcMinDistance(self, zone, offloadedDevice):
-        zoneX = zone.x
-        zoneY = zone.y
-        offloadedDeviceX = offloadedDevice.x
-        offloadedDeviceY = offloadedDevice.y
-        # print(red_bg(f"zoneX: {zoneX}, zoneY: {zoneY}, offloadedDeviceX: {offloadedDeviceX}, offloadedDeviceY: {offloadedDeviceY}"))
-        distance = math.sqrt((offloadedDeviceX - zoneX) ** 2 + (offloadedDeviceY - zoneY) ** 2)
-        return distance
-
-    def minDistanceItem(self, attenuationList):
-        distances = []
-        for i in range(0, len(attenuationList)):
-            distances.append(
-                (attenuationList[i], self.calcMinDistance(attenuationList[i][0].zone, attenuationList[i][1])))
-        min_distance = min(distances, key=lambda x: x[1])
-        return min_distance
-
-    def findMinValidEntries(self, valid_entries):
-        distances = []
-        for i in range(0, len(valid_entries)):
-            distances.append(
-                (valid_entries[i], self.calcMinDistance(valid_entries[i][0][0].zone, valid_entries[i][0][1])))
-            print(red_bg(f"distances : {distances[i][1]}"))
-
-        min_distance = min(distances, key=lambda x: x[1])
-        return min_distance[0]
-
-
-if __name__ == "__main__":
-    # Example usage:
-    snr_input = float(input("Enter SNR (in dB): "))  # User inputs SNR value
-    ber_result = FinalChoiceByAttenuationNoise().calculate_ber_bpsk(snr_input)
-    plr_result = FinalChoiceByAttenuationNoise().calculate_packet_loss(ber_result, 1000)
-
-    print(f"SNR = {snr_input} dB → BER = {ber_result:.16f}")
-    print(f"PLR = {plr_result:.16f}%")
Index: NoiseConfigs/HexPartitionGenerator.py
===================================================================
diff --git a/NoiseConfigs/HexPartitionGenerator.py b/NoiseConfigs/HexPartitionGenerator.py
deleted file mode 100644
--- a/NoiseConfigs/HexPartitionGenerator.py	
+++ /dev/null	
@@ -1,97 +0,0 @@
-import math
-import random
-from noiseConfigGeneralAttribute import NoiseConfigGeneralAttribute
-
-class CodeGenerator:
-    def __init__(self, width, height, radius):
-        self.width = width
-        self.height = height
-        self.radius = radius
-        self.hex_height = 2 * radius
-        self.hex_width = math.sqrt(3) * radius
-        self.row_spacing = 0.75 * self.hex_height
-
-    def generate_partition_class(self, index, center_x, center_y):
-        rain_status = random.choice(NoiseConfigGeneralAttribute.Rain_options)
-        traffic_status = random.choice(NoiseConfigGeneralAttribute.Traffic_options)
-        urban_status = random.choice(NoiseConfigGeneralAttribute.Urban_options)
-
-        class_name = f"Partition{index}"
-        return f"""
-class {class_name}(Partitions):
-    rainStatus = {rain_status}
-    trafficStatus = {traffic_status}
-    urbanStatus = {urban_status}
-    center_x = {center_x}
-    center_y = {center_y}
-
-    def __init__(self):
-        super().__init__({class_name}.center_x, {class_name}.center_y, {self.radius}, {class_name}.rainStatus, {class_name}.trafficStatus, {class_name}.urbanStatus)
-"""
-
-    def generate_code(self):
-        header = """
-#this file has been generated by HexPartitionGenerator.py
-         
-from NoiseConfigs.noiseConfigGeneralAttribute import NoiseConfigGeneralAttribute
-from noiseConfig import NoiseConfig
-from typing import Optional, Dict
-from utilsFunctions import UtilsFunc
-import random
-
-
-class Partitions:
-    centerX: float
-    centerY: float
-    radius: float
-    rainStatus: Optional[NoiseConfig.RainNoiseConfig]
-    trafficStatus: Optional[NoiseConfig.TrafficNoiseConfig]
-    urbanStatus: Optional[NoiseConfig.UrbanNoiseConfig]
-
-    def __init__(self, centerX, centerY, radius, rainStatus, trafficStatus, urbanStatus):
-        self.centerX = centerX
-        self.centerY = centerY
-        self.radius = radius
-        self.rainStatus = rainStatus
-        self.trafficStatus = trafficStatus
-        self.urbanStatus = urbanStatus
-    
-    def change_rainStatus(self):
-        # todo: maybe need to change this to have a more reasonable environment
-        self.rainStatus = random.choice(NoiseConfigGeneralAttribute.Rain_options)
-
-    def update_traffic_status(self, traffic_statuses: Dict["Partitions", NoiseConfig.TrafficNoiseConfig]):
-        if self in traffic_statuses:
-            self.trafficStatus = traffic_statuses[self]
-"""
-
-        classes = []
-        index = 1
-
-        max_rows = int(math.ceil(self.height / self.row_spacing))
-        max_cols = int(math.ceil(self.width / self.hex_width))
-
-        for row in range(0, max_rows + 1):
-            row_is_even = (row % 2 == 0)
-            start_x = 0.0 if row_is_even else (self.hex_width / 2.0)
-
-            center_y = row * self.row_spacing
-
-            for col in range(0, max_cols + 1):
-                center_x = start_x + col * self.hex_width
-                classes.append(self.generate_partition_class(index, center_x, center_y))
-                index += 1
-
-        return header + "\n".join(classes)
-
-# Example usage
-width = 4300
-height = 3400
-radius = 150
-generator = CodeGenerator(width, height, radius)
-code = generator.generate_code()
-
-with open("generated_hex_partitions.py", "w") as file:
-    file.write(code)
-
-print("Code generated and saved to generated_hex_partitions.py")
Index: NoiseConfigs/NoUse/partitionNoiseMap(handmade).py
===================================================================
diff --git a/NoiseConfigs/NoUse/partitionNoiseMap(handmade).py b/NoiseConfigs/NoUse/partitionNoiseMap(handmade).py
deleted file mode 100644
--- a/NoiseConfigs/NoUse/partitionNoiseMap(handmade).py	
+++ /dev/null	
@@ -1,86 +0,0 @@
-from typing import Optional
-
-from NoiseConfigs.noiseConfig import NoiseConfig
-
-
-class Partitions:
-    startX:int
-    startY: int
-    endX: int
-    endY: int
-    rainStatus: Optional[NoiseConfig.RainNoiseConfig]
-    trafficStatus: Optional[NoiseConfig.TrafficNoiseConfig]
-    urbanStatus: Optional[NoiseConfig.UrbanNoiseConfig]
-
-    def __init__(self, startX, startY, endX, endY, rainStatus, trafficStatus, urbanStatus):
-        self.startX = startX
-        self.startY = startY
-        self.endX = endX
-        self.endY = endY
-        self.rainStatus = rainStatus
-        self.trafficStatus = trafficStatus
-        self.urbanStatus = urbanStatus
-
-class Partition11(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-
-    super().__init__(0, 0, 410, 322, rainStatus, trafficStatus, urbanStatus)
-
-
-class Partition12(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-
-    super().__init__(410, 0, 820, 322, rainStatus, trafficStatus, urbanStatus)
-
-class Partition13(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-
-    super().__init__(820, 0, 1230, 322, rainStatus, trafficStatus, urbanStatus)
-
-class Partition21(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-
-    super().__init__(0, 322, 410, 644, rainStatus, trafficStatus, urbanStatus)
-
-class Partition22(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-
-    super().__init__(410, 322, 820, 644, rainStatus, trafficStatus, urbanStatus)
-
-class Partition23(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-
-    super().__init__(820, 322, 1230, 644, rainStatus, trafficStatus, urbanStatus)
-
-class Partition31(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-
-    super().__init__(0, 644, 410, 966, rainStatus, trafficStatus, urbanStatus)
-
-class Partition32(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-
-    super().__init__(410, 644, 820, 966, rainStatus, trafficStatus, urbanStatus)
-
-class Partition33(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-
-    super().__init__(820, 644, 1230, 966, rainStatus, trafficStatus, urbanStatus)
Index: NoiseConfigs/generated_hex_partitions.py
===================================================================
diff --git a/NoiseConfigs/generated_hex_partitions.py b/NoiseConfigs/generated_hex_partitions.py
deleted file mode 100644
--- a/NoiseConfigs/generated_hex_partitions.py	
+++ /dev/null	
@@ -1,3398 +0,0 @@
-
-#this file has been generated by HexPartitionGenerator.py
-         
-from NoiseConfigs.noiseConfigGeneralAttribute import NoiseConfigGeneralAttribute
-from noiseConfig import NoiseConfig
-from typing import Optional, Dict
-from utilsFunctions import UtilsFunc
-import random
-
-
-class Partitions:
-    centerX: float
-    centerY: float
-    radius: float
-    rainStatus: Optional[NoiseConfig.RainNoiseConfig]
-    trafficStatus: Optional[NoiseConfig.TrafficNoiseConfig]
-    urbanStatus: Optional[NoiseConfig.UrbanNoiseConfig]
-
-    def __init__(self, centerX, centerY, radius, rainStatus, trafficStatus, urbanStatus):
-        self.centerX = centerX
-        self.centerY = centerY
-        self.radius = radius
-        self.rainStatus = rainStatus
-        self.trafficStatus = trafficStatus
-        self.urbanStatus = urbanStatus
-    
-    def change_rainStatus(self):
-        # todo: maybe need to change this to have a more reasonable environment
-        self.rainStatus = random.choice(NoiseConfigGeneralAttribute.Rain_options)
-
-    def update_traffic_status(self, traffic_statuses: Dict["Partitions", NoiseConfig.TrafficNoiseConfig]):
-        if self in traffic_statuses:
-            self.trafficStatus = traffic_statuses[self]
-
-class Partition1(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 0.0
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition1.center_x, Partition1.center_y, 150, Partition1.rainStatus, Partition1.trafficStatus, Partition1.urbanStatus)
-
-
-class Partition2(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 259.8076211353316
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition2.center_x, Partition2.center_y, 150, Partition2.rainStatus, Partition2.trafficStatus, Partition2.urbanStatus)
-
-
-class Partition3(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 519.6152422706632
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition3.center_x, Partition3.center_y, 150, Partition3.rainStatus, Partition3.trafficStatus, Partition3.urbanStatus)
-
-
-class Partition4(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 779.4228634059948
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition4.center_x, Partition4.center_y, 150, Partition4.rainStatus, Partition4.trafficStatus, Partition4.urbanStatus)
-
-
-class Partition5(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1039.2304845413264
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition5.center_x, Partition5.center_y, 150, Partition5.rainStatus, Partition5.trafficStatus, Partition5.urbanStatus)
-
-
-class Partition6(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1299.038105676658
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition6.center_x, Partition6.center_y, 150, Partition6.rainStatus, Partition6.trafficStatus, Partition6.urbanStatus)
-
-
-class Partition7(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1558.8457268119896
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition7.center_x, Partition7.center_y, 150, Partition7.rainStatus, Partition7.trafficStatus, Partition7.urbanStatus)
-
-
-class Partition8(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1818.6533479473212
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition8.center_x, Partition8.center_y, 150, Partition8.rainStatus, Partition8.trafficStatus, Partition8.urbanStatus)
-
-
-class Partition9(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2078.460969082653
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition9.center_x, Partition9.center_y, 150, Partition9.rainStatus, Partition9.trafficStatus, Partition9.urbanStatus)
-
-
-class Partition10(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2338.2685902179846
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition10.center_x, Partition10.center_y, 150, Partition10.rainStatus, Partition10.trafficStatus, Partition10.urbanStatus)
-
-
-class Partition11(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2598.076211353316
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition11.center_x, Partition11.center_y, 150, Partition11.rainStatus, Partition11.trafficStatus, Partition11.urbanStatus)
-
-
-class Partition12(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2857.8838324886474
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition12.center_x, Partition12.center_y, 150, Partition12.rainStatus, Partition12.trafficStatus, Partition12.urbanStatus)
-
-
-class Partition13(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3117.691453623979
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition13.center_x, Partition13.center_y, 150, Partition13.rainStatus, Partition13.trafficStatus, Partition13.urbanStatus)
-
-
-class Partition14(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3377.499074759311
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition14.center_x, Partition14.center_y, 150, Partition14.rainStatus, Partition14.trafficStatus, Partition14.urbanStatus)
-
-
-class Partition15(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3637.3066958946424
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition15.center_x, Partition15.center_y, 150, Partition15.rainStatus, Partition15.trafficStatus, Partition15.urbanStatus)
-
-
-class Partition16(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3897.114317029974
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition16.center_x, Partition16.center_y, 150, Partition16.rainStatus, Partition16.trafficStatus, Partition16.urbanStatus)
-
-
-class Partition17(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4156.921938165306
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition17.center_x, Partition17.center_y, 150, Partition17.rainStatus, Partition17.trafficStatus, Partition17.urbanStatus)
-
-
-class Partition18(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4416.729559300637
-    center_y = 0.0
-
-    def __init__(self):
-        super().__init__(Partition18.center_x, Partition18.center_y, 150, Partition18.rainStatus, Partition18.trafficStatus, Partition18.urbanStatus)
-
-
-class Partition19(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 129.9038105676658
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition19.center_x, Partition19.center_y, 150, Partition19.rainStatus, Partition19.trafficStatus, Partition19.urbanStatus)
-
-
-class Partition20(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 389.7114317029974
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition20.center_x, Partition20.center_y, 150, Partition20.rainStatus, Partition20.trafficStatus, Partition20.urbanStatus)
-
-
-class Partition21(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 649.519052838329
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition21.center_x, Partition21.center_y, 150, Partition21.rainStatus, Partition21.trafficStatus, Partition21.urbanStatus)
-
-
-class Partition22(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 909.3266739736606
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition22.center_x, Partition22.center_y, 150, Partition22.rainStatus, Partition22.trafficStatus, Partition22.urbanStatus)
-
-
-class Partition23(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1169.1342951089923
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition23.center_x, Partition23.center_y, 150, Partition23.rainStatus, Partition23.trafficStatus, Partition23.urbanStatus)
-
-
-class Partition24(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1428.9419162443237
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition24.center_x, Partition24.center_y, 150, Partition24.rainStatus, Partition24.trafficStatus, Partition24.urbanStatus)
-
-
-class Partition25(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1688.7495373796555
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition25.center_x, Partition25.center_y, 150, Partition25.rainStatus, Partition25.trafficStatus, Partition25.urbanStatus)
-
-
-class Partition26(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1948.557158514987
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition26.center_x, Partition26.center_y, 150, Partition26.rainStatus, Partition26.trafficStatus, Partition26.urbanStatus)
-
-
-class Partition27(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2208.3647796503187
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition27.center_x, Partition27.center_y, 150, Partition27.rainStatus, Partition27.trafficStatus, Partition27.urbanStatus)
-
-
-class Partition28(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2468.1724007856506
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition28.center_x, Partition28.center_y, 150, Partition28.rainStatus, Partition28.trafficStatus, Partition28.urbanStatus)
-
-
-class Partition29(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2727.980021920982
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition29.center_x, Partition29.center_y, 150, Partition29.rainStatus, Partition29.trafficStatus, Partition29.urbanStatus)
-
-
-class Partition30(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2987.7876430563133
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition30.center_x, Partition30.center_y, 150, Partition30.rainStatus, Partition30.trafficStatus, Partition30.urbanStatus)
-
-
-class Partition31(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3247.595264191645
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition31.center_x, Partition31.center_y, 150, Partition31.rainStatus, Partition31.trafficStatus, Partition31.urbanStatus)
-
-
-class Partition32(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3507.402885326977
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition32.center_x, Partition32.center_y, 150, Partition32.rainStatus, Partition32.trafficStatus, Partition32.urbanStatus)
-
-
-class Partition33(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3767.2105064623083
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition33.center_x, Partition33.center_y, 150, Partition33.rainStatus, Partition33.trafficStatus, Partition33.urbanStatus)
-
-
-class Partition34(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4027.0181275976397
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition34.center_x, Partition34.center_y, 150, Partition34.rainStatus, Partition34.trafficStatus, Partition34.urbanStatus)
-
-
-class Partition35(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4286.825748732971
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition35.center_x, Partition35.center_y, 150, Partition35.rainStatus, Partition35.trafficStatus, Partition35.urbanStatus)
-
-
-class Partition36(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4546.633369868303
-    center_y = 225.0
-
-    def __init__(self):
-        super().__init__(Partition36.center_x, Partition36.center_y, 150, Partition36.rainStatus, Partition36.trafficStatus, Partition36.urbanStatus)
-
-
-class Partition37(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 0.0
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition37.center_x, Partition37.center_y, 150, Partition37.rainStatus, Partition37.trafficStatus, Partition37.urbanStatus)
-
-
-class Partition38(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 259.8076211353316
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition38.center_x, Partition38.center_y, 150, Partition38.rainStatus, Partition38.trafficStatus, Partition38.urbanStatus)
-
-
-class Partition39(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 519.6152422706632
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition39.center_x, Partition39.center_y, 150, Partition39.rainStatus, Partition39.trafficStatus, Partition39.urbanStatus)
-
-
-class Partition40(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 779.4228634059948
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition40.center_x, Partition40.center_y, 150, Partition40.rainStatus, Partition40.trafficStatus, Partition40.urbanStatus)
-
-
-class Partition41(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1039.2304845413264
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition41.center_x, Partition41.center_y, 150, Partition41.rainStatus, Partition41.trafficStatus, Partition41.urbanStatus)
-
-
-class Partition42(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1299.038105676658
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition42.center_x, Partition42.center_y, 150, Partition42.rainStatus, Partition42.trafficStatus, Partition42.urbanStatus)
-
-
-class Partition43(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1558.8457268119896
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition43.center_x, Partition43.center_y, 150, Partition43.rainStatus, Partition43.trafficStatus, Partition43.urbanStatus)
-
-
-class Partition44(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1818.6533479473212
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition44.center_x, Partition44.center_y, 150, Partition44.rainStatus, Partition44.trafficStatus, Partition44.urbanStatus)
-
-
-class Partition45(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2078.460969082653
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition45.center_x, Partition45.center_y, 150, Partition45.rainStatus, Partition45.trafficStatus, Partition45.urbanStatus)
-
-
-class Partition46(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2338.2685902179846
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition46.center_x, Partition46.center_y, 150, Partition46.rainStatus, Partition46.trafficStatus, Partition46.urbanStatus)
-
-
-class Partition47(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2598.076211353316
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition47.center_x, Partition47.center_y, 150, Partition47.rainStatus, Partition47.trafficStatus, Partition47.urbanStatus)
-
-
-class Partition48(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2857.8838324886474
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition48.center_x, Partition48.center_y, 150, Partition48.rainStatus, Partition48.trafficStatus, Partition48.urbanStatus)
-
-
-class Partition49(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3117.691453623979
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition49.center_x, Partition49.center_y, 150, Partition49.rainStatus, Partition49.trafficStatus, Partition49.urbanStatus)
-
-
-class Partition50(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3377.499074759311
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition50.center_x, Partition50.center_y, 150, Partition50.rainStatus, Partition50.trafficStatus, Partition50.urbanStatus)
-
-
-class Partition51(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3637.3066958946424
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition51.center_x, Partition51.center_y, 150, Partition51.rainStatus, Partition51.trafficStatus, Partition51.urbanStatus)
-
-
-class Partition52(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3897.114317029974
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition52.center_x, Partition52.center_y, 150, Partition52.rainStatus, Partition52.trafficStatus, Partition52.urbanStatus)
-
-
-class Partition53(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 4156.921938165306
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition53.center_x, Partition53.center_y, 150, Partition53.rainStatus, Partition53.trafficStatus, Partition53.urbanStatus)
-
-
-class Partition54(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 4416.729559300637
-    center_y = 450.0
-
-    def __init__(self):
-        super().__init__(Partition54.center_x, Partition54.center_y, 150, Partition54.rainStatus, Partition54.trafficStatus, Partition54.urbanStatus)
-
-
-class Partition55(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 129.9038105676658
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition55.center_x, Partition55.center_y, 150, Partition55.rainStatus, Partition55.trafficStatus, Partition55.urbanStatus)
-
-
-class Partition56(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 389.7114317029974
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition56.center_x, Partition56.center_y, 150, Partition56.rainStatus, Partition56.trafficStatus, Partition56.urbanStatus)
-
-
-class Partition57(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 649.519052838329
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition57.center_x, Partition57.center_y, 150, Partition57.rainStatus, Partition57.trafficStatus, Partition57.urbanStatus)
-
-
-class Partition58(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 909.3266739736606
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition58.center_x, Partition58.center_y, 150, Partition58.rainStatus, Partition58.trafficStatus, Partition58.urbanStatus)
-
-
-class Partition59(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1169.1342951089923
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition59.center_x, Partition59.center_y, 150, Partition59.rainStatus, Partition59.trafficStatus, Partition59.urbanStatus)
-
-
-class Partition60(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1428.9419162443237
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition60.center_x, Partition60.center_y, 150, Partition60.rainStatus, Partition60.trafficStatus, Partition60.urbanStatus)
-
-
-class Partition61(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1688.7495373796555
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition61.center_x, Partition61.center_y, 150, Partition61.rainStatus, Partition61.trafficStatus, Partition61.urbanStatus)
-
-
-class Partition62(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1948.557158514987
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition62.center_x, Partition62.center_y, 150, Partition62.rainStatus, Partition62.trafficStatus, Partition62.urbanStatus)
-
-
-class Partition63(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2208.3647796503187
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition63.center_x, Partition63.center_y, 150, Partition63.rainStatus, Partition63.trafficStatus, Partition63.urbanStatus)
-
-
-class Partition64(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2468.1724007856506
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition64.center_x, Partition64.center_y, 150, Partition64.rainStatus, Partition64.trafficStatus, Partition64.urbanStatus)
-
-
-class Partition65(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2727.980021920982
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition65.center_x, Partition65.center_y, 150, Partition65.rainStatus, Partition65.trafficStatus, Partition65.urbanStatus)
-
-
-class Partition66(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2987.7876430563133
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition66.center_x, Partition66.center_y, 150, Partition66.rainStatus, Partition66.trafficStatus, Partition66.urbanStatus)
-
-
-class Partition67(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3247.595264191645
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition67.center_x, Partition67.center_y, 150, Partition67.rainStatus, Partition67.trafficStatus, Partition67.urbanStatus)
-
-
-class Partition68(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3507.402885326977
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition68.center_x, Partition68.center_y, 150, Partition68.rainStatus, Partition68.trafficStatus, Partition68.urbanStatus)
-
-
-class Partition69(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3767.2105064623083
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition69.center_x, Partition69.center_y, 150, Partition69.rainStatus, Partition69.trafficStatus, Partition69.urbanStatus)
-
-
-class Partition70(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4027.0181275976397
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition70.center_x, Partition70.center_y, 150, Partition70.rainStatus, Partition70.trafficStatus, Partition70.urbanStatus)
-
-
-class Partition71(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4286.825748732971
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition71.center_x, Partition71.center_y, 150, Partition71.rainStatus, Partition71.trafficStatus, Partition71.urbanStatus)
-
-
-class Partition72(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4546.633369868303
-    center_y = 675.0
-
-    def __init__(self):
-        super().__init__(Partition72.center_x, Partition72.center_y, 150, Partition72.rainStatus, Partition72.trafficStatus, Partition72.urbanStatus)
-
-
-class Partition73(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 0.0
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition73.center_x, Partition73.center_y, 150, Partition73.rainStatus, Partition73.trafficStatus, Partition73.urbanStatus)
-
-
-class Partition74(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 259.8076211353316
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition74.center_x, Partition74.center_y, 150, Partition74.rainStatus, Partition74.trafficStatus, Partition74.urbanStatus)
-
-
-class Partition75(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 519.6152422706632
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition75.center_x, Partition75.center_y, 150, Partition75.rainStatus, Partition75.trafficStatus, Partition75.urbanStatus)
-
-
-class Partition76(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 779.4228634059948
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition76.center_x, Partition76.center_y, 150, Partition76.rainStatus, Partition76.trafficStatus, Partition76.urbanStatus)
-
-
-class Partition77(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1039.2304845413264
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition77.center_x, Partition77.center_y, 150, Partition77.rainStatus, Partition77.trafficStatus, Partition77.urbanStatus)
-
-
-class Partition78(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1299.038105676658
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition78.center_x, Partition78.center_y, 150, Partition78.rainStatus, Partition78.trafficStatus, Partition78.urbanStatus)
-
-
-class Partition79(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1558.8457268119896
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition79.center_x, Partition79.center_y, 150, Partition79.rainStatus, Partition79.trafficStatus, Partition79.urbanStatus)
-
-
-class Partition80(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1818.6533479473212
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition80.center_x, Partition80.center_y, 150, Partition80.rainStatus, Partition80.trafficStatus, Partition80.urbanStatus)
-
-
-class Partition81(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2078.460969082653
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition81.center_x, Partition81.center_y, 150, Partition81.rainStatus, Partition81.trafficStatus, Partition81.urbanStatus)
-
-
-class Partition82(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2338.2685902179846
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition82.center_x, Partition82.center_y, 150, Partition82.rainStatus, Partition82.trafficStatus, Partition82.urbanStatus)
-
-
-class Partition83(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2598.076211353316
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition83.center_x, Partition83.center_y, 150, Partition83.rainStatus, Partition83.trafficStatus, Partition83.urbanStatus)
-
-
-class Partition84(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2857.8838324886474
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition84.center_x, Partition84.center_y, 150, Partition84.rainStatus, Partition84.trafficStatus, Partition84.urbanStatus)
-
-
-class Partition85(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3117.691453623979
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition85.center_x, Partition85.center_y, 150, Partition85.rainStatus, Partition85.trafficStatus, Partition85.urbanStatus)
-
-
-class Partition86(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3377.499074759311
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition86.center_x, Partition86.center_y, 150, Partition86.rainStatus, Partition86.trafficStatus, Partition86.urbanStatus)
-
-
-class Partition87(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3637.3066958946424
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition87.center_x, Partition87.center_y, 150, Partition87.rainStatus, Partition87.trafficStatus, Partition87.urbanStatus)
-
-
-class Partition88(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3897.114317029974
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition88.center_x, Partition88.center_y, 150, Partition88.rainStatus, Partition88.trafficStatus, Partition88.urbanStatus)
-
-
-class Partition89(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4156.921938165306
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition89.center_x, Partition89.center_y, 150, Partition89.rainStatus, Partition89.trafficStatus, Partition89.urbanStatus)
-
-
-class Partition90(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4416.729559300637
-    center_y = 900.0
-
-    def __init__(self):
-        super().__init__(Partition90.center_x, Partition90.center_y, 150, Partition90.rainStatus, Partition90.trafficStatus, Partition90.urbanStatus)
-
-
-class Partition91(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 129.9038105676658
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition91.center_x, Partition91.center_y, 150, Partition91.rainStatus, Partition91.trafficStatus, Partition91.urbanStatus)
-
-
-class Partition92(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 389.7114317029974
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition92.center_x, Partition92.center_y, 150, Partition92.rainStatus, Partition92.trafficStatus, Partition92.urbanStatus)
-
-
-class Partition93(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 649.519052838329
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition93.center_x, Partition93.center_y, 150, Partition93.rainStatus, Partition93.trafficStatus, Partition93.urbanStatus)
-
-
-class Partition94(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 909.3266739736606
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition94.center_x, Partition94.center_y, 150, Partition94.rainStatus, Partition94.trafficStatus, Partition94.urbanStatus)
-
-
-class Partition95(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1169.1342951089923
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition95.center_x, Partition95.center_y, 150, Partition95.rainStatus, Partition95.trafficStatus, Partition95.urbanStatus)
-
-
-class Partition96(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1428.9419162443237
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition96.center_x, Partition96.center_y, 150, Partition96.rainStatus, Partition96.trafficStatus, Partition96.urbanStatus)
-
-
-class Partition97(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1688.7495373796555
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition97.center_x, Partition97.center_y, 150, Partition97.rainStatus, Partition97.trafficStatus, Partition97.urbanStatus)
-
-
-class Partition98(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1948.557158514987
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition98.center_x, Partition98.center_y, 150, Partition98.rainStatus, Partition98.trafficStatus, Partition98.urbanStatus)
-
-
-class Partition99(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2208.3647796503187
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition99.center_x, Partition99.center_y, 150, Partition99.rainStatus, Partition99.trafficStatus, Partition99.urbanStatus)
-
-
-class Partition100(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2468.1724007856506
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition100.center_x, Partition100.center_y, 150, Partition100.rainStatus, Partition100.trafficStatus, Partition100.urbanStatus)
-
-
-class Partition101(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2727.980021920982
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition101.center_x, Partition101.center_y, 150, Partition101.rainStatus, Partition101.trafficStatus, Partition101.urbanStatus)
-
-
-class Partition102(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2987.7876430563133
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition102.center_x, Partition102.center_y, 150, Partition102.rainStatus, Partition102.trafficStatus, Partition102.urbanStatus)
-
-
-class Partition103(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3247.595264191645
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition103.center_x, Partition103.center_y, 150, Partition103.rainStatus, Partition103.trafficStatus, Partition103.urbanStatus)
-
-
-class Partition104(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3507.402885326977
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition104.center_x, Partition104.center_y, 150, Partition104.rainStatus, Partition104.trafficStatus, Partition104.urbanStatus)
-
-
-class Partition105(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3767.2105064623083
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition105.center_x, Partition105.center_y, 150, Partition105.rainStatus, Partition105.trafficStatus, Partition105.urbanStatus)
-
-
-class Partition106(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4027.0181275976397
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition106.center_x, Partition106.center_y, 150, Partition106.rainStatus, Partition106.trafficStatus, Partition106.urbanStatus)
-
-
-class Partition107(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 4286.825748732971
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition107.center_x, Partition107.center_y, 150, Partition107.rainStatus, Partition107.trafficStatus, Partition107.urbanStatus)
-
-
-class Partition108(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4546.633369868303
-    center_y = 1125.0
-
-    def __init__(self):
-        super().__init__(Partition108.center_x, Partition108.center_y, 150, Partition108.rainStatus, Partition108.trafficStatus, Partition108.urbanStatus)
-
-
-class Partition109(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 0.0
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition109.center_x, Partition109.center_y, 150, Partition109.rainStatus, Partition109.trafficStatus, Partition109.urbanStatus)
-
-
-class Partition110(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 259.8076211353316
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition110.center_x, Partition110.center_y, 150, Partition110.rainStatus, Partition110.trafficStatus, Partition110.urbanStatus)
-
-
-class Partition111(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 519.6152422706632
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition111.center_x, Partition111.center_y, 150, Partition111.rainStatus, Partition111.trafficStatus, Partition111.urbanStatus)
-
-
-class Partition112(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 779.4228634059948
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition112.center_x, Partition112.center_y, 150, Partition112.rainStatus, Partition112.trafficStatus, Partition112.urbanStatus)
-
-
-class Partition113(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1039.2304845413264
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition113.center_x, Partition113.center_y, 150, Partition113.rainStatus, Partition113.trafficStatus, Partition113.urbanStatus)
-
-
-class Partition114(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1299.038105676658
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition114.center_x, Partition114.center_y, 150, Partition114.rainStatus, Partition114.trafficStatus, Partition114.urbanStatus)
-
-
-class Partition115(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1558.8457268119896
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition115.center_x, Partition115.center_y, 150, Partition115.rainStatus, Partition115.trafficStatus, Partition115.urbanStatus)
-
-
-class Partition116(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1818.6533479473212
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition116.center_x, Partition116.center_y, 150, Partition116.rainStatus, Partition116.trafficStatus, Partition116.urbanStatus)
-
-
-class Partition117(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2078.460969082653
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition117.center_x, Partition117.center_y, 150, Partition117.rainStatus, Partition117.trafficStatus, Partition117.urbanStatus)
-
-
-class Partition118(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2338.2685902179846
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition118.center_x, Partition118.center_y, 150, Partition118.rainStatus, Partition118.trafficStatus, Partition118.urbanStatus)
-
-
-class Partition119(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2598.076211353316
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition119.center_x, Partition119.center_y, 150, Partition119.rainStatus, Partition119.trafficStatus, Partition119.urbanStatus)
-
-
-class Partition120(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2857.8838324886474
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition120.center_x, Partition120.center_y, 150, Partition120.rainStatus, Partition120.trafficStatus, Partition120.urbanStatus)
-
-
-class Partition121(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3117.691453623979
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition121.center_x, Partition121.center_y, 150, Partition121.rainStatus, Partition121.trafficStatus, Partition121.urbanStatus)
-
-
-class Partition122(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3377.499074759311
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition122.center_x, Partition122.center_y, 150, Partition122.rainStatus, Partition122.trafficStatus, Partition122.urbanStatus)
-
-
-class Partition123(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3637.3066958946424
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition123.center_x, Partition123.center_y, 150, Partition123.rainStatus, Partition123.trafficStatus, Partition123.urbanStatus)
-
-
-class Partition124(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3897.114317029974
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition124.center_x, Partition124.center_y, 150, Partition124.rainStatus, Partition124.trafficStatus, Partition124.urbanStatus)
-
-
-class Partition125(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4156.921938165306
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition125.center_x, Partition125.center_y, 150, Partition125.rainStatus, Partition125.trafficStatus, Partition125.urbanStatus)
-
-
-class Partition126(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4416.729559300637
-    center_y = 1350.0
-
-    def __init__(self):
-        super().__init__(Partition126.center_x, Partition126.center_y, 150, Partition126.rainStatus, Partition126.trafficStatus, Partition126.urbanStatus)
-
-
-class Partition127(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 129.9038105676658
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition127.center_x, Partition127.center_y, 150, Partition127.rainStatus, Partition127.trafficStatus, Partition127.urbanStatus)
-
-
-class Partition128(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 389.7114317029974
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition128.center_x, Partition128.center_y, 150, Partition128.rainStatus, Partition128.trafficStatus, Partition128.urbanStatus)
-
-
-class Partition129(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 649.519052838329
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition129.center_x, Partition129.center_y, 150, Partition129.rainStatus, Partition129.trafficStatus, Partition129.urbanStatus)
-
-
-class Partition130(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 909.3266739736606
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition130.center_x, Partition130.center_y, 150, Partition130.rainStatus, Partition130.trafficStatus, Partition130.urbanStatus)
-
-
-class Partition131(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1169.1342951089923
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition131.center_x, Partition131.center_y, 150, Partition131.rainStatus, Partition131.trafficStatus, Partition131.urbanStatus)
-
-
-class Partition132(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1428.9419162443237
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition132.center_x, Partition132.center_y, 150, Partition132.rainStatus, Partition132.trafficStatus, Partition132.urbanStatus)
-
-
-class Partition133(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1688.7495373796555
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition133.center_x, Partition133.center_y, 150, Partition133.rainStatus, Partition133.trafficStatus, Partition133.urbanStatus)
-
-
-class Partition134(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1948.557158514987
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition134.center_x, Partition134.center_y, 150, Partition134.rainStatus, Partition134.trafficStatus, Partition134.urbanStatus)
-
-
-class Partition135(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2208.3647796503187
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition135.center_x, Partition135.center_y, 150, Partition135.rainStatus, Partition135.trafficStatus, Partition135.urbanStatus)
-
-
-class Partition136(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2468.1724007856506
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition136.center_x, Partition136.center_y, 150, Partition136.rainStatus, Partition136.trafficStatus, Partition136.urbanStatus)
-
-
-class Partition137(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2727.980021920982
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition137.center_x, Partition137.center_y, 150, Partition137.rainStatus, Partition137.trafficStatus, Partition137.urbanStatus)
-
-
-class Partition138(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2987.7876430563133
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition138.center_x, Partition138.center_y, 150, Partition138.rainStatus, Partition138.trafficStatus, Partition138.urbanStatus)
-
-
-class Partition139(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3247.595264191645
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition139.center_x, Partition139.center_y, 150, Partition139.rainStatus, Partition139.trafficStatus, Partition139.urbanStatus)
-
-
-class Partition140(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3507.402885326977
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition140.center_x, Partition140.center_y, 150, Partition140.rainStatus, Partition140.trafficStatus, Partition140.urbanStatus)
-
-
-class Partition141(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3767.2105064623083
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition141.center_x, Partition141.center_y, 150, Partition141.rainStatus, Partition141.trafficStatus, Partition141.urbanStatus)
-
-
-class Partition142(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 4027.0181275976397
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition142.center_x, Partition142.center_y, 150, Partition142.rainStatus, Partition142.trafficStatus, Partition142.urbanStatus)
-
-
-class Partition143(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4286.825748732971
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition143.center_x, Partition143.center_y, 150, Partition143.rainStatus, Partition143.trafficStatus, Partition143.urbanStatus)
-
-
-class Partition144(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 4546.633369868303
-    center_y = 1575.0
-
-    def __init__(self):
-        super().__init__(Partition144.center_x, Partition144.center_y, 150, Partition144.rainStatus, Partition144.trafficStatus, Partition144.urbanStatus)
-
-
-class Partition145(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 0.0
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition145.center_x, Partition145.center_y, 150, Partition145.rainStatus, Partition145.trafficStatus, Partition145.urbanStatus)
-
-
-class Partition146(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 259.8076211353316
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition146.center_x, Partition146.center_y, 150, Partition146.rainStatus, Partition146.trafficStatus, Partition146.urbanStatus)
-
-
-class Partition147(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 519.6152422706632
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition147.center_x, Partition147.center_y, 150, Partition147.rainStatus, Partition147.trafficStatus, Partition147.urbanStatus)
-
-
-class Partition148(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 779.4228634059948
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition148.center_x, Partition148.center_y, 150, Partition148.rainStatus, Partition148.trafficStatus, Partition148.urbanStatus)
-
-
-class Partition149(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1039.2304845413264
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition149.center_x, Partition149.center_y, 150, Partition149.rainStatus, Partition149.trafficStatus, Partition149.urbanStatus)
-
-
-class Partition150(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1299.038105676658
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition150.center_x, Partition150.center_y, 150, Partition150.rainStatus, Partition150.trafficStatus, Partition150.urbanStatus)
-
-
-class Partition151(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1558.8457268119896
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition151.center_x, Partition151.center_y, 150, Partition151.rainStatus, Partition151.trafficStatus, Partition151.urbanStatus)
-
-
-class Partition152(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1818.6533479473212
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition152.center_x, Partition152.center_y, 150, Partition152.rainStatus, Partition152.trafficStatus, Partition152.urbanStatus)
-
-
-class Partition153(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2078.460969082653
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition153.center_x, Partition153.center_y, 150, Partition153.rainStatus, Partition153.trafficStatus, Partition153.urbanStatus)
-
-
-class Partition154(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2338.2685902179846
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition154.center_x, Partition154.center_y, 150, Partition154.rainStatus, Partition154.trafficStatus, Partition154.urbanStatus)
-
-
-class Partition155(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2598.076211353316
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition155.center_x, Partition155.center_y, 150, Partition155.rainStatus, Partition155.trafficStatus, Partition155.urbanStatus)
-
-
-class Partition156(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2857.8838324886474
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition156.center_x, Partition156.center_y, 150, Partition156.rainStatus, Partition156.trafficStatus, Partition156.urbanStatus)
-
-
-class Partition157(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3117.691453623979
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition157.center_x, Partition157.center_y, 150, Partition157.rainStatus, Partition157.trafficStatus, Partition157.urbanStatus)
-
-
-class Partition158(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3377.499074759311
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition158.center_x, Partition158.center_y, 150, Partition158.rainStatus, Partition158.trafficStatus, Partition158.urbanStatus)
-
-
-class Partition159(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3637.3066958946424
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition159.center_x, Partition159.center_y, 150, Partition159.rainStatus, Partition159.trafficStatus, Partition159.urbanStatus)
-
-
-class Partition160(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3897.114317029974
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition160.center_x, Partition160.center_y, 150, Partition160.rainStatus, Partition160.trafficStatus, Partition160.urbanStatus)
-
-
-class Partition161(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 4156.921938165306
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition161.center_x, Partition161.center_y, 150, Partition161.rainStatus, Partition161.trafficStatus, Partition161.urbanStatus)
-
-
-class Partition162(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4416.729559300637
-    center_y = 1800.0
-
-    def __init__(self):
-        super().__init__(Partition162.center_x, Partition162.center_y, 150, Partition162.rainStatus, Partition162.trafficStatus, Partition162.urbanStatus)
-
-
-class Partition163(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 129.9038105676658
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition163.center_x, Partition163.center_y, 150, Partition163.rainStatus, Partition163.trafficStatus, Partition163.urbanStatus)
-
-
-class Partition164(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 389.7114317029974
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition164.center_x, Partition164.center_y, 150, Partition164.rainStatus, Partition164.trafficStatus, Partition164.urbanStatus)
-
-
-class Partition165(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 649.519052838329
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition165.center_x, Partition165.center_y, 150, Partition165.rainStatus, Partition165.trafficStatus, Partition165.urbanStatus)
-
-
-class Partition166(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 909.3266739736606
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition166.center_x, Partition166.center_y, 150, Partition166.rainStatus, Partition166.trafficStatus, Partition166.urbanStatus)
-
-
-class Partition167(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1169.1342951089923
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition167.center_x, Partition167.center_y, 150, Partition167.rainStatus, Partition167.trafficStatus, Partition167.urbanStatus)
-
-
-class Partition168(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1428.9419162443237
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition168.center_x, Partition168.center_y, 150, Partition168.rainStatus, Partition168.trafficStatus, Partition168.urbanStatus)
-
-
-class Partition169(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1688.7495373796555
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition169.center_x, Partition169.center_y, 150, Partition169.rainStatus, Partition169.trafficStatus, Partition169.urbanStatus)
-
-
-class Partition170(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1948.557158514987
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition170.center_x, Partition170.center_y, 150, Partition170.rainStatus, Partition170.trafficStatus, Partition170.urbanStatus)
-
-
-class Partition171(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2208.3647796503187
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition171.center_x, Partition171.center_y, 150, Partition171.rainStatus, Partition171.trafficStatus, Partition171.urbanStatus)
-
-
-class Partition172(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2468.1724007856506
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition172.center_x, Partition172.center_y, 150, Partition172.rainStatus, Partition172.trafficStatus, Partition172.urbanStatus)
-
-
-class Partition173(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2727.980021920982
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition173.center_x, Partition173.center_y, 150, Partition173.rainStatus, Partition173.trafficStatus, Partition173.urbanStatus)
-
-
-class Partition174(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2987.7876430563133
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition174.center_x, Partition174.center_y, 150, Partition174.rainStatus, Partition174.trafficStatus, Partition174.urbanStatus)
-
-
-class Partition175(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3247.595264191645
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition175.center_x, Partition175.center_y, 150, Partition175.rainStatus, Partition175.trafficStatus, Partition175.urbanStatus)
-
-
-class Partition176(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3507.402885326977
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition176.center_x, Partition176.center_y, 150, Partition176.rainStatus, Partition176.trafficStatus, Partition176.urbanStatus)
-
-
-class Partition177(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3767.2105064623083
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition177.center_x, Partition177.center_y, 150, Partition177.rainStatus, Partition177.trafficStatus, Partition177.urbanStatus)
-
-
-class Partition178(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4027.0181275976397
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition178.center_x, Partition178.center_y, 150, Partition178.rainStatus, Partition178.trafficStatus, Partition178.urbanStatus)
-
-
-class Partition179(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4286.825748732971
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition179.center_x, Partition179.center_y, 150, Partition179.rainStatus, Partition179.trafficStatus, Partition179.urbanStatus)
-
-
-class Partition180(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 4546.633369868303
-    center_y = 2025.0
-
-    def __init__(self):
-        super().__init__(Partition180.center_x, Partition180.center_y, 150, Partition180.rainStatus, Partition180.trafficStatus, Partition180.urbanStatus)
-
-
-class Partition181(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 0.0
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition181.center_x, Partition181.center_y, 150, Partition181.rainStatus, Partition181.trafficStatus, Partition181.urbanStatus)
-
-
-class Partition182(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 259.8076211353316
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition182.center_x, Partition182.center_y, 150, Partition182.rainStatus, Partition182.trafficStatus, Partition182.urbanStatus)
-
-
-class Partition183(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 519.6152422706632
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition183.center_x, Partition183.center_y, 150, Partition183.rainStatus, Partition183.trafficStatus, Partition183.urbanStatus)
-
-
-class Partition184(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 779.4228634059948
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition184.center_x, Partition184.center_y, 150, Partition184.rainStatus, Partition184.trafficStatus, Partition184.urbanStatus)
-
-
-class Partition185(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1039.2304845413264
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition185.center_x, Partition185.center_y, 150, Partition185.rainStatus, Partition185.trafficStatus, Partition185.urbanStatus)
-
-
-class Partition186(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1299.038105676658
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition186.center_x, Partition186.center_y, 150, Partition186.rainStatus, Partition186.trafficStatus, Partition186.urbanStatus)
-
-
-class Partition187(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1558.8457268119896
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition187.center_x, Partition187.center_y, 150, Partition187.rainStatus, Partition187.trafficStatus, Partition187.urbanStatus)
-
-
-class Partition188(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1818.6533479473212
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition188.center_x, Partition188.center_y, 150, Partition188.rainStatus, Partition188.trafficStatus, Partition188.urbanStatus)
-
-
-class Partition189(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2078.460969082653
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition189.center_x, Partition189.center_y, 150, Partition189.rainStatus, Partition189.trafficStatus, Partition189.urbanStatus)
-
-
-class Partition190(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2338.2685902179846
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition190.center_x, Partition190.center_y, 150, Partition190.rainStatus, Partition190.trafficStatus, Partition190.urbanStatus)
-
-
-class Partition191(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2598.076211353316
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition191.center_x, Partition191.center_y, 150, Partition191.rainStatus, Partition191.trafficStatus, Partition191.urbanStatus)
-
-
-class Partition192(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2857.8838324886474
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition192.center_x, Partition192.center_y, 150, Partition192.rainStatus, Partition192.trafficStatus, Partition192.urbanStatus)
-
-
-class Partition193(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3117.691453623979
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition193.center_x, Partition193.center_y, 150, Partition193.rainStatus, Partition193.trafficStatus, Partition193.urbanStatus)
-
-
-class Partition194(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3377.499074759311
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition194.center_x, Partition194.center_y, 150, Partition194.rainStatus, Partition194.trafficStatus, Partition194.urbanStatus)
-
-
-class Partition195(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3637.3066958946424
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition195.center_x, Partition195.center_y, 150, Partition195.rainStatus, Partition195.trafficStatus, Partition195.urbanStatus)
-
-
-class Partition196(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3897.114317029974
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition196.center_x, Partition196.center_y, 150, Partition196.rainStatus, Partition196.trafficStatus, Partition196.urbanStatus)
-
-
-class Partition197(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 4156.921938165306
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition197.center_x, Partition197.center_y, 150, Partition197.rainStatus, Partition197.trafficStatus, Partition197.urbanStatus)
-
-
-class Partition198(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 4416.729559300637
-    center_y = 2250.0
-
-    def __init__(self):
-        super().__init__(Partition198.center_x, Partition198.center_y, 150, Partition198.rainStatus, Partition198.trafficStatus, Partition198.urbanStatus)
-
-
-class Partition199(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 129.9038105676658
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition199.center_x, Partition199.center_y, 150, Partition199.rainStatus, Partition199.trafficStatus, Partition199.urbanStatus)
-
-
-class Partition200(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 389.7114317029974
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition200.center_x, Partition200.center_y, 150, Partition200.rainStatus, Partition200.trafficStatus, Partition200.urbanStatus)
-
-
-class Partition201(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 649.519052838329
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition201.center_x, Partition201.center_y, 150, Partition201.rainStatus, Partition201.trafficStatus, Partition201.urbanStatus)
-
-
-class Partition202(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 909.3266739736606
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition202.center_x, Partition202.center_y, 150, Partition202.rainStatus, Partition202.trafficStatus, Partition202.urbanStatus)
-
-
-class Partition203(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1169.1342951089923
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition203.center_x, Partition203.center_y, 150, Partition203.rainStatus, Partition203.trafficStatus, Partition203.urbanStatus)
-
-
-class Partition204(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1428.9419162443237
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition204.center_x, Partition204.center_y, 150, Partition204.rainStatus, Partition204.trafficStatus, Partition204.urbanStatus)
-
-
-class Partition205(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1688.7495373796555
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition205.center_x, Partition205.center_y, 150, Partition205.rainStatus, Partition205.trafficStatus, Partition205.urbanStatus)
-
-
-class Partition206(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1948.557158514987
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition206.center_x, Partition206.center_y, 150, Partition206.rainStatus, Partition206.trafficStatus, Partition206.urbanStatus)
-
-
-class Partition207(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2208.3647796503187
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition207.center_x, Partition207.center_y, 150, Partition207.rainStatus, Partition207.trafficStatus, Partition207.urbanStatus)
-
-
-class Partition208(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2468.1724007856506
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition208.center_x, Partition208.center_y, 150, Partition208.rainStatus, Partition208.trafficStatus, Partition208.urbanStatus)
-
-
-class Partition209(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2727.980021920982
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition209.center_x, Partition209.center_y, 150, Partition209.rainStatus, Partition209.trafficStatus, Partition209.urbanStatus)
-
-
-class Partition210(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2987.7876430563133
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition210.center_x, Partition210.center_y, 150, Partition210.rainStatus, Partition210.trafficStatus, Partition210.urbanStatus)
-
-
-class Partition211(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3247.595264191645
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition211.center_x, Partition211.center_y, 150, Partition211.rainStatus, Partition211.trafficStatus, Partition211.urbanStatus)
-
-
-class Partition212(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3507.402885326977
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition212.center_x, Partition212.center_y, 150, Partition212.rainStatus, Partition212.trafficStatus, Partition212.urbanStatus)
-
-
-class Partition213(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3767.2105064623083
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition213.center_x, Partition213.center_y, 150, Partition213.rainStatus, Partition213.trafficStatus, Partition213.urbanStatus)
-
-
-class Partition214(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4027.0181275976397
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition214.center_x, Partition214.center_y, 150, Partition214.rainStatus, Partition214.trafficStatus, Partition214.urbanStatus)
-
-
-class Partition215(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 4286.825748732971
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition215.center_x, Partition215.center_y, 150, Partition215.rainStatus, Partition215.trafficStatus, Partition215.urbanStatus)
-
-
-class Partition216(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 4546.633369868303
-    center_y = 2475.0
-
-    def __init__(self):
-        super().__init__(Partition216.center_x, Partition216.center_y, 150, Partition216.rainStatus, Partition216.trafficStatus, Partition216.urbanStatus)
-
-
-class Partition217(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 0.0
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition217.center_x, Partition217.center_y, 150, Partition217.rainStatus, Partition217.trafficStatus, Partition217.urbanStatus)
-
-
-class Partition218(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 259.8076211353316
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition218.center_x, Partition218.center_y, 150, Partition218.rainStatus, Partition218.trafficStatus, Partition218.urbanStatus)
-
-
-class Partition219(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 519.6152422706632
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition219.center_x, Partition219.center_y, 150, Partition219.rainStatus, Partition219.trafficStatus, Partition219.urbanStatus)
-
-
-class Partition220(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 779.4228634059948
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition220.center_x, Partition220.center_y, 150, Partition220.rainStatus, Partition220.trafficStatus, Partition220.urbanStatus)
-
-
-class Partition221(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1039.2304845413264
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition221.center_x, Partition221.center_y, 150, Partition221.rainStatus, Partition221.trafficStatus, Partition221.urbanStatus)
-
-
-class Partition222(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1299.038105676658
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition222.center_x, Partition222.center_y, 150, Partition222.rainStatus, Partition222.trafficStatus, Partition222.urbanStatus)
-
-
-class Partition223(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1558.8457268119896
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition223.center_x, Partition223.center_y, 150, Partition223.rainStatus, Partition223.trafficStatus, Partition223.urbanStatus)
-
-
-class Partition224(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1818.6533479473212
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition224.center_x, Partition224.center_y, 150, Partition224.rainStatus, Partition224.trafficStatus, Partition224.urbanStatus)
-
-
-class Partition225(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2078.460969082653
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition225.center_x, Partition225.center_y, 150, Partition225.rainStatus, Partition225.trafficStatus, Partition225.urbanStatus)
-
-
-class Partition226(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2338.2685902179846
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition226.center_x, Partition226.center_y, 150, Partition226.rainStatus, Partition226.trafficStatus, Partition226.urbanStatus)
-
-
-class Partition227(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2598.076211353316
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition227.center_x, Partition227.center_y, 150, Partition227.rainStatus, Partition227.trafficStatus, Partition227.urbanStatus)
-
-
-class Partition228(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2857.8838324886474
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition228.center_x, Partition228.center_y, 150, Partition228.rainStatus, Partition228.trafficStatus, Partition228.urbanStatus)
-
-
-class Partition229(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3117.691453623979
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition229.center_x, Partition229.center_y, 150, Partition229.rainStatus, Partition229.trafficStatus, Partition229.urbanStatus)
-
-
-class Partition230(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3377.499074759311
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition230.center_x, Partition230.center_y, 150, Partition230.rainStatus, Partition230.trafficStatus, Partition230.urbanStatus)
-
-
-class Partition231(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3637.3066958946424
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition231.center_x, Partition231.center_y, 150, Partition231.rainStatus, Partition231.trafficStatus, Partition231.urbanStatus)
-
-
-class Partition232(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3897.114317029974
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition232.center_x, Partition232.center_y, 150, Partition232.rainStatus, Partition232.trafficStatus, Partition232.urbanStatus)
-
-
-class Partition233(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 4156.921938165306
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition233.center_x, Partition233.center_y, 150, Partition233.rainStatus, Partition233.trafficStatus, Partition233.urbanStatus)
-
-
-class Partition234(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 4416.729559300637
-    center_y = 2700.0
-
-    def __init__(self):
-        super().__init__(Partition234.center_x, Partition234.center_y, 150, Partition234.rainStatus, Partition234.trafficStatus, Partition234.urbanStatus)
-
-
-class Partition235(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 129.9038105676658
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition235.center_x, Partition235.center_y, 150, Partition235.rainStatus, Partition235.trafficStatus, Partition235.urbanStatus)
-
-
-class Partition236(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 389.7114317029974
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition236.center_x, Partition236.center_y, 150, Partition236.rainStatus, Partition236.trafficStatus, Partition236.urbanStatus)
-
-
-class Partition237(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 649.519052838329
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition237.center_x, Partition237.center_y, 150, Partition237.rainStatus, Partition237.trafficStatus, Partition237.urbanStatus)
-
-
-class Partition238(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 909.3266739736606
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition238.center_x, Partition238.center_y, 150, Partition238.rainStatus, Partition238.trafficStatus, Partition238.urbanStatus)
-
-
-class Partition239(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1169.1342951089923
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition239.center_x, Partition239.center_y, 150, Partition239.rainStatus, Partition239.trafficStatus, Partition239.urbanStatus)
-
-
-class Partition240(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1428.9419162443237
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition240.center_x, Partition240.center_y, 150, Partition240.rainStatus, Partition240.trafficStatus, Partition240.urbanStatus)
-
-
-class Partition241(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1688.7495373796555
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition241.center_x, Partition241.center_y, 150, Partition241.rainStatus, Partition241.trafficStatus, Partition241.urbanStatus)
-
-
-class Partition242(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1948.557158514987
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition242.center_x, Partition242.center_y, 150, Partition242.rainStatus, Partition242.trafficStatus, Partition242.urbanStatus)
-
-
-class Partition243(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2208.3647796503187
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition243.center_x, Partition243.center_y, 150, Partition243.rainStatus, Partition243.trafficStatus, Partition243.urbanStatus)
-
-
-class Partition244(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2468.1724007856506
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition244.center_x, Partition244.center_y, 150, Partition244.rainStatus, Partition244.trafficStatus, Partition244.urbanStatus)
-
-
-class Partition245(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2727.980021920982
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition245.center_x, Partition245.center_y, 150, Partition245.rainStatus, Partition245.trafficStatus, Partition245.urbanStatus)
-
-
-class Partition246(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2987.7876430563133
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition246.center_x, Partition246.center_y, 150, Partition246.rainStatus, Partition246.trafficStatus, Partition246.urbanStatus)
-
-
-class Partition247(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3247.595264191645
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition247.center_x, Partition247.center_y, 150, Partition247.rainStatus, Partition247.trafficStatus, Partition247.urbanStatus)
-
-
-class Partition248(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3507.402885326977
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition248.center_x, Partition248.center_y, 150, Partition248.rainStatus, Partition248.trafficStatus, Partition248.urbanStatus)
-
-
-class Partition249(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3767.2105064623083
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition249.center_x, Partition249.center_y, 150, Partition249.rainStatus, Partition249.trafficStatus, Partition249.urbanStatus)
-
-
-class Partition250(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4027.0181275976397
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition250.center_x, Partition250.center_y, 150, Partition250.rainStatus, Partition250.trafficStatus, Partition250.urbanStatus)
-
-
-class Partition251(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4286.825748732971
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition251.center_x, Partition251.center_y, 150, Partition251.rainStatus, Partition251.trafficStatus, Partition251.urbanStatus)
-
-
-class Partition252(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4546.633369868303
-    center_y = 2925.0
-
-    def __init__(self):
-        super().__init__(Partition252.center_x, Partition252.center_y, 150, Partition252.rainStatus, Partition252.trafficStatus, Partition252.urbanStatus)
-
-
-class Partition253(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 0.0
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition253.center_x, Partition253.center_y, 150, Partition253.rainStatus, Partition253.trafficStatus, Partition253.urbanStatus)
-
-
-class Partition254(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 259.8076211353316
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition254.center_x, Partition254.center_y, 150, Partition254.rainStatus, Partition254.trafficStatus, Partition254.urbanStatus)
-
-
-class Partition255(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 519.6152422706632
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition255.center_x, Partition255.center_y, 150, Partition255.rainStatus, Partition255.trafficStatus, Partition255.urbanStatus)
-
-
-class Partition256(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 779.4228634059948
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition256.center_x, Partition256.center_y, 150, Partition256.rainStatus, Partition256.trafficStatus, Partition256.urbanStatus)
-
-
-class Partition257(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1039.2304845413264
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition257.center_x, Partition257.center_y, 150, Partition257.rainStatus, Partition257.trafficStatus, Partition257.urbanStatus)
-
-
-class Partition258(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1299.038105676658
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition258.center_x, Partition258.center_y, 150, Partition258.rainStatus, Partition258.trafficStatus, Partition258.urbanStatus)
-
-
-class Partition259(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1558.8457268119896
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition259.center_x, Partition259.center_y, 150, Partition259.rainStatus, Partition259.trafficStatus, Partition259.urbanStatus)
-
-
-class Partition260(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1818.6533479473212
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition260.center_x, Partition260.center_y, 150, Partition260.rainStatus, Partition260.trafficStatus, Partition260.urbanStatus)
-
-
-class Partition261(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2078.460969082653
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition261.center_x, Partition261.center_y, 150, Partition261.rainStatus, Partition261.trafficStatus, Partition261.urbanStatus)
-
-
-class Partition262(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2338.2685902179846
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition262.center_x, Partition262.center_y, 150, Partition262.rainStatus, Partition262.trafficStatus, Partition262.urbanStatus)
-
-
-class Partition263(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2598.076211353316
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition263.center_x, Partition263.center_y, 150, Partition263.rainStatus, Partition263.trafficStatus, Partition263.urbanStatus)
-
-
-class Partition264(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2857.8838324886474
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition264.center_x, Partition264.center_y, 150, Partition264.rainStatus, Partition264.trafficStatus, Partition264.urbanStatus)
-
-
-class Partition265(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3117.691453623979
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition265.center_x, Partition265.center_y, 150, Partition265.rainStatus, Partition265.trafficStatus, Partition265.urbanStatus)
-
-
-class Partition266(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3377.499074759311
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition266.center_x, Partition266.center_y, 150, Partition266.rainStatus, Partition266.trafficStatus, Partition266.urbanStatus)
-
-
-class Partition267(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 3637.3066958946424
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition267.center_x, Partition267.center_y, 150, Partition267.rainStatus, Partition267.trafficStatus, Partition267.urbanStatus)
-
-
-class Partition268(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3897.114317029974
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition268.center_x, Partition268.center_y, 150, Partition268.rainStatus, Partition268.trafficStatus, Partition268.urbanStatus)
-
-
-class Partition269(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 4156.921938165306
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition269.center_x, Partition269.center_y, 150, Partition269.rainStatus, Partition269.trafficStatus, Partition269.urbanStatus)
-
-
-class Partition270(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4416.729559300637
-    center_y = 3150.0
-
-    def __init__(self):
-        super().__init__(Partition270.center_x, Partition270.center_y, 150, Partition270.rainStatus, Partition270.trafficStatus, Partition270.urbanStatus)
-
-
-class Partition271(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 129.9038105676658
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition271.center_x, Partition271.center_y, 150, Partition271.rainStatus, Partition271.trafficStatus, Partition271.urbanStatus)
-
-
-class Partition272(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 389.7114317029974
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition272.center_x, Partition272.center_y, 150, Partition272.rainStatus, Partition272.trafficStatus, Partition272.urbanStatus)
-
-
-class Partition273(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 649.519052838329
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition273.center_x, Partition273.center_y, 150, Partition273.rainStatus, Partition273.trafficStatus, Partition273.urbanStatus)
-
-
-class Partition274(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 909.3266739736606
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition274.center_x, Partition274.center_y, 150, Partition274.rainStatus, Partition274.trafficStatus, Partition274.urbanStatus)
-
-
-class Partition275(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1169.1342951089923
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition275.center_x, Partition275.center_y, 150, Partition275.rainStatus, Partition275.trafficStatus, Partition275.urbanStatus)
-
-
-class Partition276(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1428.9419162443237
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition276.center_x, Partition276.center_y, 150, Partition276.rainStatus, Partition276.trafficStatus, Partition276.urbanStatus)
-
-
-class Partition277(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1688.7495373796555
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition277.center_x, Partition277.center_y, 150, Partition277.rainStatus, Partition277.trafficStatus, Partition277.urbanStatus)
-
-
-class Partition278(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 1948.557158514987
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition278.center_x, Partition278.center_y, 150, Partition278.rainStatus, Partition278.trafficStatus, Partition278.urbanStatus)
-
-
-class Partition279(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2208.3647796503187
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition279.center_x, Partition279.center_y, 150, Partition279.rainStatus, Partition279.trafficStatus, Partition279.urbanStatus)
-
-
-class Partition280(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2468.1724007856506
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition280.center_x, Partition280.center_y, 150, Partition280.rainStatus, Partition280.trafficStatus, Partition280.urbanStatus)
-
-
-class Partition281(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 2727.980021920982
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition281.center_x, Partition281.center_y, 150, Partition281.rainStatus, Partition281.trafficStatus, Partition281.urbanStatus)
-
-
-class Partition282(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2987.7876430563133
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition282.center_x, Partition282.center_y, 150, Partition282.rainStatus, Partition282.trafficStatus, Partition282.urbanStatus)
-
-
-class Partition283(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3247.595264191645
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition283.center_x, Partition283.center_y, 150, Partition283.rainStatus, Partition283.trafficStatus, Partition283.urbanStatus)
-
-
-class Partition284(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3507.402885326977
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition284.center_x, Partition284.center_y, 150, Partition284.rainStatus, Partition284.trafficStatus, Partition284.urbanStatus)
-
-
-class Partition285(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3767.2105064623083
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition285.center_x, Partition285.center_y, 150, Partition285.rainStatus, Partition285.trafficStatus, Partition285.urbanStatus)
-
-
-class Partition286(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 4027.0181275976397
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition286.center_x, Partition286.center_y, 150, Partition286.rainStatus, Partition286.trafficStatus, Partition286.urbanStatus)
-
-
-class Partition287(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4286.825748732971
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition287.center_x, Partition287.center_y, 150, Partition287.rainStatus, Partition287.trafficStatus, Partition287.urbanStatus)
-
-
-class Partition288(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4546.633369868303
-    center_y = 3375.0
-
-    def __init__(self):
-        super().__init__(Partition288.center_x, Partition288.center_y, 150, Partition288.rainStatus, Partition288.trafficStatus, Partition288.urbanStatus)
-
-
-class Partition289(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 0.0
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition289.center_x, Partition289.center_y, 150, Partition289.rainStatus, Partition289.trafficStatus, Partition289.urbanStatus)
-
-
-class Partition290(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 259.8076211353316
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition290.center_x, Partition290.center_y, 150, Partition290.rainStatus, Partition290.trafficStatus, Partition290.urbanStatus)
-
-
-class Partition291(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 519.6152422706632
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition291.center_x, Partition291.center_y, 150, Partition291.rainStatus, Partition291.trafficStatus, Partition291.urbanStatus)
-
-
-class Partition292(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 779.4228634059948
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition292.center_x, Partition292.center_y, 150, Partition292.rainStatus, Partition292.trafficStatus, Partition292.urbanStatus)
-
-
-class Partition293(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 1039.2304845413264
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition293.center_x, Partition293.center_y, 150, Partition293.rainStatus, Partition293.trafficStatus, Partition293.urbanStatus)
-
-
-class Partition294(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 1299.038105676658
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition294.center_x, Partition294.center_y, 150, Partition294.rainStatus, Partition294.trafficStatus, Partition294.urbanStatus)
-
-
-class Partition295(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1558.8457268119896
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition295.center_x, Partition295.center_y, 150, Partition295.rainStatus, Partition295.trafficStatus, Partition295.urbanStatus)
-
-
-class Partition296(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 1818.6533479473212
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition296.center_x, Partition296.center_y, 150, Partition296.rainStatus, Partition296.trafficStatus, Partition296.urbanStatus)
-
-
-class Partition297(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 2078.460969082653
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition297.center_x, Partition297.center_y, 150, Partition297.rainStatus, Partition297.trafficStatus, Partition297.urbanStatus)
-
-
-class Partition298(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2338.2685902179846
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition298.center_x, Partition298.center_y, 150, Partition298.rainStatus, Partition298.trafficStatus, Partition298.urbanStatus)
-
-
-class Partition299(Partitions):
-    rainStatus = NoiseConfig.Rain13()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 2598.076211353316
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition299.center_x, Partition299.center_y, 150, Partition299.rainStatus, Partition299.trafficStatus, Partition299.urbanStatus)
-
-
-class Partition300(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 2857.8838324886474
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition300.center_x, Partition300.center_y, 150, Partition300.rainStatus, Partition300.trafficStatus, Partition300.urbanStatus)
-
-
-class Partition301(Partitions):
-    rainStatus = NoiseConfig.Rain100()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3117.691453623979
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition301.center_x, Partition301.center_y, 150, Partition301.rainStatus, Partition301.trafficStatus, Partition301.urbanStatus)
-
-
-class Partition302(Partitions):
-    rainStatus = NoiseConfig.Rain200()
-    trafficStatus = NoiseConfig.RedTraffic()
-    urbanStatus = NoiseConfig.Rural()
-    center_x = 3377.499074759311
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition302.center_x, Partition302.center_y, 150, Partition302.rainStatus, Partition302.trafficStatus, Partition302.urbanStatus)
-
-
-class Partition303(Partitions):
-    rainStatus = NoiseConfig.Rain0()
-    trafficStatus = NoiseConfig.OrangeTraffic()
-    urbanStatus = NoiseConfig.MediumUrban()
-    center_x = 3637.3066958946424
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition303.center_x, Partition303.center_y, 150, Partition303.rainStatus, Partition303.trafficStatus, Partition303.urbanStatus)
-
-
-class Partition304(Partitions):
-    rainStatus = NoiseConfig.Rain23()
-    trafficStatus = NoiseConfig.GreenTraffic()
-    urbanStatus = NoiseConfig.BadUrban()
-    center_x = 3897.114317029974
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition304.center_x, Partition304.center_y, 150, Partition304.rainStatus, Partition304.trafficStatus, Partition304.urbanStatus)
-
-
-class Partition305(Partitions):
-    rainStatus = NoiseConfig.Rain50()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4156.921938165306
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition305.center_x, Partition305.center_y, 150, Partition305.rainStatus, Partition305.trafficStatus, Partition305.urbanStatus)
-
-
-class Partition306(Partitions):
-    rainStatus = NoiseConfig.Rain150()
-    trafficStatus = NoiseConfig.BlackTraffic()
-    urbanStatus = NoiseConfig.GoodUrban()
-    center_x = 4416.729559300637
-    center_y = 3600.0
-
-    def __init__(self):
-        super().__init__(Partition306.center_x, Partition306.center_y, 150, Partition306.rainStatus, Partition306.trafficStatus, Partition306.urbanStatus)
Index: NoiseConfigs/NoUse/partitionGenerator.py
===================================================================
diff --git a/NoiseConfigs/NoUse/partitionGenerator.py b/NoiseConfigs/NoUse/partitionGenerator.py
deleted file mode 100644
--- a/NoiseConfigs/NoUse/partitionGenerator.py	
+++ /dev/null	
@@ -1,95 +0,0 @@
-import random
-
-
-class CodeGenerator:
-    def __init__(self, rows, cols):
-        self.rows = rows
-        self.cols = cols
-        self.width = 410
-        self.height = 322
-        self.rain_options = [
-            "NoiseConfig.Rain0()",
-            "NoiseConfig.Rain13()",
-            "NoiseConfig.Rain23()",
-            "NoiseConfig.Rain50()",
-            "NoiseConfig.Rain100()",
-            "NoiseConfig.Rain150()",
-            "NoiseConfig.Rain200()",
-        ]
-        self.traffic_options = [
-            "NoiseConfig.BlackTraffic()",
-            "NoiseConfig.RedTraffic()",
-            "NoiseConfig.OrangeTraffic()",
-            "NoiseConfig.GreenTraffic()",
-        ]
-        self.urban_options = [
-            "NoiseConfig.Rural()",
-            "NoiseConfig.GoodUrban()",
-            "NoiseConfig.MediumUrban()",
-            "NoiseConfig.BadUrban()",
-        ]
-
-    def generate_partition_class(self, row, col):
-        start_x = (col - 1) * self.width
-        start_y = (row - 1) * self.height
-        end_x = start_x + self.width
-        end_y = start_y + self.height
-
-        rain_status = random.choice(self.rain_options)
-        traffic_status = random.choice(self.traffic_options)
-        urban_status = random.choice(self.urban_options)
-
-        class_name = f"Partition{row}{col}"
-
-        return f"""
-class {class_name}(Partitions):
-    rainStatus = {rain_status}
-    trafficStatus = {traffic_status}
-    urbanStatus = {urban_status}
-
-    def __init__(self):
-        super().__init__({start_x}, {start_y}, {end_x}, {end_y}, {class_name}.rainStatus, {class_name}.trafficStatus, {class_name}.urbanStatus)
-"""
-
-    def generate_code(self):
-        header = """
-from noiseConfig import NoiseConfig
-from typing import Optional
-
-class Partitions:
-    startX: int
-    startY: int
-    endX: int
-    endY: int
-    rainStatus: Optional[NoiseConfig.RainNoiseConfig]
-    trafficStatus: Optional[NoiseConfig.TrafficNoiseConfig]
-    urbanStatus: Optional[NoiseConfig.UrbanNoiseConfig]
-
-    def __init__(self, startX, startY, endX, endY, rainStatus, trafficStatus, urbanStatus):
-        self.startX = startX
-        self.startY = startY
-        self.endX = endX
-        self.endY = endY
-        self.rainStatus = rainStatus
-        self.trafficStatus = trafficStatus
-        self.urbanStatus = urbanStatus
-"""
-
-        classes = []
-        for row in range(1, self.rows + 1):
-            for col in range(1, self.cols + 1):
-                classes.append(self.generate_partition_class(row, col))
-
-        return header + "\n".join(classes)
-
-
-# Example usage
-rows = 4
-cols = 4
-generator = CodeGenerator(rows, cols)
-code = generator.generate_code()
-
-with open(f"generated_partitions{rows}{cols}.py", "w") as file:
-    file.write(code)
-
-print("Code generated and saved to generated_partitions.py")
Index: NoiseConfigs/utilsFunctions.py
===================================================================
diff --git a/NoiseConfigs/utilsFunctions.py b/NoiseConfigs/utilsFunctions.py
deleted file mode 100644
--- a/NoiseConfigs/utilsFunctions.py	
+++ /dev/null	
@@ -1,282 +0,0 @@
-import math
-import importlib
-import pandas as pd
-from collections import defaultdict
-
-from NoiseConfigs.noiseConfigGeneralAttribute import NoiseConfigGeneralAttribute
-
-
-def read_vehicle_positions(csv_file):
-    df = pd.read_csv(csv_file)
-
-    positions = list(df[['x', 'y']].itertuples(index=False, name=None))
-
-    return positions
-
-
-class UtilsFunc:
-    FREQUENCY_GH = 38
-
-    @staticmethod
-    def recognize_traffic_status(file_name):
-        vehicles_positions = read_vehicle_positions(file_name)
-
-        partitions = UtilsFunc.load_partitions("generated_hex_partitions")
-
-        if not partitions:
-            print("No partitions loaded. Make sure 'generated_hex_partitionsWithFactory.py' exists.")
-            return
-
-        partition_traffic = defaultdict(int)
-
-        for x, y in vehicles_positions:
-            partition = UtilsFunc.find_partition(partitions, x, y)
-            if partition:
-                partition_traffic[partition] += 1
-
-        traffic_statuses = {}
-        for partition in partitions:
-            count = partition_traffic.get(partition, 0)
-            if count < 5:
-                traffic_statuses[partition] = NoiseConfigGeneralAttribute.Traffic_options[0]
-            elif count < 10:
-                traffic_statuses[partition] = NoiseConfigGeneralAttribute.Traffic_options[1]
-            elif count < 15:
-                traffic_statuses[partition] = NoiseConfigGeneralAttribute.Traffic_options[2]
-            else:
-                traffic_statuses[partition] = NoiseConfigGeneralAttribute.Traffic_options[3]
-
-        ## to show partitions traffic statuses
-        # for partition, status in traffic_statuses.items():
-        #     print(f"Partition {partition}: {status} ({partition_traffic[partition]} vehicles)")
-
-        return traffic_statuses
-
-    @staticmethod
-    def get_hex_vertices_flat(cx, cy, r):
-        return [
-            (cx - r / 2, cy - (math.sqrt(3) * r) / 2),
-            (cx + r / 2, cy - (math.sqrt(3) * r) / 2),
-            (cx + r, cy),
-            (cx + r / 2, cy + (math.sqrt(3) * r) / 2),
-            (cx - r / 2, cy + (math.sqrt(3) * r) / 2),
-            (cx - r, cy)
-        ]
-
-    @staticmethod
-    def is_point_in_polygon(px, py, vertices):
-        inside = False
-        n = len(vertices)
-        for i in range(n):
-            j = (i + 1) % n
-            xi, yi = vertices[i]
-            xj, yj = vertices[j]
-            intersect = ((yi > py) != (yj > py)) and \
-                        (px < (xj - xi) * (py - yi) / (yj - yi) + xi)
-            if intersect:
-                inside = not inside
-        return inside
-
-    @staticmethod
-    def distance(x1, y1, x2, y2):
-        return math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
-
-    @staticmethod
-    def find_partition(partitions, x, y):
-        for p in partitions:
-            vertices = UtilsFunc.get_hex_vertices_flat(p.centerX, p.centerY, p.radius)
-            if UtilsFunc.is_point_in_polygon(x, y, vertices):
-                return p
-
-        closest_partition = None
-        closest_distance = float("inf")
-        for p in partitions:
-            dist = UtilsFunc.distance(x, y, p.centerX, p.centerY)
-            if dist <= p.radius and dist < closest_distance:
-                closest_partition = p
-                closest_distance = dist
-
-        return closest_partition
-
-    @staticmethod
-    def load_partitions(module_name):
-        try:
-            module = importlib.import_module(module_name)
-            partitions = []
-            for attr_name in dir(module):
-                if attr_name.startswith("Partition") and attr_name[9:].isdigit():
-                    partition_class = getattr(module, attr_name)
-                    partitions.append(partition_class())
-            return partitions
-        except ImportError as e:
-            print(f"Error importing module '{module_name}': {e}")
-            return []
-
-    @staticmethod
-    def on_segment(px, py, qx, qy, rx, ry):
-        """
-        Checks if point (px, py) lies on segment (qx, qy) to (rx, ry).
-        """
-        return min(qx, rx) <= px <= max(qx, rx) and min(qy, ry) <= py <= max(qy, ry)
-
-    @staticmethod
-    def do_lines_intersect(p1, p2, q1, q2):
-        """
-        Checks if line segments p1-p2 and q1-q2 intersect.
-        """
-        # Find the orientation of the ordered triplets (p1, p2, q1) and (p1, p2, q2)
-        o1 = UtilsFunc.orientation(p1, p2, q1)
-        o2 = UtilsFunc.orientation(p1, p2, q2)
-        o3 = UtilsFunc.orientation(q1, q2, p1)
-        o4 = UtilsFunc.orientation(q1, q2, p2)
-
-        # General case
-        if o1 != o2 and o3 != o4:
-            return True
-
-        # Special cases
-        if o1 == 0 and UtilsFunc.on_segment(q1[0], q1[1], p1[0], p1[1], p2[0], p2[1]):
-            return True
-        if o2 == 0 and UtilsFunc.on_segment(q2[0], q2[1], p1[0], p1[1], p2[0], p2[1]):
-            return True
-        if o3 == 0 and UtilsFunc.on_segment(p1[0], p1[1], q1[0], q1[1], q2[0], q2[1]):
-            return True
-        if o4 == 0 and UtilsFunc.on_segment(p2[0], p2[1], q1[0], q1[1], q2[0], q2[1]):
-            return True
-
-        return False
-
-    @staticmethod
-    def orientation(p, q, r):
-        """
-        Find the orientation of the ordered triplet (p, q, r).
-        0 -> p, q and r are collinear
-        1 -> Clockwise
-        2 -> Counterclockwise
-        """
-        val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1])
-        if val == 0:
-            return 0  # collinear
-        elif val > 0:
-            return 1  # clockwise
-        else:
-            return 2  # counterclockwise
-
-    @staticmethod
-    def find_line_intersections(p1, p2, partitions):
-        """
-        Given two points p1 and p2, find all the partitions their connecting line intersects.
-        and if p1 != p2, and they are in the same partition, then return their partition
-        """
-        # print(f"p1:{p1}, p2:{p2}")
-
-        intersecting_partitions = []
-
-        for partition in partitions:
-            vertices = UtilsFunc.get_hex_vertices_flat(partition.centerX, partition.centerY, partition.radius)
-            # Check if the line between p1 and p2 intersects any side of the hexagon
-            for i in range(6):
-                if UtilsFunc.do_lines_intersect(p1, p2, vertices[i], vertices[(i + 1) % 6]):
-                    intersecting_partitions.append(partition)
-                    break  # Once a partition is found, no need to check further sides
-
-        if len(intersecting_partitions) == 0 and ((p1[0] != p2[0]) or (p1[1] != p2[1])):
-            intersecting_partitions.append(UtilsFunc().find_partition(partitions, p1[0], p1[1]))
-        return intersecting_partitions
-
-    @staticmethod
-    def get_max_urban_status(intersecting_partitions):
-        if not intersecting_partitions:
-            return None
-
-        max_urban_status = float('-inf')
-
-        # note: removed! it was added to add HRL, but this feature has been canceled
-        # for partition in intersecting_partitions:
-        #     if hasattr(partition, 'urbanStatus'):
-        #         if partition.is_factory:
-        #             factory_n_factor = 5.0
-        #         else:
-        #             factory_n_factor = 0.0
-        #         max_urban_status = max(max_urban_status, partition.urbanStatus.random_noise_coff(), factory_n_factor)
-
-        for partition in intersecting_partitions:
-            if hasattr(partition, 'urbanStatus'):
-                max_urban_status = max(max_urban_status, partition.urbanStatus.random_noise_coff())
-
-        return max_urban_status
-
-    @staticmethod
-    def get_max_rain_attenuation(intersecting_partitions):
-        if not intersecting_partitions:
-            return None
-
-        max_rain_attenuation = float('-inf')
-
-        for partition in intersecting_partitions:
-            if hasattr(partition, 'rainStatus'):
-                max_rain_attenuation = max(max_rain_attenuation, partition.rainStatus.random_noise())
-
-        return max_rain_attenuation
-
-    @staticmethod
-    def path_loss_km_ghz(d_km, f_ghz, n=2):
-        """
-        Calculate Path Loss in decibels (dB) using distance in km, frequency in GHz, and path loss exponent
-
-        :param d_km: Distance between transmitter and receiver (kilometers)
-        :param f_ghz: Frequency of transmitted wave (GHz)
-        :param n: Path loss exponent (default: 2 for free space)
-        :return: Path Loss value in dB
-        """
-        if d_km < 0 or f_ghz <= 0:
-            raise ValueError(f"d_km and f_ghz must be positive values : {d_km}, {f_ghz}")
-        elif d_km == 0:
-            return 0
-        # Constant 92.45 for frequency in GHz and distance in km
-        PL = 10 * n * math.log10(d_km) + 10 * n * math.log10(f_ghz) + 92.45
-        return PL
-
-
-# Example usage
-if __name__ == "__main__":
-
-    # pl_value = UtilsFunc().path_loss_km_ghz(
-    #     d_km=UtilsFunc().distance(1962.62, 2621.8, 1887.07, 2437.06)/1000
-    #     , f_ghz=UtilsFunc().FREQUENCY_GH, n=3.6699038216897257)
-    #
-    # # # Example usage:
-    # # distance_km = 0.1  # kilometers
-    # # frequency_ghz = 38  # GHz
-    # # path_loss_exponent = 3  # example value for urban environment
-    # #
-    # # pl_value = UtilsFunc().path_loss_km_ghz(distance_km, frequency_ghz, path_loss_exponent)
-    # print(f"Path Loss: {pl_value:.2f} dB")
-
-    partitions = UtilsFunc.load_partitions("generated_hex_partitions")
-    # print(f"partitions: {partitions}")
-    # # first example
-    # p1 = (50, 50)  # First point
-    # p2 = (500, 500)  # Second point
-    # # second example
-    p1 = (152, 1)  # First point
-    p2 = (151, 1)  # Second point
-    #
-    intersecting_partitions = UtilsFunc.find_line_intersections(p1, p2, partitions)
-    print("Partitions intersected by the line between points:")
-    for partition in intersecting_partitions:
-        # print(partition)
-        print(f"Partition at ({partition.centerX}, {partition.centerY})")
-
-    # UtilsFunc().recognize_traffic_status(f"../SumoDividedByTime/Outputs/dataInTime{0}.csv")
-    # UtilsFunc().load_and_check_point(0, 0)
-    # UtilsFunc().load_and_check_point(0, 100)
-    # UtilsFunc().load_and_check_point(100, 0)
-    # UtilsFunc().load_and_check_point(150, 0)
-    # UtilsFunc().load_and_check_point(151, 0)
-    # UtilsFunc().load_and_check_point(0, 150)
-    # UtilsFunc().load_and_check_point(0, 151)
-    # UtilsFunc().load_and_check_point(550, 20)
-    # UtilsFunc().load_and_check_point(400, 550)
-    # UtilsFunc().load_and_check_point(500, 700)
-    # UtilsFunc().load_and_check_point(10, 850)
Index: NoiseConfigs/noiseConfig.py
===================================================================
diff --git a/NoiseConfigs/noiseConfig.py b/NoiseConfigs/noiseConfig.py
deleted file mode 100644
--- a/NoiseConfigs/noiseConfig.py	
+++ /dev/null	
@@ -1,204 +0,0 @@
-import random
-
-
-class NoiseConfig:
-    # parent class Traffic
-    class TrafficNoiseConfig:
-        MAX_NOISE: float
-        Q3_NOISE: float
-        MEAN_NOISE: float
-        Q1_NOISE: float
-        MIN_NOISE: float
-
-        def __init__(self, max_noise=None, q3_noise=None, mean_noise=None, q1_noise=None, min_noise=None):
-            self.MAX_NOISE = max_noise
-            self.Q3_NOISE = q3_noise
-            self.MEAN_NOISE = mean_noise
-            self.Q1_NOISE = q1_noise
-            self.MIN_NOISE = min_noise
-
-        def random_noise(self) -> float:
-            # produce random number with gaussian distribution
-            sigma = (self.Q3_NOISE - self.Q1_NOISE) / 1.35  # 1.35 due to IQR
-            random_number = random.gauss(mu=self.MEAN_NOISE, sigma=sigma)
-            return random_number-200
-
-    class GreenTraffic(TrafficNoiseConfig):
-        def __init__(self):
-            super().__init__(max_noise=65, q3_noise=60, mean_noise=55, q1_noise=50, min_noise=45)
-
-    class OrangeTraffic(TrafficNoiseConfig):
-        def __init__(self):
-            super().__init__(max_noise=70, q3_noise=65, mean_noise=60, q1_noise=55, min_noise=50)
-
-    class RedTraffic(TrafficNoiseConfig):
-        def __init__(self):
-            super().__init__(max_noise=75, q3_noise=70, mean_noise=65, q1_noise=60, min_noise=55)
-
-    class BlackTraffic(TrafficNoiseConfig):
-        def __init__(self):
-            super().__init__(max_noise=80, q3_noise=75, mean_noise=70, q1_noise=65, min_noise=60)
-
-    # parent class Urban
-    class UrbanNoiseConfig:
-        variance: float = (1.366 - 1.239) / 1.35  # different of mean (Q1, Q3) of real data /IQR
-        baseCoff: float
-
-        def __init__(self, baseCoff):
-            self.baseCoff = baseCoff
-
-        def random_noise_coff(self) -> float:
-            # produce random number with gaussian distribution
-            sigma = self.variance
-            random_number = random.gauss(mu=self.baseCoff, sigma=sigma)
-            return random_number
-
-    class Rural(UrbanNoiseConfig):
-        def __init__(self):
-            super().__init__(2)
-
-    class GoodUrban(UrbanNoiseConfig):
-        def __init__(self):
-            super().__init__(2.7)
-
-    class MediumUrban(UrbanNoiseConfig):
-        def __init__(self):
-            super().__init__(3.2)
-
-    class BadUrban(UrbanNoiseConfig):
-        def __init__(self):
-            super().__init__(3.7)
-
-    # TODO: Add Rain Noise
-
-    class RainNoiseConfig:
-        baseAttenuation: float = 0
-        variance: float = 0.5  # selected by my observation and idea
-
-        def __init__(self, baseAttenuation, variance=variance):
-            self.baseAttenuation = baseAttenuation
-            self.variance = variance
-
-        def random_noise(self) -> float:
-            # produce random number with gaussian distribution
-            sigma = self.variance
-            random_number = random.gauss(mu=self.baseAttenuation, sigma=sigma)
-            return random_number
-
-    class Rain0(RainNoiseConfig):
-        def __init__(self):
-            super().__init__(0, 0.2)
-
-        #  override random noise for this condition
-        def random_noise(self) -> float:
-            random_number = super().random_noise()
-            if random_number < 0:
-                return 0
-            else:
-                return random_number
-
-    class Rain13(RainNoiseConfig):
-        def __init__(self):
-            super().__init__(baseAttenuation=1)
-
-    class Rain23(RainNoiseConfig):
-        def __init__(self):
-            super().__init__(baseAttenuation=2)
-
-    class Rain50(RainNoiseConfig):
-        def __init__(self):
-            super().__init__(baseAttenuation=4)
-
-    class Rain100(RainNoiseConfig):
-        def __init__(self):
-            super().__init__(baseAttenuation=5)
-
-    class Rain150(RainNoiseConfig):
-        def __init__(self):
-            super().__init__(baseAttenuation=7)
-
-    class Rain200(RainNoiseConfig):
-        def __init__(self):
-            super().__init__(baseAttenuation=9)
-
-
-# test functions
-if __name__ == "__main__":
-    # test Rain Noise
-    Rain0 = NoiseConfig.Rain0()
-    Rain13 = NoiseConfig.Rain13()
-    Rain23 = NoiseConfig.Rain23()
-    Rain50 = NoiseConfig.Rain50()
-    Rain100 = NoiseConfig.Rain100()
-    Rain150 = NoiseConfig.Rain150()
-    Rain200 = NoiseConfig.Rain200()
-
-    print(f"Rain Noise0: {Rain0.random_noise()} ")
-    print(f"Rain Noise13: {Rain13.random_noise()} ")
-    print(f"Rain Noise23: {Rain23.random_noise()} ")
-    print(f"Rain Noise50: {Rain50.random_noise()} ")
-    print(f"Rain Noise100: {Rain100.random_noise()} ")
-    print(f"Rain Noise150: {Rain150.random_noise()} ")
-    print(f"Rain Noise200: {Rain200.random_noise()} \n")
-    x = 0
-    y1 = 0
-    miny1=13
-    maxY1=0
-    for i in range(0, 100):
-        x += Rain0.random_noise()
-        z = Rain50.random_noise()
-        y1 += z
-        if z < miny1:
-            miny1 = z
-        if z > maxY1:
-            maxY1 = z
-
-    print(f"avg Rain Noise0 : {x / 100}")
-    print(f"avg Rain Noise50 : {y1 / 100}")
-    print(f"min Rain Noise50 : {miny1}")
-    print(f"max Rain Noise50 : {maxY1}\n")
-
-    # test Urban Noise
-    rural = NoiseConfig.Rural()
-    goodUrban = NoiseConfig.GoodUrban()
-    mediumUrban = NoiseConfig.MediumUrban()
-    badUrban = NoiseConfig.BadUrban()
-
-    print(f"rural random noise coff: {rural.random_noise_coff()} ")
-    print(f"goodUrban random noise coff: {goodUrban.random_noise_coff()} ")
-    print(f"mediumUrban random noise coff: {mediumUrban.random_noise_coff()} ")
-    print(f"badUrban random noise coff: {badUrban.random_noise_coff()} \n")
-    x = 0
-    y1 = 0
-    y2 = 0
-    y3 = 0
-    for i in range(0, 100):
-        x += rural.random_noise_coff()
-        y1 += goodUrban.random_noise_coff()
-        y2 += mediumUrban.random_noise_coff()
-        y3 += badUrban.random_noise_coff()
-    print(f"avg rural coff : {x / 100}")
-    print(f"avg goodUrban coff : {y1 / 100}")
-    print(f"avg mediumUrban coff : {y2 / 100}")
-    print(f"avg badUrban coff : {y3 / 100}\n")
-
-    # test Traffic Noise
-    black_traffic = NoiseConfig.BlackTraffic()
-    red_traffic = NoiseConfig.RedTraffic()
-    orange_traffic = NoiseConfig.OrangeTraffic()
-    green_traffic = NoiseConfig.GreenTraffic()
-    # x = 0
-    # l1 = 0
-    # l2 = 0
-    # for i in range(0, 100):
-    #     x = black_traffic.random_noise()
-    #     if x > 65 or x < 45:
-    #         l1 += 1
-    #     if 60 > x > 50:
-    #         l2 += 1
-
-    # print(f"l1:{l1}, l2:{l2}")
-    print("Black Traffic Random Noise:", black_traffic.random_noise())
-    print("Red Traffic Random Noise:", red_traffic.random_noise())
-    print("Orange Traffic Random Noise:", orange_traffic.random_noise())
-    print("Green Traffic Random Noise:", green_traffic.random_noise())
Index: NoiseConfigs/NoUse/HexPartitionGeneratorWithFactory.py
===================================================================
diff --git a/NoiseConfigs/NoUse/HexPartitionGeneratorWithFactory.py b/NoiseConfigs/NoUse/HexPartitionGeneratorWithFactory.py
deleted file mode 100644
--- a/NoiseConfigs/NoUse/HexPartitionGeneratorWithFactory.py	
+++ /dev/null	
@@ -1,106 +0,0 @@
-import math
-import random
-from noiseConfigGeneralAttribute import NoiseConfigGeneralAttribute
-
-
-class CodeGenerator:
-    def __init__(self, width, height, radius, n):
-        self.width = width
-        self.height = height
-        self.radius = radius
-        self.hex_height = 2 * radius
-        self.hex_width = math.sqrt(3) * radius
-        self.row_spacing = 0.75 * self.hex_height
-        self.n = n
-
-    def generate_partition_class(self, index, center_x, center_y, is_factory):
-        rain_status = random.choice(NoiseConfigGeneralAttribute.Rain_options)
-        traffic_status = random.choice(NoiseConfigGeneralAttribute.Traffic_options)
-        urban_status = random.choice(NoiseConfigGeneralAttribute.Urban_options)
-
-        class_name = f"Partition{index}"
-        return f"""
-class {class_name}(Partitions):
-    rainStatus = {rain_status}
-    trafficStatus = {traffic_status}
-    urbanStatus = {urban_status}
-    is_factory = {is_factory}
-    center_x = {center_x}
-    center_y = {center_y}
-
-    def __init__(self):
-        super().__init__({class_name}.center_x, {class_name}.center_y, {self.radius}, {class_name}.rainStatus, {class_name}.trafficStatus, {class_name}.urbanStatus, {class_name}.is_factory)
-"""
-
-    def generate_code(self):
-        header = """
-#this file has been generated by HexPartitionGeneratorWithFactory.py
-
-from NoiseConfigs.noiseConfigGeneralAttribute import NoiseConfigGeneralAttribute
-from noiseConfig import NoiseConfig
-from typing import Optional, Dict
-from utilsFunctions import UtilsFunc
-import random
-
-
-class Partitions:
-    centerX: float
-    centerY: float
-    radius: float
-    rainStatus: Optional[NoiseConfig.RainNoiseConfig]
-    trafficStatus: Optional[NoiseConfig.TrafficNoiseConfig]
-    urbanStatus: Optional[NoiseConfig.UrbanNoiseConfig]
-    is_factory: bool
-
-    def __init__(self, centerX, centerY, radius, rainStatus, trafficStatus, urbanStatus, is_factory):
-        self.centerX = centerX
-        self.centerY = centerY
-        self.radius = radius
-        self.rainStatus = rainStatus
-        self.trafficStatus = trafficStatus
-        self.urbanStatus = urbanStatus
-        self.is_factory = is_factory
-
-    def change_rainStatus(self):
-        # todo: maybe need to change this to have a more reasonable environment
-        self.rainStatus = random.choice(NoiseConfigGeneralAttribute.Rain_options)
-
-    def update_traffic_status(self, traffic_statuses: Dict["Partitions", NoiseConfig.TrafficNoiseConfig]):
-        if self in traffic_statuses:
-            self.trafficStatus = traffic_statuses[self]
-"""
-
-        classes = []
-        index = 1
-
-        max_rows = int(math.ceil(self.height / self.row_spacing))
-        max_cols = int(math.ceil(self.width / self.hex_width))
-
-        for row in range(0, max_rows + 1):
-            row_is_even = (row % 2 == 0)
-            start_x = 0.0 if row_is_even else (self.hex_width / 2.0)
-
-            center_y = row * self.row_spacing
-
-            for col in range(0, max_cols + 1):
-                center_x = start_x + col * self.hex_width
-
-                is_factory = True if index <= self.n else False
-                classes.append(self.generate_partition_class(index, center_x, center_y, is_factory))
-                index += 1
-
-        return header + "\n".join(classes)
-
-
-# Example usage
-width = 4300
-height = 3400
-radius = 150
-n = 10
-generator = CodeGenerator(width, height, radius, n)
-code = generator.generate_code()
-
-with open("generated_hex_partitionsWithFactory.py", "w") as file:
-    file.write(code)
-
-print("Code generated and saved to generated_hex_partitionsWithFactory.py")
Index: controllers/zone_managers/heuristic2.py
===================================================================
diff --git a/controllers/zone_managers/heuristic2.py b/controllers/zone_managers/heuristic2.py
deleted file mode 100644
--- a/controllers/zone_managers/heuristic2.py	
+++ /dev/null	
@@ -1,56 +0,0 @@
-from typing import Unpack
-
-import numpy as np
-
-from controllers.zone_managers.base import ZoneManagerABC, ZoneManagerUpdate
-from models.node.fog import FixedFogNode, FogLayerABC
-from models.node.base import MobileNodeABC
-from models.task import Task
-
-
-class HeuristicZoneManager2(ZoneManagerABC):
-    def assign_task(self, task: Task) -> FogLayerABC:
-        if task.creator.can_offload_task(task):
-            return task.creator
-
-        creator = task.creator
-        nearest_distance = float('inf')
-        nearest_fog_node = None
-        for node in self.all_possible_nodes.values():
-            next_dis = self.get_next_distance(task, creator, node)
-            if nearest_fog_node is None or next_dis < nearest_distance:
-                nearest_fog_node = node
-                nearest_distance = next_dis
-        return nearest_fog_node
-
-    @staticmethod
-    def get_next_distance(task: Task, creator: MobileNodeABC, executor: MobileNodeABC) -> float:
-        time = task.exec_time
-        creator_next_position_x = (creator.x + creator.speed * time * np.cos(np.deg2rad(creator.angle)))
-        creator_next_position_y = (creator.y + creator.speed * time * np.sin(np.deg2rad(creator.angle)))
-
-        if isinstance(executor, FixedFogNode):
-            executor_next_position_x = executor.x
-            executor_next_position_y = executor.y
-        else:
-            executor_next_position_x = (executor.x + executor.speed * time * np.cos(np.deg2rad(executor.angle)))
-            executor_next_position_y = (executor.y + executor.speed * time * np.sin(np.deg2rad(executor.angle)))
-
-        return np.sqrt(
-            (creator_next_position_y - executor_next_position_y) ** 2 +
-            (creator_next_position_x - executor_next_position_x) ** 2
-        )
-
-    def can_offload_task(self, task: Task) -> bool:
-        if task.creator.can_offload_task(task):
-            return True
-
-        all_fog_nodes: [str, FogLayerABC] = {**self.fixed_fog_nodes, **self.mobile_fog_nodes}
-        self.all_possible_nodes: dict[str, FogLayerABC] = {}
-        for node in all_fog_nodes.values():
-            if node.can_offload_task(task):
-                self.all_possible_nodes[node.id] = node
-        return len(self.all_possible_nodes) > 0
-
-    def update(self, **kwargs: Unpack[ZoneManagerUpdate]):
-        pass
Index: NoiseConfigs/noiseConfigGeneralAttribute.py
===================================================================
diff --git a/NoiseConfigs/noiseConfigGeneralAttribute.py b/NoiseConfigs/noiseConfigGeneralAttribute.py
deleted file mode 100644
--- a/NoiseConfigs/noiseConfigGeneralAttribute.py	
+++ /dev/null	
@@ -1,24 +0,0 @@
-class NoiseConfigGeneralAttribute:
-    Rain_options = [
-        "NoiseConfig.Rain0()",
-        "NoiseConfig.Rain13()",
-        "NoiseConfig.Rain23()",
-        "NoiseConfig.Rain50()",
-        "NoiseConfig.Rain100()",
-        "NoiseConfig.Rain150()",
-        "NoiseConfig.Rain200()",
-    ]
-
-    Traffic_options = [
-        "NoiseConfig.BlackTraffic()",
-        "NoiseConfig.RedTraffic()",
-        "NoiseConfig.OrangeTraffic()",
-        "NoiseConfig.GreenTraffic()",
-    ]
-
-    Urban_options = [
-        "NoiseConfig.Rural()",
-        "NoiseConfig.GoodUrban()",
-        "NoiseConfig.MediumUrban()",
-        "NoiseConfig.BadUrban()",
-    ]
Index: controllers/metric.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from collections import defaultdict\r\n\r\n\r\nclass MetricsController:\r\n    \"\"\"Gathers and store all statistics metrics in our system.\"\"\"\r\n\r\n    def __init__(self):\r\n        # General Metrics\r\n        self.no_device_found_to_run_becauseOf_Noise = 0\r\n        self.migrations_count = 0  # Total number of migrations happened in system.\r\n        self.deadline_misses = 0  # Total number of deadline misses happened in system.\r\n        self.no_resource_found = 0  # Total number of tasks that did not find resource to execute in system.\r\n        self.migrate_and_miss = 0\r\n        self.local_execution = 0\r\n        self.total_tasks = 0  # Total number of tasks processed in system.\r\n        self.cloud_tasks = 0  # Total number of tasks offloaded to cloud server.\r\n        self.completed_tasks = 0  # Total number of tasks completed in system.\r\n        self.packet_loss = 0\r\n\r\n        # Per Node Metrics\r\n        self.node_task_counts: dict[str, int] = defaultdict(int)\r\n\r\n        # Per Step Metrics\r\n        self.migration_counts_per_step: list[int] = []\r\n        self.deadline_misses_per_step: list[int] = []\r\n        self.completed_task_per_step: list[int] = []\r\n        self.current_step_migrations = 0\r\n        self.current_step_deadline_misses = 0\r\n        self.current_step_completed_tasks = 0\r\n\r\n        # Per task metrics\r\n        self.task_load_diff: dict[int, tuple[float, float]] = {}\r\n\r\n    def inc_task_load_diff(self, task_id:int, min_load: float, max_load: float):\r\n        self.task_load_diff[task_id] = (min_load, max_load)\r\n\r\n    def inc_local_execution(self):\r\n        self.local_execution += 1\r\n\r\n    def inc_migrate_and_miss(self):\r\n        self.migrate_and_miss += 1\r\n\r\n    def inc_completed_task(self):\r\n        self.current_step_completed_tasks += 1\r\n        self.completed_tasks += 1\r\n\r\n    def inc_migration(self):\r\n        self.current_step_migrations += 1\r\n        self.migrations_count += 1\r\n\r\n    def inc_no_resource_found(self):\r\n        self.current_step_deadline_misses += 1\r\n        self.deadline_misses += 1\r\n        self.no_resource_found += 1\r\n\r\n    def inc_deadline_miss(self):\r\n        self.current_step_deadline_misses += 1\r\n        self.deadline_misses += 1\r\n\r\n    def inc_total_tasks(self):\r\n        self.total_tasks += 1\r\n\r\n    def inc_node_tasks(self, node_id: str):\r\n        self.node_task_counts[node_id] += 1\r\n\r\n    def inc_cloud_tasks(self):\r\n        self.cloud_tasks += 1\r\n\r\n    def inc_packet_loss(self):\r\n        self.packet_loss += 1\r\n\r\n    def inc_no_device_found_to_run_becauseOf_Noise(self):\r\n        self.no_device_found_to_run_becauseOf_Noise += 1\r\n\r\n    def flush(self):\r\n        self.migration_counts_per_step.append(self.current_step_migrations)\r\n        self.deadline_misses_per_step.append(self.current_step_deadline_misses)\r\n        self.completed_task_per_step.append(self.current_step_completed_tasks)\r\n        self.current_step_deadline_misses = 0\r\n        self.current_step_migrations = 0\r\n        self.current_step_completed_tasks = 0\r\n\r\n    def log_metrics(self):\r\n        print(\"Metrics:\")\r\n        print(f\"\\tTotal packet loss: {self.packet_loss}\")\r\n        print(f\"\\tTotal no_device_found_to_run_becauseOf_Noise: {self.no_device_found_to_run_becauseOf_Noise}\")\r\n        print(f\"\\tTotal migrations: {self.migrations_count}\")\r\n        print(f\"\\tTotal deadline misses: {self.deadline_misses}\")\r\n        print(f\"\\tTotal migrate and misses: {self.migrate_and_miss}\")\r\n        print(f\"\\tTotal cloud tasks: {self.cloud_tasks}\")\r\n        print(f\"\\tTotal local execution tasks: {self.local_execution}\")\r\n        print(f\"\\tTotal completed tasks: {self.completed_tasks}\")\r\n        print(f\"\\tTotal tasks: {self.total_tasks}\")\r\n        if self.total_tasks != 0:\r\n            print(f\"\\tPacket loss ratio: {'{:.3f}'.format(self.packet_loss * 100 / self.total_tasks)}%\")\r\n            print(f\"\\tMigration ratio: {'{:.3f}'.format(self.migrations_count * 100 / self.total_tasks)}%\")\r\n            print(f\"\\tDeadline miss ratio: {'{:.3f}'.format(self.deadline_misses * 100 / self.total_tasks)}%\")\r\n            if self.deadline_misses:\r\n                print(\r\n                    f\"\\tNo Resource found by deadline miss ratio: \"\r\n                    f\"{'{:.3f}'.format(self.no_resource_found * 100 / self.deadline_misses)}%\"\r\n                )\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/metric.py b/controllers/metric.py
--- a/controllers/metric.py	
+++ b/controllers/metric.py	
@@ -6,7 +6,6 @@
 
     def __init__(self):
         # General Metrics
-        self.no_device_found_to_run_becauseOf_Noise = 0
         self.migrations_count = 0  # Total number of migrations happened in system.
         self.deadline_misses = 0  # Total number of deadline misses happened in system.
         self.no_resource_found = 0  # Total number of tasks that did not find resource to execute in system.
@@ -15,7 +14,6 @@
         self.total_tasks = 0  # Total number of tasks processed in system.
         self.cloud_tasks = 0  # Total number of tasks offloaded to cloud server.
         self.completed_tasks = 0  # Total number of tasks completed in system.
-        self.packet_loss = 0
 
         # Per Node Metrics
         self.node_task_counts: dict[str, int] = defaultdict(int)
@@ -66,12 +64,6 @@
     def inc_cloud_tasks(self):
         self.cloud_tasks += 1
 
-    def inc_packet_loss(self):
-        self.packet_loss += 1
-
-    def inc_no_device_found_to_run_becauseOf_Noise(self):
-        self.no_device_found_to_run_becauseOf_Noise += 1
-
     def flush(self):
         self.migration_counts_per_step.append(self.current_step_migrations)
         self.deadline_misses_per_step.append(self.current_step_deadline_misses)
@@ -82,8 +74,6 @@
 
     def log_metrics(self):
         print("Metrics:")
-        print(f"\tTotal packet loss: {self.packet_loss}")
-        print(f"\tTotal no_device_found_to_run_becauseOf_Noise: {self.no_device_found_to_run_becauseOf_Noise}")
         print(f"\tTotal migrations: {self.migrations_count}")
         print(f"\tTotal deadline misses: {self.deadline_misses}")
         print(f"\tTotal migrate and misses: {self.migrate_and_miss}")
@@ -92,7 +82,6 @@
         print(f"\tTotal completed tasks: {self.completed_tasks}")
         print(f"\tTotal tasks: {self.total_tasks}")
         if self.total_tasks != 0:
-            print(f"\tPacket loss ratio: {'{:.3f}'.format(self.packet_loss * 100 / self.total_tasks)}%")
             print(f"\tMigration ratio: {'{:.3f}'.format(self.migrations_count * 100 / self.total_tasks)}%")
             print(f"\tDeadline miss ratio: {'{:.3f}'.format(self.deadline_misses * 100 / self.total_tasks)}%")
             if self.deadline_misses:
Index: controllers/finalChoice.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/finalChoice.py b/controllers/finalChoice.py
new file mode 100644
--- /dev/null	
+++ b/controllers/finalChoice.py	
@@ -0,0 +1,60 @@
+import math
+import random
+
+from config import Config
+
+def red_bg(text):
+    return f"\033[41m{text}\033[0m"
+
+
+class FinalChoice:
+
+    def makeFinalChoice(self, finalCandidates, method):
+        if len(finalCandidates) > 0:
+
+            if method == Config.FinalDeciderMethod.RANDOM_CHOICE:
+                return self.randomMethod(finalCandidates)
+
+            elif method == Config.FinalDeciderMethod.FIRST_CHOICE:
+                return finalCandidates[0]
+
+            elif method == Config.FinalDeciderMethod.MIN_DISTANCE:
+                return self.minDistanceMethod(finalCandidates)
+
+    def randomMethod(self, attenuationList):
+        valid_entries = self.calcValidEntries(attenuationList)
+        # print(f"valid_entries:{valid_entries}")
+        return random.choice(valid_entries)
+
+    def calcValidEntries(self, attenuationList):
+        valid_entries = []
+
+        for i in range(0, len(attenuationList)):
+            valid_entries.append(attenuationList[i])
+
+        return valid_entries
+
+    def minDistanceMethod(self, finalCandidates):
+        x = self.minDistanceItem(finalCandidates)
+        data = x[0]
+        distance = x[1]
+
+        # print(f"data : {data}, distance : {distance}")
+        return data
+
+    def calcMinDistance(self, zone, offloadedDevice):
+        zoneX = zone.x
+        zoneY = zone.y
+        offloadedDeviceX = offloadedDevice.x
+        offloadedDeviceY = offloadedDevice.y
+        # print(red_bg(f"zoneX: {zoneX}, zoneY: {zoneY}, offloadedDeviceX: {offloadedDeviceX}, offloadedDeviceY: {offloadedDeviceY}"))
+        distance = math.sqrt((offloadedDeviceX - zoneX) ** 2 + (offloadedDeviceY - zoneY) ** 2)
+        return distance
+
+    def minDistanceItem(self, finalCandidates):
+        distances = []
+        for i in range(0, len(finalCandidates)):
+            distances.append(
+                (finalCandidates[i], self.calcMinDistance(finalCandidates[i][0].zone, finalCandidates[i][1])))
+        min_distance = min(distances, key=lambda x: x[1])
+        return min_distance
\ No newline at end of file
Index: controllers/loader.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from collections import defaultdict\r\nfrom typing import Type\r\n\r\nfrom NoiseConfigs.utilsFunctions import UtilsFunc\r\nfrom controllers.zone_managers.base import ZoneManagerABC\r\nfrom controllers.zone_managers.heuristic import HeuristicZoneManager\r\nfrom controllers.zone_managers.heuristic2 import HeuristicZoneManager2\r\nfrom controllers.zone_managers.random import RandomZoneManager\r\nfrom controllers.zone_managers.hrl import HRLZoneManager\r\nfrom controllers.zone_managers.only_cloud import OnlyCloudZoneManager\r\nfrom controllers.zone_managers.only_fog import OnlyFogZoneManager\r\nfrom controllers.zone_managers.deepRL.deep_rl_zone_manager import DeepRLZoneManager\r\nfrom utils.xml_parser import *\r\n\r\n\r\nclass Loader:\r\n    # TODO: Fill this map after adding zone managers completed.\r\n    ALGORITHM_MAP: Dict[str, Type[ZoneManagerABC]] = {\r\n        Config.ZoneManagerConfig.ALGORITHM_RANDOM: RandomZoneManager,\r\n        Config.ZoneManagerConfig.ALGORITHM_HEURISTIC: HeuristicZoneManager,\r\n        Config.ZoneManagerConfig.ALGORITHM_HRL: HRLZoneManager,\r\n        Config.ZoneManagerConfig.ALGORITHM_ONLY_CLOUD: OnlyCloudZoneManager,\r\n        Config.ZoneManagerConfig.ALGORITHM_ONLY_FOG: OnlyFogZoneManager,\r\n        Config.ZoneManagerConfig.ALGORITHM_DEEP_RL: DeepRLZoneManager,\r\n        Config.ZoneManagerConfig.ALGORITHM_HEURISTIC2: HeuristicZoneManager2\r\n    }\r\n\r\n    def __init__(self, zone_file: str, fixed_fn_file: str, mobile_file: str, task_file: str, checkpoint_path: str):\r\n        self.current_chunk = 0\r\n        self.chunk_size = Config.CHUNK_SIZE\r\n        self.zone_parser = ZoneSumoXMLParser(zone_file)\r\n        self.fixed_fn_parser = FixedFogNodeSumoXMLParser(fixed_fn_file)\r\n        self.mobile_chunk_path = mobile_file\r\n        self.mobile_node_parser = MobileNodeSumoXMLParser(mobile_file, 0)\r\n        self.task_chunk_path = task_file\r\n        self.task_parser = TaskSumoXMLParser(task_file, 0)\r\n        self.checkpoint_path = checkpoint_path\r\n\r\n    def __load_next_chunk(self, time_step: float):\r\n        if self.get_chunk(time_step - 1) != self.current_chunk and time_step != 0:\r\n            self.mobile_node_parser = MobileNodeSumoXMLParser(self.mobile_chunk_path, self.get_chunk(time_step))\r\n            self.task_parser = TaskSumoXMLParser(self.task_chunk_path, self.get_chunk(time_step))\r\n            self.current_chunk = self.get_chunk(time_step)\r\n\r\n    def get_chunk(self, time_step: float) -> int:\r\n        return round(time_step) // self.chunk_size\r\n\r\n    def load_zones(self) -> Dict[str, ZoneManagerABC]:\r\n        zone_managers: Dict[str, ZoneManagerABC] = {}\r\n\r\n        zones = self.zone_parser.parse()\r\n\r\n        # note: removed!\r\n        # partitions = UtilsFunc.load_partitions(\"generated_hex_partitions\")\r\n        # factory_partitions = self.findAllFactoryPartitions(partitions)\r\n\r\n        for zone in zones:\r\n            # print(f\"zone : {zone}\")\r\n            # todo: add HRL\r\n            # zonePartition = UtilsFunc.find_partition(partitions, zone.x, zone.y)\r\n            # print(f\"zonePartition: {zonePartition.centerX, zonePartition.centerY}\")\r\n            # for fp in factory_partitions:\r\n            #     print(f\"factory_partitions: {fp.centerX, fp.centerY }\")\r\n            #\r\n            # if any(zonePartition.centerX == fp.centerX and zonePartition.centerY == fp.centerY for fp in factory_partitions):\r\n            #     print(\"OOOOOOOOOOOOOOOOOOOOOOOOOOOOOMMMMMMMMMMMMMMMMMMMAAAAAAAAAAAAAAAAAADDDDDDDDDDDDDDDDDDD\")\r\n            #     zone_manager_cls = self.ALGORITHM_MAP[Config.ZoneManagerConfig.ALGORITHM_RANDOM]\r\n\r\n            # else:\r\n            # print(\"yes\")\r\n            zone_manager_cls = self.ALGORITHM_MAP[Config.ZoneManagerConfig.DEFAULT_ALGORITHM]\r\n\r\n            zone_manager_obj = zone_manager_cls(zone)\r\n\r\n            # If using DeepRL, set the simulator reference\r\n            # if isinstance(zone_manager_obj, DeepRLZoneManager):\r\n            #     zone_manager_obj.env.simulator = self  # ✅ Attach the simulator to the DeepRL environment\r\n\r\n            zone_managers[zone.id] = zone_manager_obj\r\n\r\n            if isinstance(zone_manager_obj, HRLZoneManager):\r\n                zone_manager_obj.load_checkpoint(self.checkpoint_path)\r\n\r\n        return zone_managers\r\n\r\n    def load_fixed_zones(self) -> Dict[str, FixedFogNode]:\r\n        fixed_fog_nodes: Dict[str, FixedFogNode] = {}\r\n\r\n        for fixed_node in self.fixed_fn_parser.parse():\r\n            fixed_fog_nodes[fixed_node.id] = fixed_node\r\n        return fixed_fog_nodes\r\n\r\n    def load_mobile_fog_nodes(self, time_step: float) -> Dict[str, MobileFogNode]:\r\n        self.__load_next_chunk(time_step)\r\n        mobile_fog_nodes: Dict[str, MobileFogNode] = {}\r\n\r\n        if time_step < Config.SimulatorConfig.SIMULATION_DURATION - 1:\r\n            for mobile_node in self.mobile_node_parser.parse()[time_step][1]:\r\n                mobile_fog_nodes[mobile_node.id] = mobile_node\r\n\r\n        return mobile_fog_nodes\r\n\r\n    def load_user_nodes(self, time_step: float) -> Dict[str, UserNode]:\r\n        self.__load_next_chunk(time_step)\r\n        user_fog_nodes: Dict[str, UserNode] = {}\r\n\r\n        if time_step < Config.SimulatorConfig.SIMULATION_DURATION:\r\n            for user_node in self.mobile_node_parser.parse()[time_step][0]:\r\n                user_fog_nodes[user_node.id] = user_node\r\n        return user_fog_nodes\r\n\r\n    def load_nodes_tasks(self, time_step: float) -> Dict[str, List[Task]]:\r\n        self.__load_next_chunk(time_step)\r\n        tasks: Dict[str, List[Task]] = defaultdict(list)\r\n\r\n        for task in self.task_parser.parse().get(time_step, []):\r\n            tasks[task.creator_id].append(task)\r\n        return tasks\r\n\r\n    # def findAllFactoryPartitions(self, partitions):\r\n    #     temp = []\r\n    #     for partition in partitions:\r\n    #         if partition.is_factory:\r\n    #             temp.append(partition)\r\n    #     return temp\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/loader.py b/controllers/loader.py
--- a/controllers/loader.py	
+++ b/controllers/loader.py	
@@ -1,10 +1,8 @@
 from collections import defaultdict
 from typing import Type
 
-from NoiseConfigs.utilsFunctions import UtilsFunc
 from controllers.zone_managers.base import ZoneManagerABC
 from controllers.zone_managers.heuristic import HeuristicZoneManager
-from controllers.zone_managers.heuristic2 import HeuristicZoneManager2
 from controllers.zone_managers.random import RandomZoneManager
 from controllers.zone_managers.hrl import HRLZoneManager
 from controllers.zone_managers.only_cloud import OnlyCloudZoneManager
@@ -22,7 +20,6 @@
         Config.ZoneManagerConfig.ALGORITHM_ONLY_CLOUD: OnlyCloudZoneManager,
         Config.ZoneManagerConfig.ALGORITHM_ONLY_FOG: OnlyFogZoneManager,
         Config.ZoneManagerConfig.ALGORITHM_DEEP_RL: DeepRLZoneManager,
-        Config.ZoneManagerConfig.ALGORITHM_HEURISTIC2: HeuristicZoneManager2
     }
 
     def __init__(self, zone_file: str, fixed_fn_file: str, mobile_file: str, task_file: str, checkpoint_path: str):
@@ -55,19 +52,6 @@
         # factory_partitions = self.findAllFactoryPartitions(partitions)
 
         for zone in zones:
-            # print(f"zone : {zone}")
-            # todo: add HRL
-            # zonePartition = UtilsFunc.find_partition(partitions, zone.x, zone.y)
-            # print(f"zonePartition: {zonePartition.centerX, zonePartition.centerY}")
-            # for fp in factory_partitions:
-            #     print(f"factory_partitions: {fp.centerX, fp.centerY }")
-            #
-            # if any(zonePartition.centerX == fp.centerX and zonePartition.centerY == fp.centerY for fp in factory_partitions):
-            #     print("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOMMMMMMMMMMMMMMMMMMMAAAAAAAAAAAAAAAAAADDDDDDDDDDDDDDDDDDD")
-            #     zone_manager_cls = self.ALGORITHM_MAP[Config.ZoneManagerConfig.ALGORITHM_RANDOM]
-
-            # else:
-            # print("yes")
             zone_manager_cls = self.ALGORITHM_MAP[Config.ZoneManagerConfig.DEFAULT_ALGORITHM]
 
             zone_manager_obj = zone_manager_cls(zone)
